/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.PayAwardRecordRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayAwardRecord extends TableImpl<PayAwardRecordRecord> {

    private static final long serialVersionUID = 361241513;

    /**
     * The reference instance of <code>mini_shop_4748160.b2c_pay_award_record</code>
     */
    public static final PayAwardRecord PAY_AWARD_RECORD = new PayAwardRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayAwardRecordRecord> getRecordType() {
        return PayAwardRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.id</code>.
     */
    public final TableField<PayAwardRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.user_id</code>. 用户id
     */
    public final TableField<PayAwardRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "用户id");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.award_id</code>. 支付有礼活动id
     */
    public final TableField<PayAwardRecordRecord, Integer> AWARD_ID = createField("award_id", org.jooq.impl.SQLDataType.INTEGER, this, "支付有礼活动id");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.award_prize_id</code>. 支付有礼的奖品Id
     */
    public final TableField<PayAwardRecordRecord, Integer> AWARD_PRIZE_ID = createField("award_prize_id", org.jooq.impl.SQLDataType.INTEGER, this, "支付有礼的奖品Id");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.order_sn</code>. 订单号
     */
    public final TableField<PayAwardRecordRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(50), this, "订单号");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.gift_type</code>. 礼物类型 0 无奖品 1普通优惠卷  2分裂优惠卷 3幸运大抽奖 4 余额 5 商品 6积分 7 自定义
     */
    public final TableField<PayAwardRecordRecord, Byte> GIFT_TYPE = createField("gift_type", org.jooq.impl.SQLDataType.TINYINT, this, "礼物类型 0 无奖品 1普通优惠卷  2分裂优惠卷 3幸运大抽奖 4 余额 5 商品 6积分 7 自定义");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.award_times</code>.
     */
    public final TableField<PayAwardRecordRecord, Integer> AWARD_TIMES = createField("award_times", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.award_data</code>.
     */
    public final TableField<PayAwardRecordRecord, String> AWARD_DATA = createField("award_data", org.jooq.impl.SQLDataType.VARCHAR(599), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.send_data</code>.
     */
    public final TableField<PayAwardRecordRecord, String> SEND_DATA = createField("send_data", org.jooq.impl.SQLDataType.VARCHAR(599), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.status</code>.
     */
    public final TableField<PayAwardRecordRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.keep_days</code>.
     */
    public final TableField<PayAwardRecordRecord, Integer> KEEP_DAYS = createField("keep_days", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.create_time</code>.
     */
    public final TableField<PayAwardRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_award_record.update_time</code>. 最后修改时间
     */
    public final TableField<PayAwardRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_4748160.b2c_pay_award_record</code> table reference
     */
    public PayAwardRecord() {
        this(DSL.name("b2c_pay_award_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_4748160.b2c_pay_award_record</code> table reference
     */
    public PayAwardRecord(String alias) {
        this(DSL.name(alias), PAY_AWARD_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_4748160.b2c_pay_award_record</code> table reference
     */
    public PayAwardRecord(Name alias) {
        this(alias, PAY_AWARD_RECORD);
    }

    private PayAwardRecord(Name alias, Table<PayAwardRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private PayAwardRecord(Name alias, Table<PayAwardRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PayAwardRecord(Table<O> child, ForeignKey<O, PayAwardRecordRecord> key) {
        super(child, key, PAY_AWARD_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PAY_AWARD_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PayAwardRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAY_AWARD_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PayAwardRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_PAY_AWARD_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PayAwardRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<PayAwardRecordRecord>>asList(Keys.KEY_B2C_PAY_AWARD_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayAwardRecord as(String alias) {
        return new PayAwardRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayAwardRecord as(Name alias) {
        return new PayAwardRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PayAwardRecord rename(String name) {
        return new PayAwardRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PayAwardRecord rename(Name name) {
        return new PayAwardRecord(name, null);
    }
}
