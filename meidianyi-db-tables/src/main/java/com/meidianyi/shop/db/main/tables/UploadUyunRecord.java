/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables;


import com.meidianyi.shop.db.main.Indexes;
import com.meidianyi.shop.db.main.Keys;
import com.meidianyi.shop.db.main.MiniMain;
import com.meidianyi.shop.db.main.tables.records.UploadUyunRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UploadUyunRecord extends TableImpl<UploadUyunRecordRecord> {

    private static final long serialVersionUID = 1822431168;

    /**
     * The reference instance of <code>mini_main.b2c_upload_uyun_record</code>
     */
    public static final UploadUyunRecord UPLOAD_UYUN_RECORD = new UploadUyunRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UploadUyunRecordRecord> getRecordType() {
        return UploadUyunRecordRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.record_id</code>.
     */
    public final TableField<UploadUyunRecordRecord, Long> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.shop_id</code>. 店铺ID
     */
    public final TableField<UploadUyunRecordRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "店铺ID");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.file_size</code>. 文件大小
     */
    public final TableField<UploadUyunRecordRecord, Integer> FILE_SIZE = createField("file_size", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "文件大小");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.file_url</code>. 文件url
     */
    public final TableField<UploadUyunRecordRecord, String> FILE_URL = createField("file_url", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "文件url");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.update_timestamp</code>. 文件更新时间戳
     */
    public final TableField<UploadUyunRecordRecord, String> UPDATE_TIMESTAMP = createField("update_timestamp", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "文件更新时间戳");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.update_date</code>. 文件更新日期
     */
    public final TableField<UploadUyunRecordRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "文件更新日期");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.upload_status</code>. 文件上传状态 0：上传成功；1：上传失败（或开关关闭后未上传的文件）
     */
    public final TableField<UploadUyunRecordRecord, Byte> UPLOAD_STATUS = createField("upload_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "文件上传状态 0：上传成功；1：上传失败（或开关关闭后未上传的文件）");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.upload_time</code>. 文件上传时间
     */
    public final TableField<UploadUyunRecordRecord, Timestamp> UPLOAD_TIME = createField("upload_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "文件上传时间");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.fail_reason</code>. 失败原因
     */
    public final TableField<UploadUyunRecordRecord, String> FAIL_REASON = createField("fail_reason", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "失败原因");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.fail_date</code>. 失败时间
     */
    public final TableField<UploadUyunRecordRecord, Timestamp> FAIL_DATE = createField("fail_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "失败时间");

    /**
     * Create a <code>mini_main.b2c_upload_uyun_record</code> table reference
     */
    public UploadUyunRecord() {
        this(DSL.name("b2c_upload_uyun_record"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_upload_uyun_record</code> table reference
     */
    public UploadUyunRecord(String alias) {
        this(DSL.name(alias), UPLOAD_UYUN_RECORD);
    }

    /**
     * Create an aliased <code>mini_main.b2c_upload_uyun_record</code> table reference
     */
    public UploadUyunRecord(Name alias) {
        this(alias, UPLOAD_UYUN_RECORD);
    }

    private UploadUyunRecord(Name alias, Table<UploadUyunRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private UploadUyunRecord(Name alias, Table<UploadUyunRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UploadUyunRecord(Table<O> child, ForeignKey<O, UploadUyunRecordRecord> key) {
        super(child, key, UPLOAD_UYUN_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UPLOAD_UYUN_RECORD_FILE_URL, Indexes.UPLOAD_UYUN_RECORD_PRIMARY, Indexes.UPLOAD_UYUN_RECORD_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UploadUyunRecordRecord, Long> getIdentity() {
        return Keys.IDENTITY_UPLOAD_UYUN_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UploadUyunRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_UPLOAD_UYUN_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UploadUyunRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<UploadUyunRecordRecord>>asList(Keys.KEY_B2C_UPLOAD_UYUN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UploadUyunRecord as(String alias) {
        return new UploadUyunRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UploadUyunRecord as(Name alias) {
        return new UploadUyunRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UploadUyunRecord rename(String name) {
        return new UploadUyunRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UploadUyunRecord rename(Name name) {
        return new UploadUyunRecord(name, null);
    }
}
