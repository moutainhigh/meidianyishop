/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.BargainUserListRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BargainUserList extends TableImpl<BargainUserListRecord> {

    private static final long serialVersionUID = -355985282;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_bargain_user_list</code>
     */
    public static final BargainUserList BARGAIN_USER_LIST = new BargainUserList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BargainUserListRecord> getRecordType() {
        return BargainUserListRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_bargain_user_list.id</code>.
     */
    public final TableField<BargainUserListRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_user_list.record_id</code>. 对应b2c_bargain_record表id
     */
    public final TableField<BargainUserListRecord, Integer> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "对应b2c_bargain_record表id");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_user_list.user_id</code>.
     */
    public final TableField<BargainUserListRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_user_list.bargain_money</code>.
     */
    public final TableField<BargainUserListRecord, BigDecimal> BARGAIN_MONEY = createField("bargain_money", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_user_list.create_time</code>.
     */
    public final TableField<BargainUserListRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_user_list.update_time</code>. 最后修改时间
     */
    public final TableField<BargainUserListRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_bargain_user_list</code> table reference
     */
    public BargainUserList() {
        this(DSL.name("b2c_bargain_user_list"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_bargain_user_list</code> table reference
     */
    public BargainUserList(String alias) {
        this(DSL.name(alias), BARGAIN_USER_LIST);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_bargain_user_list</code> table reference
     */
    public BargainUserList(Name alias) {
        this(alias, BARGAIN_USER_LIST);
    }

    private BargainUserList(Name alias, Table<BargainUserListRecord> aliased) {
        this(alias, aliased, null);
    }

    private BargainUserList(Name alias, Table<BargainUserListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BargainUserList(Table<O> child, ForeignKey<O, BargainUserListRecord> key) {
        super(child, key, BARGAIN_USER_LIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BARGAIN_USER_LIST_BARGAIN_USER, Indexes.BARGAIN_USER_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BargainUserListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BARGAIN_USER_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BargainUserListRecord> getPrimaryKey() {
        return Keys.KEY_B2C_BARGAIN_USER_LIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BargainUserListRecord>> getKeys() {
        return Arrays.<UniqueKey<BargainUserListRecord>>asList(Keys.KEY_B2C_BARGAIN_USER_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BargainUserList as(String alias) {
        return new BargainUserList(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BargainUserList as(Name alias) {
        return new BargainUserList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BargainUserList rename(String name) {
        return new BargainUserList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BargainUserList rename(Name name) {
        return new BargainUserList(name, null);
    }
}
