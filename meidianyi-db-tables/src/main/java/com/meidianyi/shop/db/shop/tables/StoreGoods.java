/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.StoreGoodsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 门店商品管理
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreGoods extends TableImpl<StoreGoodsRecord> {

    private static final long serialVersionUID = 1852770228;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_store_goods</code>
     */
    public static final StoreGoods STORE_GOODS = new StoreGoods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StoreGoodsRecord> getRecordType() {
        return StoreGoodsRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.id</code>.
     */
    public final TableField<StoreGoodsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.store_id</code>.
     */
    public final TableField<StoreGoodsRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.goods_id</code>.
     */
    public final TableField<StoreGoodsRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.goods_common_name</code>.
     */
    public final TableField<StoreGoodsRecord, String> GOODS_COMMON_NAME = createField("goods_common_name", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.goods_quality_ratio</code>.
     */
    public final TableField<StoreGoodsRecord, String> GOODS_QUALITY_RATIO = createField("goods_quality_ratio", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.goods_approval_number</code>.
     */
    public final TableField<StoreGoodsRecord, String> GOODS_APPROVAL_NUMBER = createField("goods_approval_number", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.goods_production_enterprise</code>.
     */
    public final TableField<StoreGoodsRecord, String> GOODS_PRODUCTION_ENTERPRISE = createField("goods_production_enterprise", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.goods_store_sn</code>. 药房商品唯一码
     */
    public final TableField<StoreGoodsRecord, String> GOODS_STORE_SN = createField("goods_store_sn", org.jooq.impl.SQLDataType.VARCHAR(512), this, "药房商品唯一码");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.prd_id</code>.
     */
    public final TableField<StoreGoodsRecord, Integer> PRD_ID = createField("prd_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.prd_sn</code>.
     */
    public final TableField<StoreGoodsRecord, String> PRD_SN = createField("prd_sn", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.product_number</code>. 库存
     */
    public final TableField<StoreGoodsRecord, Integer> PRODUCT_NUMBER = createField("product_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "库存");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.product_price</code>. 价格
     */
    public final TableField<StoreGoodsRecord, BigDecimal> PRODUCT_PRICE = createField("product_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "价格");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.is_sync</code>. 是否已同步
     */
    public final TableField<StoreGoodsRecord, Byte> IS_SYNC = createField("is_sync", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否已同步");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.is_on_sale</code>. '是否在售，1在售，0下架'
     */
    public final TableField<StoreGoodsRecord, Byte> IS_ON_SALE = createField("is_on_sale", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "'是否在售，1在售，0下架'");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.create_time</code>.
     */
    public final TableField<StoreGoodsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.update_time</code>. 最后修改时间
     */
    public final TableField<StoreGoodsRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.flag</code>. 1:初始化数据，0:无效数据
     */
    public final TableField<StoreGoodsRecord, Byte> FLAG = createField("flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1:初始化数据，0:无效数据");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.is_delete</code>. 是否删 0否 1是
     */
    public final TableField<StoreGoodsRecord, Byte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否删 0否 1是");

    /**
     * Create a <code>mini_shop_471752.b2c_store_goods</code> table reference
     */
    public StoreGoods() {
        this(DSL.name("b2c_store_goods"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_store_goods</code> table reference
     */
    public StoreGoods(String alias) {
        this(DSL.name(alias), STORE_GOODS);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_store_goods</code> table reference
     */
    public StoreGoods(Name alias) {
        this(alias, STORE_GOODS);
    }

    private StoreGoods(Name alias, Table<StoreGoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private StoreGoods(Name alias, Table<StoreGoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("门店商品管理"));
    }

    public <O extends Record> StoreGoods(Table<O> child, ForeignKey<O, StoreGoodsRecord> key) {
        super(child, key, STORE_GOODS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STORE_GOODS_PRIMARY, Indexes.STORE_GOODS_STORE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StoreGoodsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STORE_GOODS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StoreGoodsRecord> getPrimaryKey() {
        return Keys.KEY_B2C_STORE_GOODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StoreGoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<StoreGoodsRecord>>asList(Keys.KEY_B2C_STORE_GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreGoods as(String alias) {
        return new StoreGoods(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreGoods as(Name alias) {
        return new StoreGoods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StoreGoods rename(String name) {
        return new StoreGoods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StoreGoods rename(Name name) {
        return new StoreGoods(name, null);
    }
}
