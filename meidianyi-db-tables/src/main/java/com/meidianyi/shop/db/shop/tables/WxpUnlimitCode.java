/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.WxpUnlimitCodeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WxpUnlimitCode extends TableImpl<WxpUnlimitCodeRecord> {

    private static final long serialVersionUID = -1426099658;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_wxp_unlimit_code</code>
     */
    public static final WxpUnlimitCode WXP_UNLIMIT_CODE = new WxpUnlimitCode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WxpUnlimitCodeRecord> getRecordType() {
        return WxpUnlimitCodeRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.code_id</code>. 小程序码id
     */
    public final TableField<WxpUnlimitCodeRecord, Integer> CODE_ID = createField("code_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "小程序码id");

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.scene_id</code>. 对应b2c_wxp_unlimit_scene的scene_id
     */
    public final TableField<WxpUnlimitCodeRecord, String> SCENE_ID = createField("scene_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "对应b2c_wxp_unlimit_scene的scene_id");

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.code_page</code>. 必须是已经发布的小程序存在的页面（否则报错），例如 pages/index/index, 根路径前不要填加 /,不能携带参数（参数请放在scene字段里），如果不填写这个字段，默认跳主页面
     */
    public final TableField<WxpUnlimitCodeRecord, String> CODE_PAGE = createField("code_page", org.jooq.impl.SQLDataType.VARCHAR(191), this, "必须是已经发布的小程序存在的页面（否则报错），例如 pages/index/index, 根路径前不要填加 /,不能携带参数（参数请放在scene字段里），如果不填写这个字段，默认跳主页面");

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.code_url</code>. 小程序码url
     */
    public final TableField<WxpUnlimitCodeRecord, String> CODE_URL = createField("code_url", org.jooq.impl.SQLDataType.VARCHAR(191), this, "小程序码url");

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.code_path</code>. 小程序码本地地址
     */
    public final TableField<WxpUnlimitCodeRecord, String> CODE_PATH = createField("code_path", org.jooq.impl.SQLDataType.VARCHAR(191), this, "小程序码本地地址");

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.create_time</code>.
     */
    public final TableField<WxpUnlimitCodeRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.update_time</code>. 最后修改时间
     */
    public final TableField<WxpUnlimitCodeRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.del_flag</code>.
     */
    public final TableField<WxpUnlimitCodeRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_wxp_unlimit_code.del_time</code>. 删除时间
     */
    public final TableField<WxpUnlimitCodeRecord, Timestamp> DEL_TIME = createField("del_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "删除时间");

    /**
     * Create a <code>mini_shop_471752.b2c_wxp_unlimit_code</code> table reference
     */
    public WxpUnlimitCode() {
        this(DSL.name("b2c_wxp_unlimit_code"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_wxp_unlimit_code</code> table reference
     */
    public WxpUnlimitCode(String alias) {
        this(DSL.name(alias), WXP_UNLIMIT_CODE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_wxp_unlimit_code</code> table reference
     */
    public WxpUnlimitCode(Name alias) {
        this(alias, WXP_UNLIMIT_CODE);
    }

    private WxpUnlimitCode(Name alias, Table<WxpUnlimitCodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private WxpUnlimitCode(Name alias, Table<WxpUnlimitCodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WxpUnlimitCode(Table<O> child, ForeignKey<O, WxpUnlimitCodeRecord> key) {
        super(child, key, WXP_UNLIMIT_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WXP_UNLIMIT_CODE_PRIMARY, Indexes.WXP_UNLIMIT_CODE_SCENE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WxpUnlimitCodeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WXP_UNLIMIT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WxpUnlimitCodeRecord> getPrimaryKey() {
        return Keys.KEY_B2C_WXP_UNLIMIT_CODE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WxpUnlimitCodeRecord>> getKeys() {
        return Arrays.<UniqueKey<WxpUnlimitCodeRecord>>asList(Keys.KEY_B2C_WXP_UNLIMIT_CODE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WxpUnlimitCode as(String alias) {
        return new WxpUnlimitCode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WxpUnlimitCode as(Name alias) {
        return new WxpUnlimitCode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WxpUnlimitCode rename(String name) {
        return new WxpUnlimitCode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WxpUnlimitCode rename(Name name) {
        return new WxpUnlimitCode(name, null);
    }
}
