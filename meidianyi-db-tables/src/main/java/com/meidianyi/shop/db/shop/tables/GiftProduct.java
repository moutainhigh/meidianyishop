/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.GiftProductRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GiftProduct extends TableImpl<GiftProductRecord> {

    private static final long serialVersionUID = -1635418859;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_gift_product</code>
     */
    public static final GiftProduct GIFT_PRODUCT = new GiftProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GiftProductRecord> getRecordType() {
        return GiftProductRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_gift_product.id</code>.
     */
    public final TableField<GiftProductRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_gift_product.gift_id</code>. 赠品活动id
     */
    public final TableField<GiftProductRecord, Integer> GIFT_ID = createField("gift_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "赠品活动id");

    /**
     * The column <code>mini_shop_471752.b2c_gift_product.product_id</code>. 规格id
     */
    public final TableField<GiftProductRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "规格id");

    /**
     * The column <code>mini_shop_471752.b2c_gift_product.product_number</code>. 库存
     */
    public final TableField<GiftProductRecord, Integer> PRODUCT_NUMBER = createField("product_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "库存");

    /**
     * The column <code>mini_shop_471752.b2c_gift_product.create_time</code>.
     */
    public final TableField<GiftProductRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_gift_product.update_time</code>. 最后修改时间
     */
    public final TableField<GiftProductRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_gift_product</code> table reference
     */
    public GiftProduct() {
        this(DSL.name("b2c_gift_product"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_gift_product</code> table reference
     */
    public GiftProduct(String alias) {
        this(DSL.name(alias), GIFT_PRODUCT);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_gift_product</code> table reference
     */
    public GiftProduct(Name alias) {
        this(alias, GIFT_PRODUCT);
    }

    private GiftProduct(Name alias, Table<GiftProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private GiftProduct(Name alias, Table<GiftProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GiftProduct(Table<O> child, ForeignKey<O, GiftProductRecord> key) {
        super(child, key, GIFT_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GIFT_PRODUCT_GIFT_ID, Indexes.GIFT_PRODUCT_PRIMARY, Indexes.GIFT_PRODUCT_PRODUCT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GiftProductRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GIFT_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GiftProductRecord> getPrimaryKey() {
        return Keys.KEY_B2C_GIFT_PRODUCT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GiftProductRecord>> getKeys() {
        return Arrays.<UniqueKey<GiftProductRecord>>asList(Keys.KEY_B2C_GIFT_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GiftProduct as(String alias) {
        return new GiftProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GiftProduct as(Name alias) {
        return new GiftProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GiftProduct rename(String name) {
        return new GiftProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GiftProduct rename(Name name) {
        return new GiftProduct(name, null);
    }
}
