/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.UserCollectionActionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户收藏药品记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserCollectionAction extends TableImpl<UserCollectionActionRecord> {

    private static final long serialVersionUID = -198582405;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user_collection_action</code>
     */
    public static final UserCollectionAction USER_COLLECTION_ACTION = new UserCollectionAction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserCollectionActionRecord> getRecordType() {
        return UserCollectionActionRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user_collection_action.id</code>.
     */
    public final TableField<UserCollectionActionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_collection_action.user_id</code>. 用户ID
     */
    public final TableField<UserCollectionActionRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户ID");

    /**
     * The column <code>mini_shop_471752.b2c_user_collection_action.goods_id</code>. 商品ID
     */
    public final TableField<UserCollectionActionRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品ID");

    /**
     * The column <code>mini_shop_471752.b2c_user_collection_action.collection_type</code>. 收藏/取消：1：收藏，-1：取消
     */
    public final TableField<UserCollectionActionRecord, Byte> COLLECTION_TYPE = createField("collection_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "收藏/取消：1：收藏，-1：取消");

    /**
     * The column <code>mini_shop_471752.b2c_user_collection_action.create_time</code>.
     */
    public final TableField<UserCollectionActionRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_collection_action.update_time</code>. 最后修改时间
     */
    public final TableField<UserCollectionActionRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_user_collection_action</code> table reference
     */
    public UserCollectionAction() {
        this(DSL.name("b2c_user_collection_action"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_collection_action</code> table reference
     */
    public UserCollectionAction(String alias) {
        this(DSL.name(alias), USER_COLLECTION_ACTION);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_collection_action</code> table reference
     */
    public UserCollectionAction(Name alias) {
        this(alias, USER_COLLECTION_ACTION);
    }

    private UserCollectionAction(Name alias, Table<UserCollectionActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserCollectionAction(Name alias, Table<UserCollectionActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户收藏药品记录"));
    }

    public <O extends Record> UserCollectionAction(Table<O> child, ForeignKey<O, UserCollectionActionRecord> key) {
        super(child, key, USER_COLLECTION_ACTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_COLLECTION_ACTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserCollectionActionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_COLLECTION_ACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserCollectionActionRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_COLLECTION_ACTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserCollectionActionRecord>> getKeys() {
        return Arrays.<UniqueKey<UserCollectionActionRecord>>asList(Keys.KEY_B2C_USER_COLLECTION_ACTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserCollectionAction as(String alias) {
        return new UserCollectionAction(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserCollectionAction as(Name alias) {
        return new UserCollectionAction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserCollectionAction rename(String name) {
        return new UserCollectionAction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserCollectionAction rename(Name name) {
        return new UserCollectionAction(name, null);
    }
}
