/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.ShareAwardReceiveRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户领取分享奖励记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShareAwardReceive extends TableImpl<ShareAwardReceiveRecord> {

    private static final long serialVersionUID = 765261129;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_share_award_receive</code>
     */
    public static final ShareAwardReceive SHARE_AWARD_RECEIVE = new ShareAwardReceive();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShareAwardReceiveRecord> getRecordType() {
        return ShareAwardReceiveRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_share_award_receive.id</code>.
     */
    public final TableField<ShareAwardReceiveRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_share_award_receive.user_id</code>. 用户ID
     */
    public final TableField<ShareAwardReceiveRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户ID");

    /**
     * The column <code>mini_shop_471752.b2c_share_award_receive.share_id</code>. 活动ID
     */
    public final TableField<ShareAwardReceiveRecord, Integer> SHARE_ID = createField("share_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "活动ID");

    /**
     * The column <code>mini_shop_471752.b2c_share_award_receive.goods_id</code>. 商品ID
     */
    public final TableField<ShareAwardReceiveRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品ID");

    /**
     * The column <code>mini_shop_471752.b2c_share_award_receive.award_level</code>. 领取的是几级奖励 1,2 3
     */
    public final TableField<ShareAwardReceiveRecord, Byte> AWARD_LEVEL = createField("award_level", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "领取的是几级奖励 1,2 3");

    /**
     * The column <code>mini_shop_471752.b2c_share_award_receive.create_time</code>. 创建时间/分享奖励领取时间
     */
    public final TableField<ShareAwardReceiveRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间/分享奖励领取时间");

    /**
     * The column <code>mini_shop_471752.b2c_share_award_receive.update_time</code>. 更新时间
     */
    public final TableField<ShareAwardReceiveRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>mini_shop_471752.b2c_share_award_receive</code> table reference
     */
    public ShareAwardReceive() {
        this(DSL.name("b2c_share_award_receive"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_share_award_receive</code> table reference
     */
    public ShareAwardReceive(String alias) {
        this(DSL.name(alias), SHARE_AWARD_RECEIVE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_share_award_receive</code> table reference
     */
    public ShareAwardReceive(Name alias) {
        this(alias, SHARE_AWARD_RECEIVE);
    }

    private ShareAwardReceive(Name alias, Table<ShareAwardReceiveRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShareAwardReceive(Name alias, Table<ShareAwardReceiveRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户领取分享奖励记录表"));
    }

    public <O extends Record> ShareAwardReceive(Table<O> child, ForeignKey<O, ShareAwardReceiveRecord> key) {
        super(child, key, SHARE_AWARD_RECEIVE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHARE_AWARD_RECEIVE_PRIMARY, Indexes.SHARE_AWARD_RECEIVE_SHARE_ID, Indexes.SHARE_AWARD_RECEIVE_USER_SHARE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShareAwardReceiveRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHARE_AWARD_RECEIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShareAwardReceiveRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHARE_AWARD_RECEIVE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShareAwardReceiveRecord>> getKeys() {
        return Arrays.<UniqueKey<ShareAwardReceiveRecord>>asList(Keys.KEY_B2C_SHARE_AWARD_RECEIVE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShareAwardReceive as(String alias) {
        return new ShareAwardReceive(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShareAwardReceive as(Name alias) {
        return new ShareAwardReceive(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShareAwardReceive rename(String name) {
        return new ShareAwardReceive(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShareAwardReceive rename(Name name) {
        return new ShareAwardReceive(name, null);
    }
}
