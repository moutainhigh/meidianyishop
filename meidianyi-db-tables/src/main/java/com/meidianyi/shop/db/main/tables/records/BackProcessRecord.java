/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables.records;


import com.meidianyi.shop.db.main.tables.BackProcess;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BackProcessRecord extends UpdatableRecordImpl<BackProcessRecord> implements Record17<Integer, Integer, Integer, String, String, String, Byte, String, Byte, Short, String, Timestamp, Integer, String, String, String, Timestamp> {

    private static final long serialVersionUID = 1624179767;

    /**
     * Setter for <code>mini_main.b2c_back_process.rec_id</code>.
     */
    public void setRecId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.rec_id</code>.
     */
    public Integer getRecId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.shop_id</code>. 店铺ID
     */
    public void setShopId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.shop_id</code>. 店铺ID
     */
    public Integer getShopId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.process_id</code>. 进程ID
     */
    public void setProcessId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.process_id</code>. 进程ID
     */
    public Integer getProcessId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.job_name</code>. 任务名称
     */
    public void setJobName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.job_name</code>. 任务名称
     */
    public String getJobName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.class_name</code>. 类名称
     */
    public void setClassName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.class_name</code>. 类名称
     */
    public String getClassName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.parameters</code>. 任务执行时，所需参数数组,serialize存储
     */
    public void setParameters(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.parameters</code>. 任务执行时，所需参数数组,serialize存储
     */
    public String getParameters() {
        return (String) get(5);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.state</code>. 进程状态，0初始，1执行中，2完成，3失败
     */
    public void setState(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.state</code>. 进程状态，0初始，1执行中，2完成，3失败
     */
    public Byte getState() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.fail_reason</code>. 失败原因
     */
    public void setFailReason(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.fail_reason</code>. 失败原因
     */
    public String getFailReason() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.only_run_one</code>. 是否只允许一个进程存在，按照class_name，static_method联合查
     */
    public void setOnlyRunOne(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.only_run_one</code>. 是否只允许一个进程存在，按照class_name，static_method联合查
     */
    public Byte getOnlyRunOne() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.progress</code>. 执行进度
     */
    public void setProgress(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.progress</code>. 执行进度
     */
    public Short getProgress() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.progress_info</code>. 当前进度信息
     */
    public void setProgressInfo(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.progress_info</code>. 当前进度信息
     */
    public String getProgressInfo() {
        return (String) get(10);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.end_time</code>. 进程结束时间
     */
    public void setEndTime(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.end_time</code>. 进程结束时间
     */
    public Timestamp getEndTime() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.job_code</code>. 执行结果码，成功0，其他非0
     */
    public void setJobCode(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.job_code</code>. 执行结果码，成功0，其他非0
     */
    public Integer getJobCode() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.job_message</code>. 错误信息
     */
    public void setJobMessage(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.job_message</code>. 错误信息
     */
    public String getJobMessage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.job_result</code>. 执行结果,serialize存储
     */
    public void setJobResult(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.job_result</code>. 执行结果,serialize存储
     */
    public String getJobResult() {
        return (String) get(14);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.memo</code>. 备注
     */
    public void setMemo(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.memo</code>. 备注
     */
    public String getMemo() {
        return (String) get(15);
    }

    /**
     * Setter for <code>mini_main.b2c_back_process.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(16, value);
    }

    /**
     * Getter for <code>mini_main.b2c_back_process.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Integer, Integer, Integer, String, String, String, Byte, String, Byte, Short, String, Timestamp, Integer, String, String, String, Timestamp> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Integer, Integer, Integer, String, String, String, Byte, String, Byte, Short, String, Timestamp, Integer, String, String, String, Timestamp> valuesRow() {
        return (Row17) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return BackProcess.BACK_PROCESS.REC_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return BackProcess.BACK_PROCESS.SHOP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return BackProcess.BACK_PROCESS.PROCESS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return BackProcess.BACK_PROCESS.JOB_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return BackProcess.BACK_PROCESS.CLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return BackProcess.BACK_PROCESS.PARAMETERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return BackProcess.BACK_PROCESS.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return BackProcess.BACK_PROCESS.FAIL_REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return BackProcess.BACK_PROCESS.ONLY_RUN_ONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field10() {
        return BackProcess.BACK_PROCESS.PROGRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return BackProcess.BACK_PROCESS.PROGRESS_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return BackProcess.BACK_PROCESS.END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return BackProcess.BACK_PROCESS.JOB_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return BackProcess.BACK_PROCESS.JOB_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return BackProcess.BACK_PROCESS.JOB_RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return BackProcess.BACK_PROCESS.MEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field17() {
        return BackProcess.BACK_PROCESS.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getRecId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getProcessId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getJobName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getParameters();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component7() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getFailReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component9() {
        return getOnlyRunOne();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component10() {
        return getProgress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getProgressInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component12() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getJobCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getJobMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getJobResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getMemo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component17() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRecId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProcessId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getJobName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getParameters();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getFailReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getOnlyRunOne();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value10() {
        return getProgress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getProgressInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getJobCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getJobMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getJobResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getMemo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value17() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value1(Integer value) {
        setRecId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value2(Integer value) {
        setShopId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value3(Integer value) {
        setProcessId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value4(String value) {
        setJobName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value5(String value) {
        setClassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value6(String value) {
        setParameters(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value7(Byte value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value8(String value) {
        setFailReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value9(Byte value) {
        setOnlyRunOne(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value10(Short value) {
        setProgress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value11(String value) {
        setProgressInfo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value12(Timestamp value) {
        setEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value13(Integer value) {
        setJobCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value14(String value) {
        setJobMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value15(String value) {
        setJobResult(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value16(String value) {
        setMemo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord value17(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackProcessRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, String value6, Byte value7, String value8, Byte value9, Short value10, String value11, Timestamp value12, Integer value13, String value14, String value15, String value16, Timestamp value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BackProcessRecord
     */
    public BackProcessRecord() {
        super(BackProcess.BACK_PROCESS);
    }

    /**
     * Create a detached, initialised BackProcessRecord
     */
    public BackProcessRecord(Integer recId, Integer shopId, Integer processId, String jobName, String className, String parameters, Byte state, String failReason, Byte onlyRunOne, Short progress, String progressInfo, Timestamp endTime, Integer jobCode, String jobMessage, String jobResult, String memo, Timestamp created) {
        super(BackProcess.BACK_PROCESS);

        set(0, recId);
        set(1, shopId);
        set(2, processId);
        set(3, jobName);
        set(4, className);
        set(5, parameters);
        set(6, state);
        set(7, failReason);
        set(8, onlyRunOne);
        set(9, progress);
        set(10, progressInfo);
        set(11, endTime);
        set(12, jobCode);
        set(13, jobMessage);
        set(14, jobResult);
        set(15, memo);
        set(16, created);
    }
}
