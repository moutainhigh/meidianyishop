/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.ImSessionRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 问诊会话记录一次医生和患者的在线会话
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImSession extends TableImpl<ImSessionRecord> {

    private static final long serialVersionUID = -518668212;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_im_session</code>
     */
    public static final ImSession IM_SESSION = new ImSession();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ImSessionRecord> getRecordType() {
        return ImSessionRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_im_session.id</code>. 主键id
     */
    public final TableField<ImSessionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "主键id");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.doctor_id</code>. 医师在我方库内id值
     */
    public final TableField<ImSessionRecord, Integer> DOCTOR_ID = createField("doctor_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "医师在我方库内id值");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.department_id</code>. 科室id
     */
    public final TableField<ImSessionRecord, Integer> DEPARTMENT_ID = createField("department_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "科室id");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.user_id</code>. 小程序发起会话用户id
     */
    public final TableField<ImSessionRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "小程序发起会话用户id");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.patient_id</code>. 本次诊疗的患者id
     */
    public final TableField<ImSessionRecord, Integer> PATIENT_ID = createField("patient_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "本次诊疗的患者id");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.session_status</code>. 会话状态 0待支付，1医师待接诊，2会话中，3会话取消，4会话结束，5续诊，6会话终止
     */
    public final TableField<ImSessionRecord, Byte> SESSION_STATUS = createField("session_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "会话状态 0待支付，1医师待接诊，2会话中，3会话取消，4会话结束，5续诊，6会话终止");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.continue_session_count</code>. 可继续问诊次数
     */
    public final TableField<ImSessionRecord, Integer> CONTINUE_SESSION_COUNT = createField("continue_session_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "可继续问诊次数");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.order_sn</code>. 会话关联的订单sn
     */
    public final TableField<ImSessionRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "会话关联的订单sn");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.receive_start_time</code>. 医师接诊时间
     */
    public final TableField<ImSessionRecord, Timestamp> RECEIVE_START_TIME = createField("receive_start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "医师接诊时间");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.limit_time</code>. 医生接诊后会话截止时间点
     */
    public final TableField<ImSessionRecord, Timestamp> LIMIT_TIME = createField("limit_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "医生接诊后会话截止时间点");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.weight_factor</code>. 权重因子,用于不同状态排序使用
     */
    public final TableField<ImSessionRecord, Byte> WEIGHT_FACTOR = createField("weight_factor", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "权重因子,用于不同状态排序使用");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.evaluate_status</code>. 评价状态 0 不可评价 1可评价 2已评价
     */
    public final TableField<ImSessionRecord, Byte> EVALUATE_STATUS = createField("evaluate_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "评价状态 0 不可评价 1可评价 2已评价");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.ready_to_on_akc_time</code>. 接诊响应时间
     */
    public final TableField<ImSessionRecord, Integer> READY_TO_ON_AKC_TIME = createField("ready_to_on_akc_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "接诊响应时间");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.is_delete</code>. 删除标记
     */
    public final TableField<ImSessionRecord, Byte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "删除标记");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.create_time</code>. 生成时间
     */
    public final TableField<ImSessionRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "生成时间");

    /**
     * The column <code>mini_shop_471752.b2c_im_session.update_time</code>. 最后修改时间
     */
    public final TableField<ImSessionRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_im_session</code> table reference
     */
    public ImSession() {
        this(DSL.name("b2c_im_session"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_im_session</code> table reference
     */
    public ImSession(String alias) {
        this(DSL.name(alias), IM_SESSION);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_im_session</code> table reference
     */
    public ImSession(Name alias) {
        this(alias, IM_SESSION);
    }

    private ImSession(Name alias, Table<ImSessionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ImSession(Name alias, Table<ImSessionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("问诊会话记录一次医生和患者的在线会话"));
    }

    public <O extends Record> ImSession(Table<O> child, ForeignKey<O, ImSessionRecord> key) {
        super(child, key, IM_SESSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IM_SESSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ImSessionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_IM_SESSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ImSessionRecord> getPrimaryKey() {
        return Keys.KEY_B2C_IM_SESSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ImSessionRecord>> getKeys() {
        return Arrays.<UniqueKey<ImSessionRecord>>asList(Keys.KEY_B2C_IM_SESSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ImSession as(String alias) {
        return new ImSession(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ImSession as(Name alias) {
        return new ImSession(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ImSession rename(String name) {
        return new ImSession(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ImSession rename(Name name) {
        return new ImSession(name, null);
    }
}
