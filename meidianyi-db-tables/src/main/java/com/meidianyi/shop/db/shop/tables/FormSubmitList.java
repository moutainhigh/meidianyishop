/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.FormSubmitListRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FormSubmitList extends TableImpl<FormSubmitListRecord> {

    private static final long serialVersionUID = 94027434;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_form_submit_list</code>
     */
    public static final FormSubmitList FORM_SUBMIT_LIST = new FormSubmitList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FormSubmitListRecord> getRecordType() {
        return FormSubmitListRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.submit_id</code>.
     */
    public final TableField<FormSubmitListRecord, Integer> SUBMIT_ID = createField("submit_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.page_id</code>.
     */
    public final TableField<FormSubmitListRecord, Integer> PAGE_ID = createField("page_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.shop_id</code>. 店铺id
     */
    public final TableField<FormSubmitListRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺id");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.user_id</code>. 用户id
     */
    public final TableField<FormSubmitListRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户id");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.open_id</code>. 微信openid
     */
    public final TableField<FormSubmitListRecord, String> OPEN_ID = createField("open_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "微信openid");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.nick_name</code>. 微信昵称
     */
    public final TableField<FormSubmitListRecord, String> NICK_NAME = createField("nick_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "微信昵称");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.send_score</code>. 送积分
     */
    public final TableField<FormSubmitListRecord, Integer> SEND_SCORE = createField("send_score", org.jooq.impl.SQLDataType.INTEGER, this, "送积分");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.send_coupons</code>. 送优惠券
     */
    public final TableField<FormSubmitListRecord, String> SEND_COUPONS = createField("send_coupons", org.jooq.impl.SQLDataType.VARCHAR(200), this, "送优惠券");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.create_time</code>.
     */
    public final TableField<FormSubmitListRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_form_submit_list.update_time</code>. 最后修改时间
     */
    public final TableField<FormSubmitListRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_form_submit_list</code> table reference
     */
    public FormSubmitList() {
        this(DSL.name("b2c_form_submit_list"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_form_submit_list</code> table reference
     */
    public FormSubmitList(String alias) {
        this(DSL.name(alias), FORM_SUBMIT_LIST);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_form_submit_list</code> table reference
     */
    public FormSubmitList(Name alias) {
        this(alias, FORM_SUBMIT_LIST);
    }

    private FormSubmitList(Name alias, Table<FormSubmitListRecord> aliased) {
        this(alias, aliased, null);
    }

    private FormSubmitList(Name alias, Table<FormSubmitListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FormSubmitList(Table<O> child, ForeignKey<O, FormSubmitListRecord> key) {
        super(child, key, FORM_SUBMIT_LIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FORM_SUBMIT_LIST_PAGE_ID, Indexes.FORM_SUBMIT_LIST_PRIMARY, Indexes.FORM_SUBMIT_LIST_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FormSubmitListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FORM_SUBMIT_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FormSubmitListRecord> getPrimaryKey() {
        return Keys.KEY_B2C_FORM_SUBMIT_LIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FormSubmitListRecord>> getKeys() {
        return Arrays.<UniqueKey<FormSubmitListRecord>>asList(Keys.KEY_B2C_FORM_SUBMIT_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormSubmitList as(String alias) {
        return new FormSubmitList(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormSubmitList as(Name alias) {
        return new FormSubmitList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FormSubmitList rename(String name) {
        return new FormSubmitList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FormSubmitList rename(Name name) {
        return new FormSubmitList(name, null);
    }
}
