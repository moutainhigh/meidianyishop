/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.PayAwardRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayAward extends TableImpl<PayAwardRecord> {

    private static final long serialVersionUID = -603217353;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_pay_award</code>
     */
    public static final PayAward PAY_AWARD = new PayAward();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayAwardRecord> getRecordType() {
        return PayAwardRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.id</code>.
     */
    public final TableField<PayAwardRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.activity_names</code>. 活动名称
     */
    public final TableField<PayAwardRecord, String> ACTIVITY_NAMES = createField("activity_names", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "活动名称");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.time_type</code>. 时间类型0固时1永久
     */
    public final TableField<PayAwardRecord, Byte> TIME_TYPE = createField("time_type", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "时间类型0固时1永久");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.start_time</code>. 开始
     */
    public final TableField<PayAwardRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "开始");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.end_time</code>. 结束
     */
    public final TableField<PayAwardRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "结束");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.act_first</code>. 优先级
     */
    public final TableField<PayAwardRecord, Integer> ACT_FIRST = createField("act_first", org.jooq.impl.SQLDataType.INTEGER.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "优先级");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.goods_area_type</code>. 商品范围类型 0全部商品 1 部分商品
     */
    public final TableField<PayAwardRecord, Integer> GOODS_AREA_TYPE = createField("goods_area_type", org.jooq.impl.SQLDataType.INTEGER.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品范围类型 0全部商品 1 部分商品");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.goods_ids</code>. 商品id
     */
    public final TableField<PayAwardRecord, String> GOODS_IDS = createField("goods_ids", org.jooq.impl.SQLDataType.CLOB.defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "商品id");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.goods_cat_ids</code>. 商品平台分类
     */
    public final TableField<PayAwardRecord, String> GOODS_CAT_IDS = createField("goods_cat_ids", org.jooq.impl.SQLDataType.CLOB.defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "商品平台分类");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.goods_sort_ids</code>. 商品商家分类
     */
    public final TableField<PayAwardRecord, String> GOODS_SORT_IDS = createField("goods_sort_ids", org.jooq.impl.SQLDataType.CLOB.defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "商品商家分类");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.min_pay_money</code>. 最小金额
     */
    public final TableField<PayAwardRecord, BigDecimal> MIN_PAY_MONEY = createField("min_pay_money", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "最小金额");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.limit_times</code>. 每个用户可参加次数
     */
    public final TableField<PayAwardRecord, Integer> LIMIT_TIMES = createField("limit_times", org.jooq.impl.SQLDataType.INTEGER.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "每个用户可参加次数");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.award_list</code>. 奖品列表json
     */
    public final TableField<PayAwardRecord, String> AWARD_LIST = createField("award_list", org.jooq.impl.SQLDataType.CLOB.defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "奖品列表json");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.status</code>. 状态1停用
     */
    public final TableField<PayAwardRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态1停用");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.del_flag</code>. 1删除
     */
    public final TableField<PayAwardRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1删除");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.create_time</code>. 创建时间
     */
    public final TableField<PayAwardRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>mini_shop_471752.b2c_pay_award.update_time</code>. 跟新时间
     */
    public final TableField<PayAwardRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "跟新时间");

    /**
     * Create a <code>mini_shop_471752.b2c_pay_award</code> table reference
     */
    public PayAward() {
        this(DSL.name("b2c_pay_award"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_pay_award</code> table reference
     */
    public PayAward(String alias) {
        this(DSL.name(alias), PAY_AWARD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_pay_award</code> table reference
     */
    public PayAward(Name alias) {
        this(alias, PAY_AWARD);
    }

    private PayAward(Name alias, Table<PayAwardRecord> aliased) {
        this(alias, aliased, null);
    }

    private PayAward(Name alias, Table<PayAwardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PayAward(Table<O> child, ForeignKey<O, PayAwardRecord> key) {
        super(child, key, PAY_AWARD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PAY_AWARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PayAwardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAY_AWARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PayAwardRecord> getPrimaryKey() {
        return Keys.KEY_B2C_PAY_AWARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PayAwardRecord>> getKeys() {
        return Arrays.<UniqueKey<PayAwardRecord>>asList(Keys.KEY_B2C_PAY_AWARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayAward as(String alias) {
        return new PayAward(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayAward as(Name alias) {
        return new PayAward(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PayAward rename(String name) {
        return new PayAward(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PayAward rename(Name name) {
        return new PayAward(name, null);
    }
}
