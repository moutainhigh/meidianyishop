/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.CityServiceAccountRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 同城配送账号表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityServiceAccount extends TableImpl<CityServiceAccountRecord> {

    private static final long serialVersionUID = -881454956;

    /**
     * The reference instance of <code>jmini_shop_224462.b2c_city_service_account</code>
     */
    public static final CityServiceAccount CITY_SERVICE_ACCOUNT = new CityServiceAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CityServiceAccountRecord> getRecordType() {
        return CityServiceAccountRecord.class;
    }

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.id</code>.
     */
    public final TableField<CityServiceAccountRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.delivery_id</code>. 配送公司Id
     */
    public final TableField<CityServiceAccountRecord, String> DELIVERY_ID = createField("delivery_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "配送公司Id");

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.appkey</code>. 配送公司分配的appkey
     */
    public final TableField<CityServiceAccountRecord, String> APPKEY = createField("appkey", org.jooq.impl.SQLDataType.VARCHAR(50), this, "配送公司分配的appkey");

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.appsecret</code>. 配送公司分配的appsecret
     */
    public final TableField<CityServiceAccountRecord, String> APPSECRET = createField("appsecret", org.jooq.impl.SQLDataType.VARCHAR(100), this, "配送公司分配的appsecret");

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.account_status</code>. 账号状态： 0 审核通过 1 审核中 2 审核不通过
     */
    public final TableField<CityServiceAccountRecord, Byte> ACCOUNT_STATUS = createField("account_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "账号状态： 0 审核通过 1 审核中 2 审核不通过");

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.custom_name</code>. 自定义名称
     */
    public final TableField<CityServiceAccountRecord, String> CUSTOM_NAME = createField("custom_name", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "自定义名称");

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.status</code>. 系统设置状态： 1 启用 0 禁用
     */
    public final TableField<CityServiceAccountRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "系统设置状态： 1 启用 0 禁用");

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.create_time</code>.
     */
    public final TableField<CityServiceAccountRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jmini_shop_224462.b2c_city_service_account.update_time</code>.
     */
    public final TableField<CityServiceAccountRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>jmini_shop_224462.b2c_city_service_account</code> table reference
     */
    public CityServiceAccount() {
        this(DSL.name("b2c_city_service_account"), null);
    }

    /**
     * Create an aliased <code>jmini_shop_224462.b2c_city_service_account</code> table reference
     */
    public CityServiceAccount(String alias) {
        this(DSL.name(alias), CITY_SERVICE_ACCOUNT);
    }

    /**
     * Create an aliased <code>jmini_shop_224462.b2c_city_service_account</code> table reference
     */
    public CityServiceAccount(Name alias) {
        this(alias, CITY_SERVICE_ACCOUNT);
    }

    private CityServiceAccount(Name alias, Table<CityServiceAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private CityServiceAccount(Name alias, Table<CityServiceAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("同城配送账号表"));
    }

    public <O extends Record> CityServiceAccount(Table<O> child, ForeignKey<O, CityServiceAccountRecord> key) {
        super(child, key, CITY_SERVICE_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CITY_SERVICE_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CityServiceAccountRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CITY_SERVICE_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CityServiceAccountRecord> getPrimaryKey() {
        return Keys.KEY_B2C_CITY_SERVICE_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CityServiceAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<CityServiceAccountRecord>>asList(Keys.KEY_B2C_CITY_SERVICE_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityServiceAccount as(String alias) {
        return new CityServiceAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityServiceAccount as(Name alias) {
        return new CityServiceAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CityServiceAccount rename(String name) {
        return new CityServiceAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CityServiceAccount rename(Name name) {
        return new CityServiceAccount(name, null);
    }
}
