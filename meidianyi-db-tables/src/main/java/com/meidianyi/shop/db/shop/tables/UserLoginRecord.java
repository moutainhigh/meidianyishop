/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.UserLoginRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLoginRecord extends TableImpl<UserLoginRecordRecord> {

    private static final long serialVersionUID = 2070923466;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user_login_record</code>
     */
    public static final UserLoginRecord USER_LOGIN_RECORD = new UserLoginRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserLoginRecordRecord> getRecordType() {
        return UserLoginRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.id</code>.
     */
    public final TableField<UserLoginRecordRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.user_id</code>. 登陆用户id
     */
    public final TableField<UserLoginRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "登陆用户id");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.user_ip</code>. 用户登录ip
     */
    public final TableField<UserLoginRecordRecord, String> USER_IP = createField("user_ip", org.jooq.impl.SQLDataType.VARCHAR(64), this, "用户登录ip");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.count</code>. 每日登陆次数
     */
    public final TableField<UserLoginRecordRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "每日登陆次数");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.province_code</code>. 省
     */
    public final TableField<UserLoginRecordRecord, String> PROVINCE_CODE = createField("province_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "省");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.province</code>. 省
     */
    public final TableField<UserLoginRecordRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR(20), this, "省");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.city_code</code>. 市
     */
    public final TableField<UserLoginRecordRecord, String> CITY_CODE = createField("city_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "市");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.city</code>. 市
     */
    public final TableField<UserLoginRecordRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(20), this, "市");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.district_code</code>. 区
     */
    public final TableField<UserLoginRecordRecord, String> DISTRICT_CODE = createField("district_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "区");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.district</code>. 区
     */
    public final TableField<UserLoginRecordRecord, String> DISTRICT = createField("district", org.jooq.impl.SQLDataType.VARCHAR(20), this, "区");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.lat</code>. 经度
     */
    public final TableField<UserLoginRecordRecord, String> LAT = createField("lat", org.jooq.impl.SQLDataType.VARCHAR(64), this, "经度");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.lng</code>. 纬度
     */
    public final TableField<UserLoginRecordRecord, String> LNG = createField("lng", org.jooq.impl.SQLDataType.VARCHAR(64), this, "纬度");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.create_time</code>.
     */
    public final TableField<UserLoginRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_login_record.update_time</code>. 最后修改时间
     */
    public final TableField<UserLoginRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_user_login_record</code> table reference
     */
    public UserLoginRecord() {
        this(DSL.name("b2c_user_login_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_login_record</code> table reference
     */
    public UserLoginRecord(String alias) {
        this(DSL.name(alias), USER_LOGIN_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_login_record</code> table reference
     */
    public UserLoginRecord(Name alias) {
        this(alias, USER_LOGIN_RECORD);
    }

    private UserLoginRecord(Name alias, Table<UserLoginRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserLoginRecord(Name alias, Table<UserLoginRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserLoginRecord(Table<O> child, ForeignKey<O, UserLoginRecordRecord> key) {
        super(child, key, USER_LOGIN_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_LOGIN_RECORD_CREATE_TIME, Indexes.USER_LOGIN_RECORD_DISTRICT_CREATE_TIME, Indexes.USER_LOGIN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserLoginRecordRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_LOGIN_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserLoginRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_LOGIN_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserLoginRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<UserLoginRecordRecord>>asList(Keys.KEY_B2C_USER_LOGIN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserLoginRecord as(String alias) {
        return new UserLoginRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserLoginRecord as(Name alias) {
        return new UserLoginRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLoginRecord rename(String name) {
        return new UserLoginRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLoginRecord rename(Name name) {
        return new UserLoginRecord(name, null);
    }
}
