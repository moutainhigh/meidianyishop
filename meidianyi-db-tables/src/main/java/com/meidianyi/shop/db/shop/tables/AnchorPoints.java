/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.AnchorPointsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 埋点
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnchorPoints extends TableImpl<AnchorPointsRecord> {

    private static final long serialVersionUID = 718471223;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_anchor_points</code>
     */
    public static final AnchorPoints ANCHOR_POINTS = new AnchorPoints();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnchorPointsRecord> getRecordType() {
        return AnchorPointsRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.id</code>. id
     */
    public final TableField<AnchorPointsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "id");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.event</code>. 事件
     */
    public final TableField<AnchorPointsRecord, String> EVENT = createField("event", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "事件");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.event_name</code>. 事件名称
     */
    public final TableField<AnchorPointsRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "事件名称");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.event_type</code>. 事件类型 0前段 1后端
     */
    public final TableField<AnchorPointsRecord, Byte> EVENT_TYPE = createField("event_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "事件类型 0前段 1后端");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.page</code>. 页面
     */
    public final TableField<AnchorPointsRecord, String> PAGE = createField("page", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "页面");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.module</code>. 功能模块
     */
    public final TableField<AnchorPointsRecord, String> MODULE = createField("module", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "功能模块");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.platform</code>. 平台  wxapp admin
     */
    public final TableField<AnchorPointsRecord, String> PLATFORM = createField("platform", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "平台  wxapp admin");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.device</code>. 设备  android  ios   pc
     */
    public final TableField<AnchorPointsRecord, String> DEVICE = createField("device", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "设备  android  ios   pc");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.store_id</code>. 门店id
     */
    public final TableField<AnchorPointsRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "门店id");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.user_id</code>. 用户id
     */
    public final TableField<AnchorPointsRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户id");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.key</code>. 参数
     */
    public final TableField<AnchorPointsRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "参数");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.value</code>. 参数值
     */
    public final TableField<AnchorPointsRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "参数值");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.update_time</code>. 更新时间
     */
    public final TableField<AnchorPointsRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>mini_shop_471752.b2c_anchor_points.create_time</code>. 添加时间
     */
    public final TableField<AnchorPointsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "添加时间");

    /**
     * Create a <code>mini_shop_471752.b2c_anchor_points</code> table reference
     */
    public AnchorPoints() {
        this(DSL.name("b2c_anchor_points"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_anchor_points</code> table reference
     */
    public AnchorPoints(String alias) {
        this(DSL.name(alias), ANCHOR_POINTS);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_anchor_points</code> table reference
     */
    public AnchorPoints(Name alias) {
        this(alias, ANCHOR_POINTS);
    }

    private AnchorPoints(Name alias, Table<AnchorPointsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnchorPoints(Name alias, Table<AnchorPointsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("埋点"));
    }

    public <O extends Record> AnchorPoints(Table<O> child, ForeignKey<O, AnchorPointsRecord> key) {
        super(child, key, ANCHOR_POINTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANCHOR_POINTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AnchorPointsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ANCHOR_POINTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnchorPointsRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ANCHOR_POINTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnchorPointsRecord>> getKeys() {
        return Arrays.<UniqueKey<AnchorPointsRecord>>asList(Keys.KEY_B2C_ANCHOR_POINTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnchorPoints as(String alias) {
        return new AnchorPoints(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnchorPoints as(Name alias) {
        return new AnchorPoints(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnchorPoints rename(String name) {
        return new AnchorPoints(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AnchorPoints rename(Name name) {
        return new AnchorPoints(name, null);
    }
}
