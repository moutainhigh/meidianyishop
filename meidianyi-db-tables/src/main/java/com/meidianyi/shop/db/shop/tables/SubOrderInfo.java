/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.SubOrderInfoRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubOrderInfo extends TableImpl<SubOrderInfoRecord> {

    private static final long serialVersionUID = -968538799;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_sub_order_info</code>
     */
    public static final SubOrderInfo SUB_ORDER_INFO = new SubOrderInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SubOrderInfoRecord> getRecordType() {
        return SubOrderInfoRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.id</code>.
     */
    public final TableField<SubOrderInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.sub_order_sn</code>. 代付订单号
     */
    public final TableField<SubOrderInfoRecord, String> SUB_ORDER_SN = createField("sub_order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "代付订单号");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.main_order_sn</code>. 主订单号
     */
    public final TableField<SubOrderInfoRecord, String> MAIN_ORDER_SN = createField("main_order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "主订单号");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.user_id</code>. 用户id
     */
    public final TableField<SubOrderInfoRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户id");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.username</code>. 用户昵称
     */
    public final TableField<SubOrderInfoRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(50), this, "用户昵称");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.order_status</code>. 代付订单状态
     */
    public final TableField<SubOrderInfoRecord, Byte> ORDER_STATUS = createField("order_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "代付订单状态");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.money_paid</code>. 付款金额
     */
    public final TableField<SubOrderInfoRecord, BigDecimal> MONEY_PAID = createField("money_paid", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "付款金额");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.refund_money</code>. 退款金额
     */
    public final TableField<SubOrderInfoRecord, BigDecimal> REFUND_MONEY = createField("refund_money", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "退款金额");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.pay_code</code>. 支付代号
     */
    public final TableField<SubOrderInfoRecord, String> PAY_CODE = createField("pay_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "支付代号");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.pay_name</code>. 支付名称
     */
    public final TableField<SubOrderInfoRecord, String> PAY_NAME = createField("pay_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "支付名称");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.pay_sn</code>. 支付流水号
     */
    public final TableField<SubOrderInfoRecord, String> PAY_SN = createField("pay_sn", org.jooq.impl.SQLDataType.VARCHAR(32), this, "支付流水号");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.prepay_id</code>. 微信支付id
     */
    public final TableField<SubOrderInfoRecord, String> PREPAY_ID = createField("prepay_id", org.jooq.impl.SQLDataType.VARCHAR(200), this, "微信支付id");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.message</code>. 留言
     */
    public final TableField<SubOrderInfoRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR(200), this, "留言");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.pay_time</code>. 支付时间
     */
    public final TableField<SubOrderInfoRecord, Timestamp> PAY_TIME = createField("pay_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "支付时间");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.refund_time</code>. 最近一次退款时间
     */
    public final TableField<SubOrderInfoRecord, Timestamp> REFUND_TIME = createField("refund_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最近一次退款时间");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.del_flag</code>.
     */
    public final TableField<SubOrderInfoRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.del_time</code>. 删除时间
     */
    public final TableField<SubOrderInfoRecord, Timestamp> DEL_TIME = createField("del_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "删除时间");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.create_time</code>.
     */
    public final TableField<SubOrderInfoRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sub_order_info.update_time</code>. 最后修改时间
     */
    public final TableField<SubOrderInfoRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_sub_order_info</code> table reference
     */
    public SubOrderInfo() {
        this(DSL.name("b2c_sub_order_info"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_sub_order_info</code> table reference
     */
    public SubOrderInfo(String alias) {
        this(DSL.name(alias), SUB_ORDER_INFO);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_sub_order_info</code> table reference
     */
    public SubOrderInfo(Name alias) {
        this(alias, SUB_ORDER_INFO);
    }

    private SubOrderInfo(Name alias, Table<SubOrderInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private SubOrderInfo(Name alias, Table<SubOrderInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SubOrderInfo(Table<O> child, ForeignKey<O, SubOrderInfoRecord> key) {
        super(child, key, SUB_ORDER_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SUB_ORDER_INFO_MAIN_ORDER_SN, Indexes.SUB_ORDER_INFO_ORDER_STATUS, Indexes.SUB_ORDER_INFO_PRIMARY, Indexes.SUB_ORDER_INFO_SUB_ORDER_SN, Indexes.SUB_ORDER_INFO_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SubOrderInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SUB_ORDER_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SubOrderInfoRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SUB_ORDER_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SubOrderInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<SubOrderInfoRecord>>asList(Keys.KEY_B2C_SUB_ORDER_INFO_PRIMARY, Keys.KEY_B2C_SUB_ORDER_INFO_SUB_ORDER_SN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubOrderInfo as(String alias) {
        return new SubOrderInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubOrderInfo as(Name alias) {
        return new SubOrderInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SubOrderInfo rename(String name) {
        return new SubOrderInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SubOrderInfo rename(Name name) {
        return new SubOrderInfo(name, null);
    }
}
