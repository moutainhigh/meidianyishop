/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.UserTagRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 会员关联标签表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTag extends TableImpl<UserTagRecord> {

    private static final long serialVersionUID = -2066347915;

    /**
     * The reference instance of <code>jmini_shop_489258.b2c_user_tag</code>
     */
    public static final UserTag USER_TAG = new UserTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserTagRecord> getRecordType() {
        return UserTagRecord.class;
    }

    /**
     * The column <code>jmini_shop_489258.b2c_user_tag.user_id</code>.
     */
    public final TableField<UserTagRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jmini_shop_489258.b2c_user_tag.tag_id</code>.
     */
    public final TableField<UserTagRecord, Integer> TAG_ID = createField("tag_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jmini_shop_489258.b2c_user_tag.create_time</code>.
     */
    public final TableField<UserTagRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jmini_shop_489258.b2c_user_tag.update_time</code>. 最后修改时间
     */
    public final TableField<UserTagRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>jmini_shop_489258.b2c_user_tag.source</code>. 标签来源 0 后台设置 1领券 2领卡
     */
    public final TableField<UserTagRecord, Short> SOURCE = createField("source", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "标签来源 0 后台设置 1领券 2领卡");

    /**
     * The column <code>jmini_shop_489258.b2c_user_tag.tool_id</code>. 优惠券或会员卡id
     */
    public final TableField<UserTagRecord, Integer> TOOL_ID = createField("tool_id", org.jooq.impl.SQLDataType.INTEGER, this, "优惠券或会员卡id");

    /**
     * The column <code>jmini_shop_489258.b2c_user_tag.times</code>. 打标签次数，会员卡或优惠券过期停用时次数减一，为0时删除
     */
    public final TableField<UserTagRecord, Short> TIMES = createField("times", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.SMALLINT)), this, "打标签次数，会员卡或优惠券过期停用时次数减一，为0时删除");

    /**
     * Create a <code>jmini_shop_489258.b2c_user_tag</code> table reference
     */
    public UserTag() {
        this(DSL.name("b2c_user_tag"), null);
    }

    /**
     * Create an aliased <code>jmini_shop_489258.b2c_user_tag</code> table reference
     */
    public UserTag(String alias) {
        this(DSL.name(alias), USER_TAG);
    }

    /**
     * Create an aliased <code>jmini_shop_489258.b2c_user_tag</code> table reference
     */
    public UserTag(Name alias) {
        this(alias, USER_TAG);
    }

    private UserTag(Name alias, Table<UserTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserTag(Name alias, Table<UserTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("会员关联标签表"));
    }

    public <O extends Record> UserTag(Table<O> child, ForeignKey<O, UserTagRecord> key) {
        super(child, key, USER_TAG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
    	return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_TAG_PRIMARY, Indexes.USER_TAG_USER_TAG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserTagRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_TAG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserTagRecord>> getKeys() {
        return Arrays.<UniqueKey<UserTagRecord>>asList(Keys.KEY_B2C_USER_TAG_PRIMARY, Keys.KEY_B2C_USER_TAG_USER_TAG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTag as(String alias) {
        return new UserTag(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTag as(Name alias) {
        return new UserTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserTag rename(String name) {
        return new UserTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserTag rename(Name name) {
        return new UserTag(name, null);
    }
}
