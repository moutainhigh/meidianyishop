/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.LiveGoodsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LiveGoods extends TableImpl<LiveGoodsRecord> {

    private static final long serialVersionUID = -2049992772;

    /**
     * The reference instance of <code>mini_shop_8984736.b2c_live_goods</code>
     */
    public static final LiveGoods LIVE_GOODS = new LiveGoods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LiveGoodsRecord> getRecordType() {
        return LiveGoodsRecord.class;
    }

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.id</code>.
     */
    public final TableField<LiveGoodsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.live_id</code>. 直播表关联ID
     */
    public final TableField<LiveGoodsRecord, Integer> LIVE_ID = createField("live_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "直播表关联ID");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.room_id</code>. 直播间ID
     */
    public final TableField<LiveGoodsRecord, Integer> ROOM_ID = createField("room_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "直播间ID");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.goods_id</code>.
     */
    public final TableField<LiveGoodsRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.cover_img</code>. 商品图
     */
    public final TableField<LiveGoodsRecord, String> COVER_IMG = createField("cover_img", org.jooq.impl.SQLDataType.VARCHAR(255), this, "商品图");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.url</code>. 小程序路径
     */
    public final TableField<LiveGoodsRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(255), this, "小程序路径");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.price</code>.
     */
    public final TableField<LiveGoodsRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.name</code>. 商品名称
     */
    public final TableField<LiveGoodsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "商品名称");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.add_cart_num</code>. 加购数
     */
    public final TableField<LiveGoodsRecord, Integer> ADD_CART_NUM = createField("add_cart_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "加购数");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.price_end</code>. 另一个价格
     */
    public final TableField<LiveGoodsRecord, BigDecimal> PRICE_END = createField("price_end", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "另一个价格");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.price_type</code>. 价格形式：1一口价 2价格区间 3显示折扣价
     */
    public final TableField<LiveGoodsRecord, Byte> PRICE_TYPE = createField("price_type", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "价格形式：1一口价 2价格区间 3显示折扣价");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.del_flag</code>.
     */
    public final TableField<LiveGoodsRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_live_goods.del_time</code>.
     */
    public final TableField<LiveGoodsRecord, Timestamp> DEL_TIME = createField("del_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_8984736.b2c_live_goods</code> table reference
     */
    public LiveGoods() {
        this(DSL.name("b2c_live_goods"), null);
    }

    /**
     * Create an aliased <code>mini_shop_8984736.b2c_live_goods</code> table reference
     */
    public LiveGoods(String alias) {
        this(DSL.name(alias), LIVE_GOODS);
    }

    /**
     * Create an aliased <code>mini_shop_8984736.b2c_live_goods</code> table reference
     */
    public LiveGoods(Name alias) {
        this(alias, LIVE_GOODS);
    }

    private LiveGoods(Name alias, Table<LiveGoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private LiveGoods(Name alias, Table<LiveGoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LiveGoods(Table<O> child, ForeignKey<O, LiveGoodsRecord> key) {
        super(child, key, LIVE_GOODS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LIVE_GOODS_GOODS_ID, Indexes.LIVE_GOODS_LIVE_ID, Indexes.LIVE_GOODS_PRIMARY, Indexes.LIVE_GOODS_ROOM_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LiveGoodsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LIVE_GOODS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LiveGoodsRecord> getPrimaryKey() {
        return Keys.KEY_B2C_LIVE_GOODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LiveGoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<LiveGoodsRecord>>asList(Keys.KEY_B2C_LIVE_GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LiveGoods as(String alias) {
        return new LiveGoods(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LiveGoods as(Name alias) {
        return new LiveGoods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LiveGoods rename(String name) {
        return new LiveGoods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LiveGoods rename(Name name) {
        return new LiveGoods(name, null);
    }
}
