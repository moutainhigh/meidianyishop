/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables;


import com.meidianyi.shop.db.main.Indexes;
import com.meidianyi.shop.db.main.Keys;
import com.meidianyi.shop.db.main.MiniMain;
import com.meidianyi.shop.db.main.tables.records.ChargeRenewRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChargeRenew extends TableImpl<ChargeRenewRecord> {

    private static final long serialVersionUID = -753183216;

    /**
     * The reference instance of <code>mini_main.b2c_charge_renew</code>
     */
    public static final ChargeRenew CHARGE_RENEW = new ChargeRenew();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChargeRenewRecord> getRecordType() {
        return ChargeRenewRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_charge_renew.id</code>. 申请ID
     */
    public final TableField<ChargeRenewRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "申请ID");

    /**
     * The column <code>mini_main.b2c_charge_renew.shop_id</code>. 店铺ID
     */
    public final TableField<ChargeRenewRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "店铺ID");

    /**
     * The column <code>mini_main.b2c_charge_renew.apply_id</code>. 申请用户的ID
     */
    public final TableField<ChargeRenewRecord, Integer> APPLY_ID = createField("apply_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "申请用户的ID");

    /**
     * The column <code>mini_main.b2c_charge_renew.apply_name</code>. 申请用户名称
     */
    public final TableField<ChargeRenewRecord, String> APPLY_NAME = createField("apply_name", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "申请用户名称");

    /**
     * The column <code>mini_main.b2c_charge_renew.sys_id</code>. 所属账号的ID
     */
    public final TableField<ChargeRenewRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "所属账号的ID");

    /**
     * The column <code>mini_main.b2c_charge_renew.shop_name</code>. 店铺名称
     */
    public final TableField<ChargeRenewRecord, String> SHOP_NAME = createField("shop_name", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "店铺名称");

    /**
     * The column <code>mini_main.b2c_charge_renew.created</code>. 创建时间
     */
    public final TableField<ChargeRenewRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>mini_main.b2c_charge_renew.apply_mod</code>. 点击模块
     */
    public final TableField<ChargeRenewRecord, String> APPLY_MOD = createField("apply_mod", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "点击模块");

    /**
     * The column <code>mini_main.b2c_charge_renew.apply_type</code>. 申请类型 0升级 1续费
     */
    public final TableField<ChargeRenewRecord, Byte> APPLY_TYPE = createField("apply_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "申请类型 0升级 1续费");

    /**
     * The column <code>mini_main.b2c_charge_renew.contact</code>. 申请类型 0未联系 1已联系
     */
    public final TableField<ChargeRenewRecord, Byte> CONTACT = createField("contact", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "申请类型 0未联系 1已联系");

    /**
     * The column <code>mini_main.b2c_charge_renew.desc</code>. 备注
     */
    public final TableField<ChargeRenewRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.CLOB, this, "备注");

    /**
     * Create a <code>mini_main.b2c_charge_renew</code> table reference
     */
    public ChargeRenew() {
        this(DSL.name("b2c_charge_renew"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_charge_renew</code> table reference
     */
    public ChargeRenew(String alias) {
        this(DSL.name(alias), CHARGE_RENEW);
    }

    /**
     * Create an aliased <code>mini_main.b2c_charge_renew</code> table reference
     */
    public ChargeRenew(Name alias) {
        this(alias, CHARGE_RENEW);
    }

    private ChargeRenew(Name alias, Table<ChargeRenewRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChargeRenew(Name alias, Table<ChargeRenewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ChargeRenew(Table<O> child, ForeignKey<O, ChargeRenewRecord> key) {
        super(child, key, CHARGE_RENEW);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHARGE_RENEW_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ChargeRenewRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CHARGE_RENEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChargeRenewRecord> getPrimaryKey() {
        return Keys.KEY_B2C_CHARGE_RENEW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChargeRenewRecord>> getKeys() {
        return Arrays.<UniqueKey<ChargeRenewRecord>>asList(Keys.KEY_B2C_CHARGE_RENEW_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChargeRenew as(String alias) {
        return new ChargeRenew(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChargeRenew as(Name alias) {
        return new ChargeRenew(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChargeRenew rename(String name) {
        return new ChargeRenew(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChargeRenew rename(Name name) {
        return new ChargeRenew(name, null);
    }
}
