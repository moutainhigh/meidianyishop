/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables.records;


import com.meidianyi.shop.db.main.tables.MpAuthShop;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MpAuthShopRecord extends UpdatableRecordImpl<MpAuthShopRecord> {

    private static final long serialVersionUID = -550248094;

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.app_id</code>. 授权小程序appId
     */
    public void setAppId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.app_id</code>. 授权小程序appId
     */
    public String getAppId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.shop_id</code>.
     */
    public void setShopId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.shop_id</code>.
     */
    public Integer getShopId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.nick_name</code>. 小程序昵称
     */
    public void setNickName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.nick_name</code>. 小程序昵称
     */
    public String getNickName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.user_name</code>. 授权方小程序的原始ID
     */
    public void setUserName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.user_name</code>. 授权方小程序的原始ID
     */
    public String getUserName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.alias</code>. 授权方小程序所设置的微信号，可为空
     */
    public void setAlias(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.alias</code>. 授权方小程序所设置的微信号，可为空
     */
    public String getAlias() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.verify_type_info</code>. 授权方认证类型，-1代表未认证，0代表微信认证
     */
    public void setVerifyTypeInfo(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.verify_type_info</code>. 授权方认证类型，-1代表未认证，0代表微信认证
     */
    public String getVerifyTypeInfo() {
        return (String) get(5);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.head_img</code>. 头像URL
     */
    public void setHeadImg(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.head_img</code>. 头像URL
     */
    public String getHeadImg() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.func_info</code>. 权限集
     */
    public void setFuncInfo(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.func_info</code>. 权限集
     */
    public String getFuncInfo() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.is_auth_ok</code>. 是否授权成功,如果小程序后台取消授权，则为0
     */
    public void setIsAuthOk(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.is_auth_ok</code>. 是否授权成功,如果小程序后台取消授权，则为0
     */
    public Byte getIsAuthOk() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.last_auth_time</code>. 最后成功授权的时间
     */
    public void setLastAuthTime(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.last_auth_time</code>. 最后成功授权的时间
     */
    public Timestamp getLastAuthTime() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.last_cancel_auth_time</code>. 最后取消授权的时间
     */
    public void setLastCancelAuthTime(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.last_cancel_auth_time</code>. 最后取消授权的时间
     */
    public Timestamp getLastCancelAuthTime() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.qrcode_url</code>. 二维码图片的URL
     */
    public void setQrcodeUrl(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.qrcode_url</code>. 二维码图片的URL
     */
    public String getQrcodeUrl() {
        return (String) get(12);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.open_pay</code>. 是否开头微信支付
     */
    public void setOpenPay(Byte value) {
        set(13, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.open_pay</code>. 是否开头微信支付
     */
    public Byte getOpenPay() {
        return (Byte) get(13);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.open_card</code>. 是否开通微信卡券功能
     */
    public void setOpenCard(Byte value) {
        set(14, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.open_card</code>. 是否开通微信卡券功能
     */
    public Byte getOpenCard() {
        return (Byte) get(14);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.authorizer_info</code>. 授权者信息,json存储
     */
    public void setAuthorizerInfo(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.authorizer_info</code>. 授权者信息,json存储
     */
    public String getAuthorizerInfo() {
        return (String) get(15);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.authorization_info</code>. 授权详情,json存储
     */
    public void setAuthorizationInfo(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.authorization_info</code>. 授权详情,json存储
     */
    public String getAuthorizationInfo() {
        return (String) get(16);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.pay_mch_id</code>. 支付商户号
     */
    public void setPayMchId(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.pay_mch_id</code>. 支付商户号
     */
    public String getPayMchId() {
        return (String) get(17);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.pay_key</code>. 支付密钥
     */
    public void setPayKey(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.pay_key</code>. 支付密钥
     */
    public String getPayKey() {
        return (String) get(18);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.pay_cert_content</code>. 支付证书内容
     */
    public void setPayCertContent(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.pay_cert_content</code>. 支付证书内容
     */
    public String getPayCertContent() {
        return (String) get(19);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.pay_key_content</code>. 支付私钥内容
     */
    public void setPayKeyContent(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.pay_key_content</code>. 支付私钥内容
     */
    public String getPayKeyContent() {
        return (String) get(20);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.is_modify_domain</code>. 是否修改开发和业务域名，0未修改，1已修改
     */
    public void setIsModifyDomain(Byte value) {
        set(21, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.is_modify_domain</code>. 是否修改开发和业务域名，0未修改，1已修改
     */
    public Byte getIsModifyDomain() {
        return (Byte) get(21);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.bind_template_id</code>. 绑定小程序的模板ID
     */
    public void setBindTemplateId(Integer value) {
        set(22, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.bind_template_id</code>. 绑定小程序的模板ID
     */
    public Integer getBindTemplateId() {
        return (Integer) get(22);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.upload_state</code>. 上传状态，0未上传，1已上传
     */
    public void setUploadState(Byte value) {
        set(23, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.upload_state</code>. 上传状态，0未上传，1已上传
     */
    public Byte getUploadState() {
        return (Byte) get(23);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.last_upload_time</code>. 上传代码时间
     */
    public void setLastUploadTime(Timestamp value) {
        set(24, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.last_upload_time</code>. 上传代码时间
     */
    public Timestamp getLastUploadTime() {
        return (Timestamp) get(24);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.audit_id</code>. 最新的审核ID
     */
    public void setAuditId(Long value) {
        set(25, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.audit_id</code>. 最新的审核ID
     */
    public Long getAuditId() {
        return (Long) get(25);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.audit_state</code>. 审核状态，0未提交，1审核中，2审核成功 3审核失败
     */
    public void setAuditState(Byte value) {
        set(26, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.audit_state</code>. 审核状态，0未提交，1审核中，2审核成功 3审核失败
     */
    public Byte getAuditState() {
        return (Byte) get(26);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.submit_audit_time</code>. 提交代码审核时间
     */
    public void setSubmitAuditTime(Timestamp value) {
        set(27, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.submit_audit_time</code>. 提交代码审核时间
     */
    public Timestamp getSubmitAuditTime() {
        return (Timestamp) get(27);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.audit_ok_time</code>. 审核通过时间
     */
    public void setAuditOkTime(Timestamp value) {
        set(28, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.audit_ok_time</code>. 审核通过时间
     */
    public Timestamp getAuditOkTime() {
        return (Timestamp) get(28);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.audit_fail_reason</code>. 未通过审核原因
     */
    public void setAuditFailReason(String value) {
        set(29, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.audit_fail_reason</code>. 未通过审核原因
     */
    public String getAuditFailReason() {
        return (String) get(29);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.publish_state</code>. 通过审核的小程序发布状态，0未发布，1已发布
     */
    public void setPublishState(Byte value) {
        set(30, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.publish_state</code>. 通过审核的小程序发布状态，0未发布，1已发布
     */
    public Byte getPublishState() {
        return (Byte) get(30);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.publish_time</code>. 程序发布时间
     */
    public void setPublishTime(Timestamp value) {
        set(31, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.publish_time</code>. 程序发布时间
     */
    public Timestamp getPublishTime() {
        return (Timestamp) get(31);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.tester</code>. 小程序体验者列表,json存储
     */
    public void setTester(String value) {
        set(32, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.tester</code>. 小程序体验者列表,json存储
     */
    public String getTester() {
        return (String) get(32);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.test_qr_path</code>. 小程序体验二维码图片路径
     */
    public void setTestQrPath(String value) {
        set(33, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.test_qr_path</code>. 小程序体验二维码图片路径
     */
    public String getTestQrPath() {
        return (String) get(33);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.category</code>. 小程序可选类目,json存储
     */
    public void setCategory(String value) {
        set(34, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.category</code>. 小程序可选类目,json存储
     */
    public String getCategory() {
        return (String) get(34);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.page_cfg</code>. 小程序页面配置,json存储
     */
    public void setPageCfg(String value) {
        set(35, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.page_cfg</code>. 小程序页面配置,json存储
     */
    public String getPageCfg() {
        return (String) get(35);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.principal_name</code>. 小程序的主体名称
     */
    public void setPrincipalName(String value) {
        set(36, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.principal_name</code>. 小程序的主体名称
     */
    public String getPrincipalName() {
        return (String) get(36);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.bind_open_app_id</code>. 绑定开放平台appId
     */
    public void setBindOpenAppId(String value) {
        set(37, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.bind_open_app_id</code>. 绑定开放平台appId
     */
    public String getBindOpenAppId() {
        return (String) get(37);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.link_official_app_id</code>. 关联公众号appId，用于发送模板消息
     */
    public void setLinkOfficialAppId(String value) {
        set(38, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.link_official_app_id</code>. 关联公众号appId，用于发送模板消息
     */
    public String getLinkOfficialAppId() {
        return (String) get(38);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.is_sub_merchant</code>. 子商户模式,0：非子商户 1：微铺宝子商户 2：通联支付子商户,3: 微信国际支付
     */
    public void setIsSubMerchant(Byte value) {
        set(39, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.is_sub_merchant</code>. 子商户模式,0：非子商户 1：微铺宝子商户 2：通联支付子商户,3: 微信国际支付
     */
    public Byte getIsSubMerchant() {
        return (Byte) get(39);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.union_pay_app_id</code>. 通联支付子商户appId
     */
    public void setUnionPayAppId(String value) {
        set(40, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.union_pay_app_id</code>. 通联支付子商户appId
     */
    public String getUnionPayAppId() {
        return (String) get(40);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.union_pay_cus_id</code>. 通联支付子商户商户号
     */
    public void setUnionPayCusId(String value) {
        set(41, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.union_pay_cus_id</code>. 通联支付子商户商户号
     */
    public String getUnionPayCusId() {
        return (String) get(41);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.union_pay_app_key</code>. 通联支付子商户密钥
     */
    public void setUnionPayAppKey(String value) {
        set(42, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.union_pay_app_key</code>. 通联支付子商户密钥
     */
    public String getUnionPayAppKey() {
        return (String) get(42);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.fee_type</code>. 标价币种，国际支付字段
     */
    public void setFeeType(String value) {
        set(43, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.fee_type</code>. 标价币种，国际支付字段
     */
    public String getFeeType() {
        return (String) get(43);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.merchant_category_code</code>. MCC码，国际支付字段
     */
    public void setMerchantCategoryCode(String value) {
        set(44, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.merchant_category_code</code>. MCC码，国际支付字段
     */
    public String getMerchantCategoryCode() {
        return (String) get(44);
    }

    /**
     * Setter for <code>mini_main.b2c_mp_auth_shop.live_pack_status</code>. 直播包状态 1：通过 2：打包审核中
     */
    public void setLivePackStatus(Byte value) {
        set(45, value);
    }

    /**
     * Getter for <code>mini_main.b2c_mp_auth_shop.live_pack_status</code>. 直播包状态 1：通过 2：打包审核中
     */
    public Byte getLivePackStatus() {
        return (Byte) get(45);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MpAuthShopRecord
     */
    public MpAuthShopRecord() {
        super(MpAuthShop.MP_AUTH_SHOP);
    }

    /**
     * Create a detached, initialised MpAuthShopRecord
     */
    public MpAuthShopRecord(String appId, Integer shopId, String nickName, String userName, String alias, String verifyTypeInfo, String headImg, String funcInfo, Byte isAuthOk, Timestamp lastAuthTime, Timestamp lastCancelAuthTime, Timestamp createTime, String qrcodeUrl, Byte openPay, Byte openCard, String authorizerInfo, String authorizationInfo, String payMchId, String payKey, String payCertContent, String payKeyContent, Byte isModifyDomain, Integer bindTemplateId, Byte uploadState, Timestamp lastUploadTime, Long auditId, Byte auditState, Timestamp submitAuditTime, Timestamp auditOkTime, String auditFailReason, Byte publishState, Timestamp publishTime, String tester, String testQrPath, String category, String pageCfg, String principalName, String bindOpenAppId, String linkOfficialAppId, Byte isSubMerchant, String unionPayAppId, String unionPayCusId, String unionPayAppKey, String feeType, String merchantCategoryCode, Byte livePackStatus) {
        super(MpAuthShop.MP_AUTH_SHOP);

        set(0, appId);
        set(1, shopId);
        set(2, nickName);
        set(3, userName);
        set(4, alias);
        set(5, verifyTypeInfo);
        set(6, headImg);
        set(7, funcInfo);
        set(8, isAuthOk);
        set(9, lastAuthTime);
        set(10, lastCancelAuthTime);
        set(11, createTime);
        set(12, qrcodeUrl);
        set(13, openPay);
        set(14, openCard);
        set(15, authorizerInfo);
        set(16, authorizationInfo);
        set(17, payMchId);
        set(18, payKey);
        set(19, payCertContent);
        set(20, payKeyContent);
        set(21, isModifyDomain);
        set(22, bindTemplateId);
        set(23, uploadState);
        set(24, lastUploadTime);
        set(25, auditId);
        set(26, auditState);
        set(27, submitAuditTime);
        set(28, auditOkTime);
        set(29, auditFailReason);
        set(30, publishState);
        set(31, publishTime);
        set(32, tester);
        set(33, testQrPath);
        set(34, category);
        set(35, pageCfg);
        set(36, principalName);
        set(37, bindOpenAppId);
        set(38, linkOfficialAppId);
        set(39, isSubMerchant);
        set(40, unionPayAppId);
        set(41, unionPayCusId);
        set(42, unionPayAppKey);
        set(43, feeType);
        set(44, merchantCategoryCode);
        set(45, livePackStatus);
    }
}
