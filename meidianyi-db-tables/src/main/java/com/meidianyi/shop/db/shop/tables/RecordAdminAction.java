/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.RecordAdminActionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordAdminAction extends TableImpl<RecordAdminActionRecord> {

    private static final long serialVersionUID = -931242772;

    /**
     * The reference instance of <code>mini_shop_8984736.b2c_record_admin_action</code>
     */
    public static final RecordAdminAction RECORD_ADMIN_ACTION = new RecordAdminAction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecordAdminActionRecord> getRecordType() {
        return RecordAdminActionRecord.class;
    }

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.id</code>. id
     */
    public final TableField<RecordAdminActionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "id");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.sys_id</code>. 操作员id
     */
    public final TableField<RecordAdminActionRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "操作员id");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.account_id</code>. sub操作员id
     */
    public final TableField<RecordAdminActionRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "sub操作员id");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.action_type</code>. 操作类型
     */
    public final TableField<RecordAdminActionRecord, Byte> ACTION_TYPE = createField("action_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "操作类型");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.template_id</code>. 模版id
     */
    public final TableField<RecordAdminActionRecord, String> TEMPLATE_ID = createField("template_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "模版id");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.template_data</code>. 模版数据
     */
    public final TableField<RecordAdminActionRecord, String> TEMPLATE_DATA = createField("template_data", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "模版数据");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.user_name</code>. 操作员名称
     */
    public final TableField<RecordAdminActionRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false), this, "操作员名称");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.mobile</code>. 操作员手机号
     */
    public final TableField<RecordAdminActionRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "操作员手机号");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.create_time</code>. 助力时间
     */
    public final TableField<RecordAdminActionRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "助力时间");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.update_time</code>. 更新时间
     */
    public final TableField<RecordAdminActionRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>mini_shop_8984736.b2c_record_admin_action.account_type</code>. 账户类型，默认1商家账户
     */
    public final TableField<RecordAdminActionRecord, Byte> ACCOUNT_TYPE = createField("account_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "账户类型，默认1商家账户");

    /**
     * Create a <code>mini_shop_8984736.b2c_record_admin_action</code> table reference
     */
    public RecordAdminAction() {
        this(DSL.name("b2c_record_admin_action"), null);
    }

    /**
     * Create an aliased <code>mini_shop_8984736.b2c_record_admin_action</code> table reference
     */
    public RecordAdminAction(String alias) {
        this(DSL.name(alias), RECORD_ADMIN_ACTION);
    }

    /**
     * Create an aliased <code>mini_shop_8984736.b2c_record_admin_action</code> table reference
     */
    public RecordAdminAction(Name alias) {
        this(alias, RECORD_ADMIN_ACTION);
    }

    private RecordAdminAction(Name alias, Table<RecordAdminActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private RecordAdminAction(Name alias, Table<RecordAdminActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RecordAdminAction(Table<O> child, ForeignKey<O, RecordAdminActionRecord> key) {
        super(child, key, RECORD_ADMIN_ACTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECORD_ADMIN_ACTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RecordAdminActionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RECORD_ADMIN_ACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RecordAdminActionRecord> getPrimaryKey() {
        return Keys.KEY_B2C_RECORD_ADMIN_ACTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RecordAdminActionRecord>> getKeys() {
        return Arrays.<UniqueKey<RecordAdminActionRecord>>asList(Keys.KEY_B2C_RECORD_ADMIN_ACTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecordAdminAction as(String alias) {
        return new RecordAdminAction(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecordAdminAction as(Name alias) {
        return new RecordAdminAction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RecordAdminAction rename(String name) {
        return new RecordAdminAction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RecordAdminAction rename(Name name) {
        return new RecordAdminAction(name, null);
    }
}
