/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.tables.records.UserAccountRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccount extends TableImpl<UserAccountRecord> {

    private static final long serialVersionUID = 785636704;

    /**
     * The reference instance of <code>jmini_shop_444801.b2c_user_account</code>
     */
    public static final UserAccount USER_ACCOUNT = new UserAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserAccountRecord> getRecordType() {
        return UserAccountRecord.class;
    }

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.id</code>.
     */
    public final TableField<UserAccountRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.user_id</code>.
     */
    public final TableField<UserAccountRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.admin_user</code>. 操作员
     */
    public final TableField<UserAccountRecord, String> ADMIN_USER = createField("admin_user", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "操作员");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.order_sn</code>. 分销订单结算产生返利
     */
    public final TableField<UserAccountRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "分销订单结算产生返利");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.amount</code>. 金额
     */
    public final TableField<UserAccountRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "金额");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.admin_note</code>. 操作员备注
     */
    public final TableField<UserAccountRecord, String> ADMIN_NOTE = createField("admin_note", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "操作员备注");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.payment</code>. 支付方式
     */
    public final TableField<UserAccountRecord, String> PAYMENT = createField("payment", org.jooq.impl.SQLDataType.VARCHAR(90).nullable(false), this, "支付方式");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.is_paid</code>. 支付类型，0：充值，1：消费
     */
    public final TableField<UserAccountRecord, Byte> IS_PAID = createField("is_paid", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "支付类型，0：充值，1：消费");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.remark_id</code>. 备注模板id
     */
    public final TableField<UserAccountRecord, String> REMARK_ID = createField("remark_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "备注模板id");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.remark_data</code>. 备注模板数据
     */
    public final TableField<UserAccountRecord, String> REMARK_DATA = createField("remark_data", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "备注模板数据");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.source</code>. 1:分销来源，0:充值
     */
    public final TableField<UserAccountRecord, Byte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1:分销来源，0:充值");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.withdraw_status</code>. 0未提现或部分统计1已统计
     */
    public final TableField<UserAccountRecord, Byte> WITHDRAW_STATUS = createField("withdraw_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0未提现或部分统计1已统计");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.settle_account</code>. 更新后的余额
     */
    public final TableField<UserAccountRecord, BigDecimal> SETTLE_ACCOUNT = createField("settle_account", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "更新后的余额");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.create_time</code>.
     */
    public final TableField<UserAccountRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_account.update_time</code>. 最后修改时间
     */
    public final TableField<UserAccountRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>jmini_shop_444801.b2c_user_account</code> table reference
     */
    public UserAccount() {
        this(DSL.name("b2c_user_account"), null);
    }

    /**
     * Create an aliased <code>jmini_shop_444801.b2c_user_account</code> table reference
     */
    public UserAccount(String alias) {
        this(DSL.name(alias), USER_ACCOUNT);
    }

    /**
     * Create an aliased <code>jmini_shop_444801.b2c_user_account</code> table reference
     */
    public UserAccount(Name alias) {
        this(alias, USER_ACCOUNT);
    }

    private UserAccount(Name alias, Table<UserAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserAccount(Name alias, Table<UserAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserAccount(Table<O> child, ForeignKey<O, UserAccountRecord> key) {
        super(child, key, USER_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_ACCOUNT_PRIMARY, Indexes.USER_ACCOUNT_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserAccountRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserAccountRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<UserAccountRecord>>asList(Keys.KEY_B2C_USER_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccount as(String alias) {
        return new UserAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccount as(Name alias) {
        return new UserAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAccount rename(String name) {
        return new UserAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAccount rename(Name name) {
        return new UserAccount(name, null);
    }
}
