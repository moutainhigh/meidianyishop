/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.BargainGoodsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BargainGoods extends TableImpl<BargainGoodsRecord> {

    private static final long serialVersionUID = 231036497;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_bargain_goods</code>
     */
    public static final BargainGoods BARGAIN_GOODS = new BargainGoods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BargainGoodsRecord> getRecordType() {
        return BargainGoodsRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_bargain_goods.id</code>.
     */
    public final TableField<BargainGoodsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_goods.bargain_id</code>.
     */
    public final TableField<BargainGoodsRecord, Integer> BARGAIN_ID = createField("bargain_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_goods.goods_id</code>.
     */
    public final TableField<BargainGoodsRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_goods.expectation_price</code>.
     */
    public final TableField<BargainGoodsRecord, BigDecimal> EXPECTATION_PRICE = createField("expectation_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_goods.floor_price</code>.
     */
    public final TableField<BargainGoodsRecord, BigDecimal> FLOOR_PRICE = createField("floor_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_goods.stock</code>.
     */
    public final TableField<BargainGoodsRecord, Integer> STOCK = createField("stock", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_goods.sale_num</code>.
     */
    public final TableField<BargainGoodsRecord, Integer> SALE_NUM = createField("sale_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_bargain_goods.update_time</code>.
     */
    public final TableField<BargainGoodsRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_bargain_goods</code> table reference
     */
    public BargainGoods() {
        this(DSL.name("b2c_bargain_goods"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_bargain_goods</code> table reference
     */
    public BargainGoods(String alias) {
        this(DSL.name(alias), BARGAIN_GOODS);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_bargain_goods</code> table reference
     */
    public BargainGoods(Name alias) {
        this(alias, BARGAIN_GOODS);
    }

    private BargainGoods(Name alias, Table<BargainGoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private BargainGoods(Name alias, Table<BargainGoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BargainGoods(Table<O> child, ForeignKey<O, BargainGoodsRecord> key) {
        super(child, key, BARGAIN_GOODS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BARGAIN_GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BargainGoodsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BARGAIN_GOODS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BargainGoodsRecord> getPrimaryKey() {
        return Keys.KEY_B2C_BARGAIN_GOODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BargainGoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<BargainGoodsRecord>>asList(Keys.KEY_B2C_BARGAIN_GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BargainGoods as(String alias) {
        return new BargainGoods(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BargainGoods as(Name alias) {
        return new BargainGoods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BargainGoods rename(String name) {
        return new BargainGoods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BargainGoods rename(Name name) {
        return new BargainGoods(name, null);
    }
}
