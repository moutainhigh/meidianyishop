/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.MpSceneRecordRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 小程序初始化场景值
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MpSceneRecord extends TableImpl<MpSceneRecordRecord> {

    private static final long serialVersionUID = -202143681;

    /**
     * The reference instance of <code>jmini_shop_666666.b2c_mp_scene_record</code>
     */
    public static final MpSceneRecord MP_SCENE_RECORD = new MpSceneRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MpSceneRecordRecord> getRecordType() {
        return MpSceneRecordRecord.class;
    }

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.user_id</code>. 用户id
     */
    public final TableField<MpSceneRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "用户id");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.path</code>. 打开小程序的路径
     */
    public final TableField<MpSceneRecordRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR(50), this, "打开小程序的路径");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.path_query</code>. 打开小程序的query
     */
    public final TableField<MpSceneRecordRecord, String> PATH_QUERY = createField("path_query", org.jooq.impl.SQLDataType.VARCHAR(500), this, "打开小程序的query");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.scene</code>. 场景值
     */
    public final TableField<MpSceneRecordRecord, Short> SCENE = createField("scene", org.jooq.impl.SQLDataType.SMALLINT, this, "场景值");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.share_ticket</code>. 转发的ticket
     */
    public final TableField<MpSceneRecordRecord, String> SHARE_TICKET = createField("share_ticket", org.jooq.impl.SQLDataType.VARCHAR(500), this, "转发的ticket");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.referrer_info</code>. referrer信息
     */
    public final TableField<MpSceneRecordRecord, String> REFERRER_INFO = createField("referrer_info", org.jooq.impl.SQLDataType.CLOB, this, "referrer信息");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.count</code>. 记录次数
     */
    public final TableField<MpSceneRecordRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "记录次数");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.create_time</code>.
     */
    public final TableField<MpSceneRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.update_time</code>. 最后修改时间
     */
    public final TableField<MpSceneRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>jmini_shop_666666.b2c_mp_scene_record.id</code>.
     */
    public final TableField<MpSceneRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * Create a <code>jmini_shop_666666.b2c_mp_scene_record</code> table reference
     */
    public MpSceneRecord() {
        this(DSL.name("b2c_mp_scene_record"), null);
    }

    /**
     * Create an aliased <code>jmini_shop_666666.b2c_mp_scene_record</code> table reference
     */
    public MpSceneRecord(String alias) {
        this(DSL.name(alias), MP_SCENE_RECORD);
    }

    /**
     * Create an aliased <code>jmini_shop_666666.b2c_mp_scene_record</code> table reference
     */
    public MpSceneRecord(Name alias) {
        this(alias, MP_SCENE_RECORD);
    }

    private MpSceneRecord(Name alias, Table<MpSceneRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private MpSceneRecord(Name alias, Table<MpSceneRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("小程序初始化场景值"));
    }

    public <O extends Record> MpSceneRecord(Table<O> child, ForeignKey<O, MpSceneRecordRecord> key) {
        super(child, key, MP_SCENE_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MP_SCENE_RECORD_PATH_CREATE_TIME, Indexes.MP_SCENE_RECORD_PRIMARY, Indexes.MP_SCENE_RECORD_SCENE_CREATE_TIME, Indexes.MP_SCENE_RECORD_USER_PATH);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MpSceneRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MP_SCENE_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MpSceneRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MP_SCENE_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MpSceneRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<MpSceneRecordRecord>>asList(Keys.KEY_B2C_MP_SCENE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpSceneRecord as(String alias) {
        return new MpSceneRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpSceneRecord as(Name alias) {
        return new MpSceneRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MpSceneRecord rename(String name) {
        return new MpSceneRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MpSceneRecord rename(Name name) {
        return new MpSceneRecord(name, null);
    }
}
