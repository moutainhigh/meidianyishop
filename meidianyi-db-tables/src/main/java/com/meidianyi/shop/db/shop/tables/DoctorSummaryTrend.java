/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.DoctorSummaryTrendRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 医师信息统计
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DoctorSummaryTrend extends TableImpl<DoctorSummaryTrendRecord> {

    private static final long serialVersionUID = 69993230;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_doctor_summary_trend</code>
     */
    public static final DoctorSummaryTrend DOCTOR_SUMMARY_TREND = new DoctorSummaryTrend();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DoctorSummaryTrendRecord> getRecordType() {
        return DoctorSummaryTrendRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.id</code>.
     */
    public final TableField<DoctorSummaryTrendRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.ref_date</code>. 2018-09-04
     */
    public final TableField<DoctorSummaryTrendRecord, Date> REF_DATE = createField("ref_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "2018-09-04");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.type</code>. 1,7,30,90
     */
    public final TableField<DoctorSummaryTrendRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1,7,30,90");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.doctor_id</code>. 医师ID
     */
    public final TableField<DoctorSummaryTrendRecord, Integer> DOCTOR_ID = createField("doctor_id", org.jooq.impl.SQLDataType.INTEGER, this, "医师ID");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.consultation_number</code>. 接诊量
     */
    public final TableField<DoctorSummaryTrendRecord, Integer> CONSULTATION_NUMBER = createField("consultation_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "接诊量");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.inquiry_money</code>. 咨询金额
     */
    public final TableField<DoctorSummaryTrendRecord, BigDecimal> INQUIRY_MONEY = createField("inquiry_money", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "咨询金额");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.inquiry_number</code>. 咨询单数
     */
    public final TableField<DoctorSummaryTrendRecord, Integer> INQUIRY_NUMBER = createField("inquiry_number", org.jooq.impl.SQLDataType.INTEGER.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "咨询单数");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.prescription_money</code>. 处方金额
     */
    public final TableField<DoctorSummaryTrendRecord, BigDecimal> PRESCRIPTION_MONEY = createField("prescription_money", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "处方金额");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.prescription_num</code>. 处方数
     */
    public final TableField<DoctorSummaryTrendRecord, Integer> PRESCRIPTION_NUM = createField("prescription_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "处方数");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.consume_money</code>. 总消费金额
     */
    public final TableField<DoctorSummaryTrendRecord, BigDecimal> CONSUME_MONEY = createField("consume_money", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "总消费金额");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.consultation_score</code>. 接诊分数
     */
    public final TableField<DoctorSummaryTrendRecord, BigDecimal> CONSULTATION_SCORE = createField("consultation_score", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "接诊分数");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.inquiry_score</code>. 咨询分数
     */
    public final TableField<DoctorSummaryTrendRecord, BigDecimal> INQUIRY_SCORE = createField("inquiry_score", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "咨询分数");

    /**
     * The column <code>mini_shop_471752.b2c_doctor_summary_trend.create_time</code>.
     */
    public final TableField<DoctorSummaryTrendRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_doctor_summary_trend</code> table reference
     */
    public DoctorSummaryTrend() {
        this(DSL.name("b2c_doctor_summary_trend"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_doctor_summary_trend</code> table reference
     */
    public DoctorSummaryTrend(String alias) {
        this(DSL.name(alias), DOCTOR_SUMMARY_TREND);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_doctor_summary_trend</code> table reference
     */
    public DoctorSummaryTrend(Name alias) {
        this(alias, DOCTOR_SUMMARY_TREND);
    }

    private DoctorSummaryTrend(Name alias, Table<DoctorSummaryTrendRecord> aliased) {
        this(alias, aliased, null);
    }

    private DoctorSummaryTrend(Name alias, Table<DoctorSummaryTrendRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("医师信息统计"));
    }

    public <O extends Record> DoctorSummaryTrend(Table<O> child, ForeignKey<O, DoctorSummaryTrendRecord> key) {
        super(child, key, DOCTOR_SUMMARY_TREND);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DOCTOR_SUMMARY_TREND_PRIMARY, Indexes.DOCTOR_SUMMARY_TREND_REF_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DoctorSummaryTrendRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DOCTOR_SUMMARY_TREND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DoctorSummaryTrendRecord> getPrimaryKey() {
        return Keys.KEY_B2C_DOCTOR_SUMMARY_TREND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DoctorSummaryTrendRecord>> getKeys() {
        return Arrays.<UniqueKey<DoctorSummaryTrendRecord>>asList(Keys.KEY_B2C_DOCTOR_SUMMARY_TREND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorSummaryTrend as(String alias) {
        return new DoctorSummaryTrend(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorSummaryTrend as(Name alias) {
        return new DoctorSummaryTrend(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DoctorSummaryTrend rename(String name) {
        return new DoctorSummaryTrend(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DoctorSummaryTrend rename(Name name) {
        return new DoctorSummaryTrend(name, null);
    }
}
