/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables.records;


import com.meidianyi.shop.db.main.tables.AliMiniAuthShop;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AliMiniAuthShopRecord extends UpdatableRecordImpl<AliMiniAuthShopRecord> {

    private static final long serialVersionUID = -103121731;

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.auth_app_id</code>. 授权商户的appid	
     */
    public void setAuthAppId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.auth_app_id</code>. 授权商户的appid	
     */
    public String getAuthAppId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.user_id</code>. 授权商户的user_id	
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.user_id</code>. 授权商户的user_id	
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_auth_token</code>. 应用授权令牌	
     */
    public void setAppAuthToken(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_auth_token</code>. 应用授权令牌	
     */
    public String getAppAuthToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_refresh_token</code>. 刷新令牌
     */
    public void setAppRefreshToken(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_refresh_token</code>. 刷新令牌
     */
    public String getAppRefreshToken() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.expires_in_time</code>. 应用授权令牌的过期时间
     */
    public void setExpiresInTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.expires_in_time</code>. 应用授权令牌的过期时间
     */
    public Timestamp getExpiresInTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.re_expires_in_time</code>. 刷新令牌的过期时间
     */
    public void setReExpiresInTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.re_expires_in_time</code>. 刷新令牌的过期时间
     */
    public Timestamp getReExpiresInTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.shop_id</code>. 店铺Id
     */
    public void setShopId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.shop_id</code>. 店铺Id
     */
    public Integer getShopId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_name</code>. 代商家创建的小程序应用名称
     */
    public void setAppName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_name</code>. 代商家创建的小程序应用名称
     */
    public String getAppName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_english_name</code>. 小程序英文名称，长度3~20个字符	
     */
    public void setAppEnglishName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_english_name</code>. 小程序英文名称，长度3~20个字符	
     */
    public String getAppEnglishName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_category_ids</code>. 小程序应用类目，参数格式：一级类目_二级类目。
     */
    public void setAppCategoryIds(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_category_ids</code>. 小程序应用类目，参数格式：一级类目_二级类目。
     */
    public String getAppCategoryIds() {
        return (String) get(9);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_slogan</code>. 代商家创建的小程序的简介，请用一句话简要描述小程序提供的服务；应用上架后一个自然月可修改5次（10~32个字符）	
     */
    public void setAppSlogan(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_slogan</code>. 代商家创建的小程序的简介，请用一句话简要描述小程序提供的服务；应用上架后一个自然月可修改5次（10~32个字符）	
     */
    public String getAppSlogan() {
        return (String) get(10);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.service_phone</code>. 商家小程序的客服电话，推荐填写商家小程序客服电话和邮箱，可以二选一填写，但不能同时为空
     */
    public void setServicePhone(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.service_phone</code>. 商家小程序的客服电话，推荐填写商家小程序客服电话和邮箱，可以二选一填写，但不能同时为空
     */
    public String getServicePhone() {
        return (String) get(11);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.service_email</code>. 商家小程序客服邮箱 
     */
    public void setServiceEmail(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.service_email</code>. 商家小程序客服邮箱 
     */
    public String getServiceEmail() {
        return (String) get(12);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_logo</code>. 商家小程序应用图标，最大256KB,png、jpeg、jpg格式，建议上传像素为180*180
     */
    public void setAppLogo(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_logo</code>. 商家小程序应用图标，最大256KB,png、jpeg、jpg格式，建议上传像素为180*180
     */
    public String getAppLogo() {
        return (String) get(13);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_desc</code>. 商家小程序描述信息，简要描述小程序主要功能（20-200个字）
     */
    public void setAppDesc(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_desc</code>. 商家小程序描述信息，简要描述小程序主要功能（20-200个字）
     */
    public String getAppDesc() {
        return (String) get(14);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.is_auth_ok</code>. 是否授权成功,如果公众号后台取消授权，则为0
     */
    public void setIsAuthOk(Byte value) {
        set(15, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.is_auth_ok</code>. 是否授权成功,如果公众号后台取消授权，则为0
     */
    public Byte getIsAuthOk() {
        return (Byte) get(15);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.last_auth_time</code>. 最后成功授权的时间
     */
    public void setLastAuthTime(Timestamp value) {
        set(16, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.last_auth_time</code>. 最后成功授权的时间
     */
    public Timestamp getLastAuthTime() {
        return (Timestamp) get(16);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.last_cancel_auth_time</code>. 最后取消授权的时间
     */
    public void setLastCancelAuthTime(Timestamp value) {
        set(17, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.last_cancel_auth_time</code>. 最后取消授权的时间
     */
    public Timestamp getLastCancelAuthTime() {
        return (Timestamp) get(17);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.app_version</code>. 小程序版本
     */
    public void setAppVersion(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.app_version</code>. 小程序版本
     */
    public String getAppVersion() {
        return (String) get(18);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.status</code>. 小程序版本状态，INIT-开发中，AUDITING-审核中，WAIT_RELEASE-审核通过，AUDIT_REJECT-审核驳回，RELEASE-已上架，GRAY-灰度中，OFFLINE-下架	
     */
    public void setStatus(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.status</code>. 小程序版本状态，INIT-开发中，AUDITING-审核中，WAIT_RELEASE-审核通过，AUDIT_REJECT-审核驳回，RELEASE-已上架，GRAY-灰度中，OFFLINE-下架	
     */
    public String getStatus() {
        return (String) get(19);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.detail_info</code>. 小程序详细信息，参考https://docs.open.alipay.com/api_49/alipay.open.mini.version.detail.query/
     */
    public void setDetailInfo(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.detail_info</code>. 小程序详细信息，参考https://docs.open.alipay.com/api_49/alipay.open.mini.version.detail.query/
     */
    public String getDetailInfo() {
        return (String) get(20);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.experience_status</code>. 体验版打包状态，expVersionPackged-体验版打包成功，expVersionPackaging-体验版打包中，notExpVersion-非体验版
     */
    public void setExperienceStatus(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.experience_status</code>. 体验版打包状态，expVersionPackged-体验版打包成功，expVersionPackaging-体验版打包中，notExpVersion-非体验版
     */
    public String getExperienceStatus() {
        return (String) get(21);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.tester</code>. 小程序体验者列表,json存储
     */
    public void setTester(String value) {
        set(22, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.tester</code>. 小程序体验者列表,json存储
     */
    public String getTester() {
        return (String) get(22);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.exp_qr_code_url</code>. 小程序体验版二维码地址	
     */
    public void setExpQrCodeUrl(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.exp_qr_code_url</code>. 小程序体验版二维码地址	
     */
    public String getExpQrCodeUrl() {
        return (String) get(23);
    }

    /**
     * Setter for <code>mini_main.b2c_ali_mini_auth_shop.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(24, value);
    }

    /**
     * Getter for <code>mini_main.b2c_ali_mini_auth_shop.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AliMiniAuthShopRecord
     */
    public AliMiniAuthShopRecord() {
        super(AliMiniAuthShop.ALI_MINI_AUTH_SHOP);
    }

    /**
     * Create a detached, initialised AliMiniAuthShopRecord
     */
    public AliMiniAuthShopRecord(String authAppId, String userId, String appAuthToken, String appRefreshToken, Timestamp expiresInTime, Timestamp reExpiresInTime, Integer shopId, String appName, String appEnglishName, String appCategoryIds, String appSlogan, String servicePhone, String serviceEmail, String appLogo, String appDesc, Byte isAuthOk, Timestamp lastAuthTime, Timestamp lastCancelAuthTime, String appVersion, String status, String detailInfo, String experienceStatus, String tester, String expQrCodeUrl, Timestamp createTime) {
        super(AliMiniAuthShop.ALI_MINI_AUTH_SHOP);

        set(0, authAppId);
        set(1, userId);
        set(2, appAuthToken);
        set(3, appRefreshToken);
        set(4, expiresInTime);
        set(5, reExpiresInTime);
        set(6, shopId);
        set(7, appName);
        set(8, appEnglishName);
        set(9, appCategoryIds);
        set(10, appSlogan);
        set(11, servicePhone);
        set(12, serviceEmail);
        set(13, appLogo);
        set(14, appDesc);
        set(15, isAuthOk);
        set(16, lastAuthTime);
        set(17, lastCancelAuthTime);
        set(18, appVersion);
        set(19, status);
        set(20, detailInfo);
        set(21, experienceStatus);
        set(22, tester);
        set(23, expQrCodeUrl);
        set(24, createTime);
    }
}
