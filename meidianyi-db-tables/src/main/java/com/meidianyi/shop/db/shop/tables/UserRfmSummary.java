/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.UserRfmSummaryRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRfmSummary extends TableImpl<UserRfmSummaryRecord> {

    private static final long serialVersionUID = 1316865000;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user_rfm_summary</code>
     */
    public static final UserRfmSummary USER_RFM_SUMMARY = new UserRfmSummary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRfmSummaryRecord> getRecordType() {
        return UserRfmSummaryRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.id</code>.
     */
    public final TableField<UserRfmSummaryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.ref_date</code>. 统计日期，如2018-09-04，按照下单时间
     */
    public final TableField<UserRfmSummaryRecord, Date> REF_DATE = createField("ref_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "统计日期，如2018-09-04，按照下单时间");

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.recency_type</code>. 最近一次消费时间类型（小达顺序，左闭右开）：1最近5天内，2最近5到10天，3最近10到30天，4最近30到90天，5最近90到180天，6最近180到365天，7最近365天以上
     */
    public final TableField<UserRfmSummaryRecord, Byte> RECENCY_TYPE = createField("recency_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "最近一次消费时间类型（小达顺序，左闭右开）：1最近5天内，2最近5到10天，3最近10到30天，4最近30到90天，5最近90到180天，6最近180到365天，7最近365天以上");

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.frequency_type</code>. 最近时间范围内用户消费频次类型：1，2，3，4，5大于等于5次
     */
    public final TableField<UserRfmSummaryRecord, Byte> FREQUENCY_TYPE = createField("frequency_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "最近时间范围内用户消费频次类型：1，2，3，4，5大于等于5次");

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.total_paid_money</code>. 总成交金额
     */
    public final TableField<UserRfmSummaryRecord, BigDecimal> TOTAL_PAID_MONEY = createField("total_paid_money", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "总成交金额");

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.pay_user_num</code>. 下单人数（已付款订单人数）
     */
    public final TableField<UserRfmSummaryRecord, Integer> PAY_USER_NUM = createField("pay_user_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "下单人数（已付款订单人数）");

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.create_time</code>.
     */
    public final TableField<UserRfmSummaryRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.update_time</code>. 最后修改时间
     */
    public final TableField<UserRfmSummaryRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>mini_shop_471752.b2c_user_rfm_summary.order_num</code>. 订单数量（已付款订单数）
     */
    public final TableField<UserRfmSummaryRecord, Integer> ORDER_NUM = createField("order_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "订单数量（已付款订单数）");

    /**
     * Create a <code>mini_shop_471752.b2c_user_rfm_summary</code> table reference
     */
    public UserRfmSummary() {
        this(DSL.name("b2c_user_rfm_summary"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_rfm_summary</code> table reference
     */
    public UserRfmSummary(String alias) {
        this(DSL.name(alias), USER_RFM_SUMMARY);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_rfm_summary</code> table reference
     */
    public UserRfmSummary(Name alias) {
        this(alias, USER_RFM_SUMMARY);
    }

    private UserRfmSummary(Name alias, Table<UserRfmSummaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserRfmSummary(Name alias, Table<UserRfmSummaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserRfmSummary(Table<O> child, ForeignKey<O, UserRfmSummaryRecord> key) {
        super(child, key, USER_RFM_SUMMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_RFM_SUMMARY_PRIMARY, Indexes.USER_RFM_SUMMARY_REF_DATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserRfmSummaryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_RFM_SUMMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserRfmSummaryRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_RFM_SUMMARY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserRfmSummaryRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRfmSummaryRecord>>asList(Keys.KEY_B2C_USER_RFM_SUMMARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRfmSummary as(String alias) {
        return new UserRfmSummary(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRfmSummary as(Name alias) {
        return new UserRfmSummary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserRfmSummary rename(String name) {
        return new UserRfmSummary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserRfmSummary rename(Name name) {
        return new UserRfmSummary(name, null);
    }
}
