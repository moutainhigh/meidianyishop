/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables;


import com.meidianyi.shop.db.main.Indexes;
import com.meidianyi.shop.db.main.Keys;
import com.meidianyi.shop.db.main.MiniMain;
import com.meidianyi.shop.db.main.tables.records.AliMiniAgentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AliMiniAgent extends TableImpl<AliMiniAgentRecord> {

    private static final long serialVersionUID = 1251197472;

    /**
     * The reference instance of <code>mini_main.b2c_ali_mini_agent</code>
     */
    public static final AliMiniAgent ALI_MINI_AGENT = new AliMiniAgent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AliMiniAgentRecord> getRecordType() {
        return AliMiniAgentRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.rec_id</code>.
     */
    public final TableField<AliMiniAgentRecord, Integer> REC_ID = createField("rec_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.shop_id</code>. 店铺Id
     */
    public final TableField<AliMiniAgentRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "店铺Id");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.account</code>. isv代操作的商户账号，可以是支付宝账号，也可以是pid（2088开头）
     */
    public final TableField<AliMiniAgentRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "isv代操作的商户账号，可以是支付宝账号，也可以是pid（2088开头）");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.contact_name</code>. 联系人名称
     */
    public final TableField<AliMiniAgentRecord, String> CONTACT_NAME = createField("contact_name", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "联系人名称");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.contact_mobile</code>. 联系人手机号码
     */
    public final TableField<AliMiniAgentRecord, String> CONTACT_MOBILE = createField("contact_mobile", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "联系人手机号码");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.contact_email</code>. 联系人邮箱
     */
    public final TableField<AliMiniAgentRecord, String> CONTACT_EMAIL = createField("contact_email", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "联系人邮箱");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.order_ticket</code>. 订单授权凭证，填写都则对应事务提交进入预授权模式
     */
    public final TableField<AliMiniAgentRecord, String> ORDER_TICKET = createField("order_ticket", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "订单授权凭证，填写都则对应事务提交进入预授权模式");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.batch_no</code>. 本次代商户操作的全局唯一事务编号
     */
    public final TableField<AliMiniAgentRecord, String> BATCH_NO = createField("batch_no", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "本次代商户操作的全局唯一事务编号");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.create_agent_result</code>. 提交事务接口结果,json
     */
    public final TableField<AliMiniAgentRecord, String> CREATE_AGENT_RESULT = createField("create_agent_result", org.jooq.impl.SQLDataType.CLOB, this, "提交事务接口结果,json");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.batch_status</code>. ISV 代商户操作事务状态，事务状态包括：init=初始状态，submit=提交状态，cancel=取消状态，timeout=超时状态，init状态的事务，在【1个小时】后会自动超时
     */
    public final TableField<AliMiniAgentRecord, String> BATCH_STATUS = createField("batch_status", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "ISV 代商户操作事务状态，事务状态包括：init=初始状态，submit=提交状态，cancel=取消状态，timeout=超时状态，init状态的事务，在【1个小时】后会自动超时");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.create_agent_time</code>. 事务初始时间
     */
    public final TableField<AliMiniAgentRecord, Timestamp> CREATE_AGENT_TIME = createField("create_agent_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "事务初始时间");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.app_name</code>. 代商家创建的小程序应用名称
     */
    public final TableField<AliMiniAgentRecord, String> APP_NAME = createField("app_name", org.jooq.impl.SQLDataType.VARCHAR(191), this, "代商家创建的小程序应用名称");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.app_english_name</code>. 小程序英文名称，长度3~20个字符	
     */
    public final TableField<AliMiniAgentRecord, String> APP_ENGLISH_NAME = createField("app_english_name", org.jooq.impl.SQLDataType.VARCHAR(191), this, "小程序英文名称，长度3~20个字符	");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.app_category_ids</code>. 小程序应用类目，参数格式：一级类目_二级类目。
     */
    public final TableField<AliMiniAgentRecord, String> APP_CATEGORY_IDS = createField("app_category_ids", org.jooq.impl.SQLDataType.VARCHAR(191), this, "小程序应用类目，参数格式：一级类目_二级类目。");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.app_slogan</code>. 代商家创建的小程序的简介，请用一句话简要描述小程序提供的服务；应用上架后一个自然月可修改5次（10~32个字符）	
     */
    public final TableField<AliMiniAgentRecord, String> APP_SLOGAN = createField("app_slogan", org.jooq.impl.SQLDataType.VARCHAR(191), this, "代商家创建的小程序的简介，请用一句话简要描述小程序提供的服务；应用上架后一个自然月可修改5次（10~32个字符）	");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.service_phone</code>. 商家小程序的客服电话，推荐填写商家小程序客服电话和邮箱，可以二选一填写，但不能同时为空
     */
    public final TableField<AliMiniAgentRecord, String> SERVICE_PHONE = createField("service_phone", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "商家小程序的客服电话，推荐填写商家小程序客服电话和邮箱，可以二选一填写，但不能同时为空");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.service_email</code>. 商家小程序客服邮箱 
     */
    public final TableField<AliMiniAgentRecord, String> SERVICE_EMAIL = createField("service_email", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "商家小程序客服邮箱 ");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.app_logo</code>. 商家小程序应用图标，最大256KB,png、jpeg、jpg格式，建议上传像素为180*180
     */
    public final TableField<AliMiniAgentRecord, String> APP_LOGO = createField("app_logo", org.jooq.impl.SQLDataType.VARCHAR(191), this, "商家小程序应用图标，最大256KB,png、jpeg、jpg格式，建议上传像素为180*180");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.app_desc</code>. 商家小程序描述信息，简要描述小程序主要功能（20-200个字）
     */
    public final TableField<AliMiniAgentRecord, String> APP_DESC = createField("app_desc", org.jooq.impl.SQLDataType.VARCHAR(191), this, "商家小程序描述信息，简要描述小程序主要功能（20-200个字）");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.create_mini_result</code>. 创建小程序接口结果,json
     */
    public final TableField<AliMiniAgentRecord, String> CREATE_MINI_RESULT = createField("create_mini_result", org.jooq.impl.SQLDataType.CLOB, this, "创建小程序接口结果,json");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.create_mini_time</code>. 创建小程序时间
     */
    public final TableField<AliMiniAgentRecord, Timestamp> CREATE_MINI_TIME = createField("create_mini_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建小程序时间");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.user_id</code>. 授权商户的user_id	
     */
    public final TableField<AliMiniAgentRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(191), this, "授权商户的user_id	");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.auth_app_id</code>. 授权商户的appid	
     */
    public final TableField<AliMiniAgentRecord, String> AUTH_APP_ID = createField("auth_app_id", org.jooq.impl.SQLDataType.VARCHAR(191), this, "授权商户的appid	");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.confirm_agent_result</code>. 提交事务接口结果,json
     */
    public final TableField<AliMiniAgentRecord, String> CONFIRM_AGENT_RESULT = createField("confirm_agent_result", org.jooq.impl.SQLDataType.CLOB, this, "提交事务接口结果,json");

    /**
     * The column <code>mini_main.b2c_ali_mini_agent.confirm_agent_time</code>. 提交事务时间
     */
    public final TableField<AliMiniAgentRecord, Timestamp> CONFIRM_AGENT_TIME = createField("confirm_agent_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "提交事务时间");

    /**
     * Create a <code>mini_main.b2c_ali_mini_agent</code> table reference
     */
    public AliMiniAgent() {
        this(DSL.name("b2c_ali_mini_agent"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_ali_mini_agent</code> table reference
     */
    public AliMiniAgent(String alias) {
        this(DSL.name(alias), ALI_MINI_AGENT);
    }

    /**
     * Create an aliased <code>mini_main.b2c_ali_mini_agent</code> table reference
     */
    public AliMiniAgent(Name alias) {
        this(alias, ALI_MINI_AGENT);
    }

    private AliMiniAgent(Name alias, Table<AliMiniAgentRecord> aliased) {
        this(alias, aliased, null);
    }

    private AliMiniAgent(Name alias, Table<AliMiniAgentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AliMiniAgent(Table<O> child, ForeignKey<O, AliMiniAgentRecord> key) {
        super(child, key, ALI_MINI_AGENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ALI_MINI_AGENT_AUTH_APP_ID, Indexes.ALI_MINI_AGENT_PRIMARY, Indexes.ALI_MINI_AGENT_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AliMiniAgentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ALI_MINI_AGENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AliMiniAgentRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ALI_MINI_AGENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AliMiniAgentRecord>> getKeys() {
        return Arrays.<UniqueKey<AliMiniAgentRecord>>asList(Keys.KEY_B2C_ALI_MINI_AGENT_PRIMARY, Keys.KEY_B2C_ALI_MINI_AGENT_SHOP_ID, Keys.KEY_B2C_ALI_MINI_AGENT_AUTH_APP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AliMiniAgent as(String alias) {
        return new AliMiniAgent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AliMiniAgent as(Name alias) {
        return new AliMiniAgent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AliMiniAgent rename(String name) {
        return new AliMiniAgent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AliMiniAgent rename(Name name) {
        return new AliMiniAgent(name, null);
    }
}
