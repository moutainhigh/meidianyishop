/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.GoodsChronicCoupleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 慢性病药品关联信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoodsChronicCouple extends TableImpl<GoodsChronicCoupleRecord> {

    private static final long serialVersionUID = -92384970;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_goods_chronic_couple</code>
     */
    public static final GoodsChronicCouple GOODS_CHRONIC_COUPLE = new GoodsChronicCouple();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoodsChronicCoupleRecord> getRecordType() {
        return GoodsChronicCoupleRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_goods_chronic_couple.id</code>.
     */
    public final TableField<GoodsChronicCoupleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_goods_chronic_couple.goods_common_name</code>. 药品通用名
     */
    public final TableField<GoodsChronicCoupleRecord, String> GOODS_COMMON_NAME = createField("goods_common_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "药品通用名");

    /**
     * The column <code>mini_shop_471752.b2c_goods_chronic_couple.goods_form</code>. 药品剂型
     */
    public final TableField<GoodsChronicCoupleRecord, String> GOODS_FORM = createField("goods_form", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "药品剂型");

    /**
     * The column <code>mini_shop_471752.b2c_goods_chronic_couple.label_name</code>. 慢性标签名称
     */
    public final TableField<GoodsChronicCoupleRecord, String> LABEL_NAME = createField("label_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "慢性标签名称");

    /**
     * Create a <code>mini_shop_471752.b2c_goods_chronic_couple</code> table reference
     */
    public GoodsChronicCouple() {
        this(DSL.name("b2c_goods_chronic_couple"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_goods_chronic_couple</code> table reference
     */
    public GoodsChronicCouple(String alias) {
        this(DSL.name(alias), GOODS_CHRONIC_COUPLE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_goods_chronic_couple</code> table reference
     */
    public GoodsChronicCouple(Name alias) {
        this(alias, GOODS_CHRONIC_COUPLE);
    }

    private GoodsChronicCouple(Name alias, Table<GoodsChronicCoupleRecord> aliased) {
        this(alias, aliased, null);
    }

    private GoodsChronicCouple(Name alias, Table<GoodsChronicCoupleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("慢性病药品关联信息"));
    }

    public <O extends Record> GoodsChronicCouple(Table<O> child, ForeignKey<O, GoodsChronicCoupleRecord> key) {
        super(child, key, GOODS_CHRONIC_COUPLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GOODS_CHRONIC_COUPLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GoodsChronicCoupleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GOODS_CHRONIC_COUPLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GoodsChronicCoupleRecord> getPrimaryKey() {
        return Keys.KEY_B2C_GOODS_CHRONIC_COUPLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GoodsChronicCoupleRecord>> getKeys() {
        return Arrays.<UniqueKey<GoodsChronicCoupleRecord>>asList(Keys.KEY_B2C_GOODS_CHRONIC_COUPLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GoodsChronicCouple as(String alias) {
        return new GoodsChronicCouple(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GoodsChronicCouple as(Name alias) {
        return new GoodsChronicCouple(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsChronicCouple rename(String name) {
        return new GoodsChronicCouple(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GoodsChronicCouple rename(Name name) {
        return new GoodsChronicCouple(name, null);
    }
}
