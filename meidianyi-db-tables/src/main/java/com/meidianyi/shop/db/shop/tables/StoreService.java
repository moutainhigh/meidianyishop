/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.StoreServiceRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreService extends TableImpl<StoreServiceRecord> {

    private static final long serialVersionUID = -1001726985;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_store_service</code>
     */
    public static final StoreService STORE_SERVICE = new StoreService();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StoreServiceRecord> getRecordType() {
        return StoreServiceRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_store_service.id</code>.
     */
    public final TableField<StoreServiceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.store_id</code>. 门店id
     */
    public final TableField<StoreServiceRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "门店id");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.service_name</code>. 服务名称
     */
    public final TableField<StoreServiceRecord, String> SERVICE_NAME = createField("service_name", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "服务名称");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.service_sn</code>. 服务编码
     */
    public final TableField<StoreServiceRecord, String> SERVICE_SN = createField("service_sn", org.jooq.impl.SQLDataType.VARCHAR(60).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "服务编码");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.sale_num</code>. 销量
     */
    public final TableField<StoreServiceRecord, Integer> SALE_NUM = createField("sale_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "销量");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.service_price</code>. 服务价格
     */
    public final TableField<StoreServiceRecord, BigDecimal> SERVICE_PRICE = createField("service_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "服务价格");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.service_subsist</code>. 预约订金
     */
    public final TableField<StoreServiceRecord, BigDecimal> SERVICE_SUBSIST = createField("service_subsist", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "预约订金");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.cat_id</code>. 服务分类
     */
    public final TableField<StoreServiceRecord, Integer> CAT_ID = createField("cat_id", org.jooq.impl.SQLDataType.INTEGER, this, "服务分类");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.service_shelf</code>. 上下架 1:上架，0:下架
     */
    public final TableField<StoreServiceRecord, Byte> SERVICE_SHELF = createField("service_shelf", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "上下架 1:上架，0:下架");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.service_img</code>. 分类主图
     */
    public final TableField<StoreServiceRecord, String> SERVICE_IMG = createField("service_img", org.jooq.impl.SQLDataType.CLOB, this, "分类主图");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.start_date</code>. 可服务日期开始时间
     */
    public final TableField<StoreServiceRecord, Date> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.DATE, this, "可服务日期开始时间");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.end_date</code>. 可服务日期结束时间
     */
    public final TableField<StoreServiceRecord, Date> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.DATE, this, "可服务日期结束时间");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.start_period</code>. 开始服务时段
     */
    public final TableField<StoreServiceRecord, String> START_PERIOD = createField("start_period", org.jooq.impl.SQLDataType.VARCHAR(10), this, "开始服务时段");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.end_period</code>. 结束服务时段
     */
    public final TableField<StoreServiceRecord, String> END_PERIOD = createField("end_period", org.jooq.impl.SQLDataType.VARCHAR(10), this, "结束服务时段");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.service_duration</code>. 服务时长
     */
    public final TableField<StoreServiceRecord, Integer> SERVICE_DURATION = createField("service_duration", org.jooq.impl.SQLDataType.INTEGER, this, "服务时长");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.service_type</code>. 服务类型:0无技师1有技师
     */
    public final TableField<StoreServiceRecord, Byte> SERVICE_TYPE = createField("service_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "服务类型:0无技师1有技师");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.services_number</code>. 服务数量
     */
    public final TableField<StoreServiceRecord, Integer> SERVICES_NUMBER = createField("services_number", org.jooq.impl.SQLDataType.INTEGER, this, "服务数量");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.tech_services_number</code>. 技师单时段服务数量
     */
    public final TableField<StoreServiceRecord, Integer> TECH_SERVICES_NUMBER = createField("tech_services_number", org.jooq.impl.SQLDataType.INTEGER, this, "技师单时段服务数量");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.content</code>. 服务描述
     */
    public final TableField<StoreServiceRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "服务描述");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.create_time</code>.
     */
    public final TableField<StoreServiceRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.update_time</code>. 最后修改时间
     */
    public final TableField<StoreServiceRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.charge_resolve</code>. 收费说明
     */
    public final TableField<StoreServiceRecord, String> CHARGE_RESOLVE = createField("charge_resolve", org.jooq.impl.SQLDataType.VARCHAR(255), this, "收费说明");

    /**
     * The column <code>mini_shop_471752.b2c_store_service.del_flag</code>. 1为删除状态
     */
    public final TableField<StoreServiceRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1为删除状态");

    /**
     * Create a <code>mini_shop_471752.b2c_store_service</code> table reference
     */
    public StoreService() {
        this(DSL.name("b2c_store_service"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_store_service</code> table reference
     */
    public StoreService(String alias) {
        this(DSL.name(alias), STORE_SERVICE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_store_service</code> table reference
     */
    public StoreService(Name alias) {
        this(alias, STORE_SERVICE);
    }

    private StoreService(Name alias, Table<StoreServiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private StoreService(Name alias, Table<StoreServiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> StoreService(Table<O> child, ForeignKey<O, StoreServiceRecord> key) {
        super(child, key, STORE_SERVICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STORE_SERVICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StoreServiceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STORE_SERVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StoreServiceRecord> getPrimaryKey() {
        return Keys.KEY_B2C_STORE_SERVICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StoreServiceRecord>> getKeys() {
        return Arrays.<UniqueKey<StoreServiceRecord>>asList(Keys.KEY_B2C_STORE_SERVICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreService as(String alias) {
        return new StoreService(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreService as(Name alias) {
        return new StoreService(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StoreService rename(String name) {
        return new StoreService(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StoreService rename(Name name) {
        return new StoreService(name, null);
    }
}
