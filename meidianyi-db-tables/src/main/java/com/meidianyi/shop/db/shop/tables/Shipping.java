/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.ShippingRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Shipping extends TableImpl<ShippingRecord> {

    private static final long serialVersionUID = -1129900447;

    /**
     * The reference instance of <code>mini_shop_6797286.b2c_shipping</code>
     */
    public static final Shipping SHIPPING = new Shipping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShippingRecord> getRecordType() {
        return ShippingRecord.class;
    }

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.shipping_id</code>.
     */
    public final TableField<ShippingRecord, Byte> SHIPPING_ID = createField("shipping_id", org.jooq.impl.SQLDataType.TINYINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.shipping_code</code>.
     */
    public final TableField<ShippingRecord, String> SHIPPING_CODE = createField("shipping_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.express100_code</code>. 快递100code
     */
    public final TableField<ShippingRecord, String> EXPRESS100_CODE = createField("express100_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "快递100code");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.shipping_name</code>.
     */
    public final TableField<ShippingRecord, String> SHIPPING_NAME = createField("shipping_name", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.shipping_desc</code>.
     */
    public final TableField<ShippingRecord, String> SHIPPING_DESC = createField("shipping_desc", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.insure</code>.
     */
    public final TableField<ShippingRecord, String> INSURE = createField("insure", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.support_cod</code>.
     */
    public final TableField<ShippingRecord, Byte> SUPPORT_COD = createField("support_cod", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.enabled</code>.
     */
    public final TableField<ShippingRecord, Byte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.shipping_print</code>.
     */
    public final TableField<ShippingRecord, String> SHIPPING_PRINT = createField("shipping_print", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.print_model</code>.
     */
    public final TableField<ShippingRecord, Byte> PRINT_MODEL = createField("print_model", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.shipping_order</code>.
     */
    public final TableField<ShippingRecord, Byte> SHIPPING_ORDER = createField("shipping_order", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.create_time</code>.
     */
    public final TableField<ShippingRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_6797286.b2c_shipping.update_time</code>. 最后修改时间
     */
    public final TableField<ShippingRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_6797286.b2c_shipping</code> table reference
     */
    public Shipping() {
        this(DSL.name("b2c_shipping"), null);
    }

    /**
     * Create an aliased <code>mini_shop_6797286.b2c_shipping</code> table reference
     */
    public Shipping(String alias) {
        this(DSL.name(alias), SHIPPING);
    }

    /**
     * Create an aliased <code>mini_shop_6797286.b2c_shipping</code> table reference
     */
    public Shipping(Name alias) {
        this(alias, SHIPPING);
    }

    private Shipping(Name alias, Table<ShippingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Shipping(Name alias, Table<ShippingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Shipping(Table<O> child, ForeignKey<O, ShippingRecord> key) {
        super(child, key, SHIPPING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHIPPING_PRIMARY, Indexes.SHIPPING_SHIPPING_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShippingRecord, Byte> getIdentity() {
        return Keys.IDENTITY_SHIPPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShippingRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHIPPING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShippingRecord>> getKeys() {
        return Arrays.<UniqueKey<ShippingRecord>>asList(Keys.KEY_B2C_SHIPPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Shipping as(String alias) {
        return new Shipping(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Shipping as(Name alias) {
        return new Shipping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Shipping rename(String name) {
        return new Shipping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Shipping rename(Name name) {
        return new Shipping(name, null);
    }
}
