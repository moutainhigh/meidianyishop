/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.UserImportRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserImport extends TableImpl<UserImportRecord> {

    private static final long serialVersionUID = 765802569;

    /**
     * The reference instance of <code>mini_shop_8984736.b2c_user_import</code>
     */
    public static final UserImport USER_IMPORT = new UserImport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserImportRecord> getRecordType() {
        return UserImportRecord.class;
    }

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.id</code>.
     */
    public final TableField<UserImportRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.card_id</code>. 会员卡ID
     */
    public final TableField<UserImportRecord, String> CARD_ID = createField("card_id", org.jooq.impl.SQLDataType.VARCHAR(100), this, "会员卡ID");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.total_num</code>. 总数
     */
    public final TableField<UserImportRecord, Integer> TOTAL_NUM = createField("total_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "总数");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.success_num</code>. 成功数
     */
    public final TableField<UserImportRecord, Integer> SUCCESS_NUM = createField("success_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "成功数");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.tag_id</code>. 标签ID
     */
    public final TableField<UserImportRecord, Integer> TAG_ID = createField("tag_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "标签ID");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.group_id</code>. 分销员分组ID
     */
    public final TableField<UserImportRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分销员分组ID");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.create_time</code>. 创建时间
     */
    public final TableField<UserImportRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.update_time</code>. 最后修改时间
     */
    public final TableField<UserImportRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.del_flag</code>.
     */
    public final TableField<UserImportRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_user_import.del_time</code>.
     */
    public final TableField<UserImportRecord, Timestamp> DEL_TIME = createField("del_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_8984736.b2c_user_import</code> table reference
     */
    public UserImport() {
        this(DSL.name("b2c_user_import"), null);
    }

    /**
     * Create an aliased <code>mini_shop_8984736.b2c_user_import</code> table reference
     */
    public UserImport(String alias) {
        this(DSL.name(alias), USER_IMPORT);
    }

    /**
     * Create an aliased <code>mini_shop_8984736.b2c_user_import</code> table reference
     */
    public UserImport(Name alias) {
        this(alias, USER_IMPORT);
    }

    private UserImport(Name alias, Table<UserImportRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserImport(Name alias, Table<UserImportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserImport(Table<O> child, ForeignKey<O, UserImportRecord> key) {
        super(child, key, USER_IMPORT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
    	 return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_IMPORT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserImportRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_IMPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserImportRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_IMPORT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserImportRecord>> getKeys() {
        return Arrays.<UniqueKey<UserImportRecord>>asList(Keys.KEY_B2C_USER_IMPORT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserImport as(String alias) {
        return new UserImport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserImport as(Name alias) {
        return new UserImport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserImport rename(String name) {
        return new UserImport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserImport rename(Name name) {
        return new UserImport(name, null);
    }
}
