/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables;


import com.meidianyi.shop.db.main.Indexes;
import com.meidianyi.shop.db.main.Keys;
import com.meidianyi.shop.db.main.MiniMain;
import com.meidianyi.shop.db.main.tables.records.MpOfficialAccountUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MpOfficialAccountUser extends TableImpl<MpOfficialAccountUserRecord> {

    private static final long serialVersionUID = -1565706856;

    /**
     * The reference instance of <code>mini_main.b2c_mp_official_account_user</code>
     */
    public static final MpOfficialAccountUser MP_OFFICIAL_ACCOUNT_USER = new MpOfficialAccountUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MpOfficialAccountUserRecord> getRecordType() {
        return MpOfficialAccountUserRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.rec_id</code>.
     */
    public final TableField<MpOfficialAccountUserRecord, Integer> REC_ID = createField("rec_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.openid</code>. 用户的标识，对当前公众号唯一
     */
    public final TableField<MpOfficialAccountUserRecord, String> OPENID = createField("openid", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "用户的标识，对当前公众号唯一");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.app_id</code>. 授权公众号appId
     */
    public final TableField<MpOfficialAccountUserRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false), this, "授权公众号appId");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.sys_id</code>. 系统账户ID
     */
    public final TableField<MpOfficialAccountUserRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "系统账户ID");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.subscribe</code>. 是否订阅，为0代表此用户没有关注该公众号，拉取不到其余信息。
     */
    public final TableField<MpOfficialAccountUserRecord, Byte> SUBSCRIBE = createField("subscribe", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否订阅，为0代表此用户没有关注该公众号，拉取不到其余信息。");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.nickname</code>.
     */
    public final TableField<MpOfficialAccountUserRecord, String> NICKNAME = createField("nickname", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.sex</code>. 用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
     */
    public final TableField<MpOfficialAccountUserRecord, Byte> SEX = createField("sex", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "用户的性别，值为1时是男性，值为2时是女性，值为0时是未知");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.language</code>. 用户的语言，简体中文为zh_CN
     */
    public final TableField<MpOfficialAccountUserRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户的语言，简体中文为zh_CN");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.city</code>. 用户所在城市
     */
    public final TableField<MpOfficialAccountUserRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(50), this, "用户所在城市");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.province</code>. 用户所在省份
     */
    public final TableField<MpOfficialAccountUserRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR(50), this, "用户所在省份");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.country</code>. 用户所在国家
     */
    public final TableField<MpOfficialAccountUserRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(50), this, "用户所在国家");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.headimgurl</code>. 用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空
     */
    public final TableField<MpOfficialAccountUserRecord, String> HEADIMGURL = createField("headimgurl", org.jooq.impl.SQLDataType.VARCHAR(191), this, "用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.subscribe_time</code>. 用户关注时间，如果用户曾多次关注，则取最后关注时间
     */
    public final TableField<MpOfficialAccountUserRecord, Timestamp> SUBSCRIBE_TIME = createField("subscribe_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "用户关注时间，如果用户曾多次关注，则取最后关注时间");

    /**
     * The column <code>mini_main.b2c_mp_official_account_user.unionid</code>. 只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段
     */
    public final TableField<MpOfficialAccountUserRecord, String> UNIONID = createField("unionid", org.jooq.impl.SQLDataType.VARCHAR(191), this, "只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段");

    /**
     * Create a <code>mini_main.b2c_mp_official_account_user</code> table reference
     */
    public MpOfficialAccountUser() {
        this(DSL.name("b2c_mp_official_account_user"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_official_account_user</code> table reference
     */
    public MpOfficialAccountUser(String alias) {
        this(DSL.name(alias), MP_OFFICIAL_ACCOUNT_USER);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_official_account_user</code> table reference
     */
    public MpOfficialAccountUser(Name alias) {
        this(alias, MP_OFFICIAL_ACCOUNT_USER);
    }

    private MpOfficialAccountUser(Name alias, Table<MpOfficialAccountUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private MpOfficialAccountUser(Name alias, Table<MpOfficialAccountUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MpOfficialAccountUser(Table<O> child, ForeignKey<O, MpOfficialAccountUserRecord> key) {
        super(child, key, MP_OFFICIAL_ACCOUNT_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MP_OFFICIAL_ACCOUNT_USER_OPENID, Indexes.MP_OFFICIAL_ACCOUNT_USER_PRIMARY, Indexes.MP_OFFICIAL_ACCOUNT_USER_SYS_ID, Indexes.MP_OFFICIAL_ACCOUNT_USER_UNIONID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MpOfficialAccountUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MP_OFFICIAL_ACCOUNT_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MpOfficialAccountUserRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MP_OFFICIAL_ACCOUNT_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MpOfficialAccountUserRecord>> getKeys() {
        return Arrays.<UniqueKey<MpOfficialAccountUserRecord>>asList(Keys.KEY_B2C_MP_OFFICIAL_ACCOUNT_USER_PRIMARY, Keys.KEY_B2C_MP_OFFICIAL_ACCOUNT_USER_OPENID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpOfficialAccountUser as(String alias) {
        return new MpOfficialAccountUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpOfficialAccountUser as(Name alias) {
        return new MpOfficialAccountUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MpOfficialAccountUser rename(String name) {
        return new MpOfficialAccountUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MpOfficialAccountUser rename(Name name) {
        return new MpOfficialAccountUser(name, null);
    }
}
