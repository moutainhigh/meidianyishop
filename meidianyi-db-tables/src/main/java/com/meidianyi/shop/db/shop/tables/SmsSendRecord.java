/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;




import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.SmsSendRecordRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 短信发送记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsSendRecord extends TableImpl<SmsSendRecordRecord> {

    private static final long serialVersionUID = -2081803910;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_sms_send_record</code>
     */
    public static final SmsSendRecord SMS_SEND_RECORD = new SmsSendRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmsSendRecordRecord> getRecordType() {
        return SmsSendRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.id</code>.
     */
    public final TableField<SmsSendRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.account_name</code>. 账号
     */
    public final TableField<SmsSendRecordRecord, String> ACCOUNT_NAME = createField("account_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "账号");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.user_id</code>.
     */
    public final TableField<SmsSendRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.mobile</code>.
     */
    public final TableField<SmsSendRecordRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.request_msg</code>. 请求内容
     */
    public final TableField<SmsSendRecordRecord, String> REQUEST_MSG = createField("request_msg", org.jooq.impl.SQLDataType.CLOB, this, "请求内容");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.response_code</code>. 响应码
     */
    public final TableField<SmsSendRecordRecord, String> RESPONSE_CODE = createField("response_code", org.jooq.impl.SQLDataType.VARCHAR(50), this, "响应码");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.response_msg</code>. 响应内容
     */
    public final TableField<SmsSendRecordRecord, String> RESPONSE_MSG = createField("response_msg", org.jooq.impl.SQLDataType.CLOB, this, "响应内容");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.ext</code>. 行业账号 默认:行业 market:营销,checkcode:验证码
     */
    public final TableField<SmsSendRecordRecord, String> EXT = createField("ext", org.jooq.impl.SQLDataType.VARCHAR(20), this, "行业账号 默认:行业 market:营销,checkcode:验证码");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.sms</code>. 短信通道 默认短信策略:mxt
     */
    public final TableField<SmsSendRecordRecord, String> SMS = createField("sms", org.jooq.impl.SQLDataType.VARCHAR(20), this, "短信通道 默认短信策略:mxt");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.response_msg_code</code>. 短信平台发送响应码
     */
    public final TableField<SmsSendRecordRecord, String> RESPONSE_MSG_CODE = createField("response_msg_code", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "短信平台发送响应码");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.response_time</code>. 响应时间
     */
    public final TableField<SmsSendRecordRecord, Timestamp> RESPONSE_TIME = createField("response_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "响应时间");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.create_time</code>.
     */
    public final TableField<SmsSendRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.update_time</code>. 最后修改时间
     */
    public final TableField<SmsSendRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_sms_send_record</code> table reference
     */
    public SmsSendRecord() {
        this(DSL.name("b2c_sms_send_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_sms_send_record</code> table reference
     */
    public SmsSendRecord(String alias) {
        this(DSL.name(alias), SMS_SEND_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_sms_send_record</code> table reference
     */
    public SmsSendRecord(Name alias) {
        this(alias, SMS_SEND_RECORD);
    }

    private SmsSendRecord(Name alias, Table<SmsSendRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmsSendRecord(Name alias, Table<SmsSendRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("短信发送记录"));
    }

    public <O extends Record> SmsSendRecord(Table<O> child, ForeignKey<O, SmsSendRecordRecord> key) {
        super(child, key, SMS_SEND_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SMS_SEND_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SmsSendRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SMS_SEND_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SmsSendRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SMS_SEND_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SmsSendRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<SmsSendRecordRecord>>asList(Keys.KEY_B2C_SMS_SEND_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsSendRecord as(String alias) {
        return new SmsSendRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsSendRecord as(Name alias) {
        return new SmsSendRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsSendRecord rename(String name) {
        return new SmsSendRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsSendRecord rename(Name name) {
        return new SmsSendRecord(name, null);
    }
}
