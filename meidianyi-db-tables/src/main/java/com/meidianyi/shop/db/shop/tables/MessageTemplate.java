/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.MessageTemplateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageTemplate extends TableImpl<MessageTemplateRecord> {

    private static final long serialVersionUID = 1115728085;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_message_template</code>
     */
    public static final MessageTemplate MESSAGE_TEMPLATE = new MessageTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MessageTemplateRecord> getRecordType() {
        return MessageTemplateRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_message_template.id</code>.
     */
    public final TableField<MessageTemplateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_message_template.action</code>. 消息类型： 1： 业务处理通知 2： 商家活动通知 3： 活动加入成功提醒
     */
    public final TableField<MessageTemplateRecord, Byte> ACTION = createField("action", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "消息类型： 1： 业务处理通知 2： 商家活动通知 3： 活动加入成功提醒");

    /**
     * The column <code>mini_shop_471752.b2c_message_template.content</code>.
     */
    public final TableField<MessageTemplateRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>mini_shop_471752.b2c_message_template.create_time</code>.
     */
    public final TableField<MessageTemplateRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_message_template.update_time</code>. 最后修改时间
     */
    public final TableField<MessageTemplateRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_message_template</code> table reference
     */
    public MessageTemplate() {
        this(DSL.name("b2c_message_template"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_message_template</code> table reference
     */
    public MessageTemplate(String alias) {
        this(DSL.name(alias), MESSAGE_TEMPLATE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_message_template</code> table reference
     */
    public MessageTemplate(Name alias) {
        this(alias, MESSAGE_TEMPLATE);
    }

    private MessageTemplate(Name alias, Table<MessageTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private MessageTemplate(Name alias, Table<MessageTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MessageTemplate(Table<O> child, ForeignKey<O, MessageTemplateRecord> key) {
        super(child, key, MESSAGE_TEMPLATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MESSAGE_TEMPLATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MessageTemplateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MESSAGE_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MessageTemplateRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MESSAGE_TEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MessageTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<MessageTemplateRecord>>asList(Keys.KEY_B2C_MESSAGE_TEMPLATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageTemplate as(String alias) {
        return new MessageTemplate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageTemplate as(Name alias) {
        return new MessageTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MessageTemplate rename(String name) {
        return new MessageTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MessageTemplate rename(Name name) {
        return new MessageTemplate(name, null);
    }
}
