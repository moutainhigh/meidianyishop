/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;

import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.LotteryPrizeRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LotteryPrize extends TableImpl<LotteryPrizeRecord> {

    private static final long serialVersionUID = -1289680721;

    /**
     * The reference instance of <code>mini_shop_245547.b2c_lottery_prize</code>
     */
    public static final LotteryPrize LOTTERY_PRIZE = new LotteryPrize();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LotteryPrizeRecord> getRecordType() {
        return LotteryPrizeRecord.class;
    }

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.id</code>.
     */
    public final TableField<LotteryPrizeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.lottery_id</code>. 抽奖编号
     */
    public final TableField<LotteryPrizeRecord, Integer> LOTTERY_ID = createField("lottery_id", org.jooq.impl.SQLDataType.INTEGER, this, "抽奖编号");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.chance_numerator</code>. 中奖概率--分子
     */
    public final TableField<LotteryPrizeRecord, Integer> CHANCE_NUMERATOR = createField("chance_numerator", org.jooq.impl.SQLDataType.INTEGER, this, "中奖概率--分子");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.chance_denominator</code>. 中奖概率--分母
     */
    public final TableField<LotteryPrizeRecord, Integer> CHANCE_DENOMINATOR = createField("chance_denominator", org.jooq.impl.SQLDataType.INTEGER, this, "中奖概率--分母");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.lottery_grade</code>. 中奖等级：1一等奖，2二等奖，3三等奖，4四等奖 5.。。。
     */
    public final TableField<LotteryPrizeRecord, Byte> LOTTERY_GRADE = createField("lottery_grade", org.jooq.impl.SQLDataType.TINYINT, this, "中奖等级：1一等奖，2二等奖，3三等奖，4四等奖 5.。。。");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.lottery_detail</code>. 奖品信息
     */
    public final TableField<LotteryPrizeRecord, String> LOTTERY_DETAIL = createField("lottery_detail", org.jooq.impl.SQLDataType.VARCHAR(32), this, "奖品信息");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.icon_imgs_image</code>. 中奖图片
     */
    public final TableField<LotteryPrizeRecord, String> ICON_IMGS_IMAGE = createField("icon_imgs_image", org.jooq.impl.SQLDataType.VARCHAR(199), this, "中奖图片");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.icon_imgs</code>. 中奖提示
     */
    public final TableField<LotteryPrizeRecord, String> ICON_IMGS = createField("icon_imgs", org.jooq.impl.SQLDataType.VARCHAR(20), this, "中奖提示");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.lottery_type</code>. 选择奖类型 0积分 1 用户余额 2优惠券 3赠品 4 自定义
     */
    public final TableField<LotteryPrizeRecord, Byte> LOTTERY_TYPE = createField("lottery_type", org.jooq.impl.SQLDataType.TINYINT, this, "选择奖类型 0积分 1 用户余额 2优惠券 3赠品 4 自定义");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.lottery_number</code>. 奖品份数
     */
    public final TableField<LotteryPrizeRecord, Integer> LOTTERY_NUMBER = createField("lottery_number", org.jooq.impl.SQLDataType.INTEGER, this, "奖品份数");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.award_times</code>. 已发生中奖数
     */
    public final TableField<LotteryPrizeRecord, Integer> AWARD_TIMES = createField("award_times", org.jooq.impl.SQLDataType.INTEGER, this, "已发生中奖数");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.integral_score</code>. 积分数量
     */
    public final TableField<LotteryPrizeRecord, Integer> INTEGRAL_SCORE = createField("integral_score", org.jooq.impl.SQLDataType.INTEGER, this, "积分数量");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.coupon_id</code>. 优惠券id
     */
    public final TableField<LotteryPrizeRecord, Integer> COUPON_ID = createField("coupon_id", org.jooq.impl.SQLDataType.INTEGER, this, "优惠券id");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.prd_id</code>. 赠品规格id
     */
    public final TableField<LotteryPrizeRecord, Integer> PRD_ID = createField("prd_id", org.jooq.impl.SQLDataType.INTEGER, this, "赠品规格id");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.prd_keep_days</code>. 赠品有效期
     */
    public final TableField<LotteryPrizeRecord, Short> PRD_KEEP_DAYS = createField("prd_keep_days", org.jooq.impl.SQLDataType.SMALLINT, this, "赠品有效期");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.del_flag</code>. 1删除
     */
    public final TableField<LotteryPrizeRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1删除");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.update_time</code>. 更新时间
     */
    public final TableField<LotteryPrizeRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.create_time</code>. 创建时间
     */
    public final TableField<LotteryPrizeRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>mini_shop_245547.b2c_lottery_prize.award_account</code>. 用户余额
     */
    public final TableField<LotteryPrizeRecord, BigDecimal> AWARD_ACCOUNT = createField("award_account", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "用户余额");

    /**
     * Create a <code>mini_shop_245547.b2c_lottery_prize</code> table reference
     */
    public LotteryPrize() {
        this(DSL.name("b2c_lottery_prize"), null);
    }

    /**
     * Create an aliased <code>mini_shop_245547.b2c_lottery_prize</code> table reference
     */
    public LotteryPrize(String alias) {
        this(DSL.name(alias), LOTTERY_PRIZE);
    }

    /**
     * Create an aliased <code>mini_shop_245547.b2c_lottery_prize</code> table reference
     */
    public LotteryPrize(Name alias) {
        this(alias, LOTTERY_PRIZE);
    }

    private LotteryPrize(Name alias, Table<LotteryPrizeRecord> aliased) {
        this(alias, aliased, null);
    }

    private LotteryPrize(Name alias, Table<LotteryPrizeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LotteryPrize(Table<O> child, ForeignKey<O, LotteryPrizeRecord> key) {
        super(child, key, LOTTERY_PRIZE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOTTERY_PRIZE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LotteryPrizeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LOTTERY_PRIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LotteryPrizeRecord> getPrimaryKey() {
        return Keys.KEY_B2C_LOTTERY_PRIZE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LotteryPrizeRecord>> getKeys() {
        return Arrays.<UniqueKey<LotteryPrizeRecord>>asList(Keys.KEY_B2C_LOTTERY_PRIZE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LotteryPrize as(String alias) {
        return new LotteryPrize(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LotteryPrize as(Name alias) {
        return new LotteryPrize(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LotteryPrize rename(String name) {
        return new LotteryPrize(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LotteryPrize rename(Name name) {
        return new LotteryPrize(name, null);
    }
}
