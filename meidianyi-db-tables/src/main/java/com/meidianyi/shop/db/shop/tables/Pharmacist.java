/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.PharmacistRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 药师表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pharmacist extends TableImpl<PharmacistRecord> {

    private static final long serialVersionUID = -1065103711;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_pharmacist</code>
     */
    public static final Pharmacist PHARMACIST = new Pharmacist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PharmacistRecord> getRecordType() {
        return PharmacistRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.id</code>.
     */
    public final TableField<PharmacistRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.sex</code>. 0位置 1男 2 女
     */
    public final TableField<PharmacistRecord, Byte> SEX = createField("sex", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0位置 1男 2 女");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.certificate_code</code>. 药师资格编码
     */
    public final TableField<PharmacistRecord, String> CERTIFICATE_CODE = createField("certificate_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "药师资格编码");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.professional_code</code>. 药师职业编码
     */
    public final TableField<PharmacistRecord, String> PROFESSIONAL_CODE = createField("professional_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "药师职业编码");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.mobile</code>. 手机号
     */
    public final TableField<PharmacistRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "手机号");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.status</code>. 是否启用 1启用 0禁用
     */
    public final TableField<PharmacistRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "是否启用 1启用 0禁用");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.signature</code>. 药师签名
     */
    public final TableField<PharmacistRecord, String> SIGNATURE = createField("signature", org.jooq.impl.SQLDataType.CLOB, this, "药师签名");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.is_delete</code>.
     */
    public final TableField<PharmacistRecord, Byte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.create_time</code>.
     */
    public final TableField<PharmacistRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_pharmacist.update_time</code>. 最后修改时间
     */
    public final TableField<PharmacistRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_pharmacist</code> table reference
     */
    public Pharmacist() {
        this(DSL.name("b2c_pharmacist"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_pharmacist</code> table reference
     */
    public Pharmacist(String alias) {
        this(DSL.name(alias), PHARMACIST);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_pharmacist</code> table reference
     */
    public Pharmacist(Name alias) {
        this(alias, PHARMACIST);
    }

    private Pharmacist(Name alias, Table<PharmacistRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pharmacist(Name alias, Table<PharmacistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("药师表"));
    }

    public <O extends Record> Pharmacist(Table<O> child, ForeignKey<O, PharmacistRecord> key) {
        super(child, key, PHARMACIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PHARMACIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PharmacistRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PHARMACIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PharmacistRecord> getPrimaryKey() {
        return Keys.KEY_B2C_PHARMACIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PharmacistRecord>> getKeys() {
        return Arrays.<UniqueKey<PharmacistRecord>>asList(Keys.KEY_B2C_PHARMACIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pharmacist as(String alias) {
        return new Pharmacist(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pharmacist as(Name alias) {
        return new Pharmacist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Pharmacist rename(String name) {
        return new Pharmacist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Pharmacist rename(Name name) {
        return new Pharmacist(name, null);
    }
}
