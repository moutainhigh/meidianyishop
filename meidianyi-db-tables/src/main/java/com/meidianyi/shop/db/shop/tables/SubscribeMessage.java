/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.SubscribeMessageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubscribeMessage extends TableImpl<SubscribeMessageRecord> {

    private static final long serialVersionUID = -751173288;

    /**
     * The reference instance of <code>mini_shop_8984736.b2c_subscribe_message</code>
     */
    public static final SubscribeMessage SUBSCRIBE_MESSAGE = new SubscribeMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SubscribeMessageRecord> getRecordType() {
        return SubscribeMessageRecord.class;
    }

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.rec_id</code>.
     */
    public final TableField<SubscribeMessageRecord, Long> REC_ID = createField("rec_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.user_id</code>.
     */
    public final TableField<SubscribeMessageRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.wx_openid</code>.
     */
    public final TableField<SubscribeMessageRecord, String> WX_OPENID = createField("wx_openid", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.template_id</code>. 模板ID
     */
    public final TableField<SubscribeMessageRecord, String> TEMPLATE_ID = createField("template_id", org.jooq.impl.SQLDataType.VARCHAR(50), this, "模板ID");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.template_no</code>. 模板编号
     */
    public final TableField<SubscribeMessageRecord, String> TEMPLATE_NO = createField("template_no", org.jooq.impl.SQLDataType.VARCHAR(50), this, "模板编号");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.status</code>. 1 正常 0 取消授权
     */
    public final TableField<SubscribeMessageRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1 正常 0 取消授权");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.can_use_num</code>. 可使用数
     */
    public final TableField<SubscribeMessageRecord, Integer> CAN_USE_NUM = createField("can_use_num", org.jooq.impl.SQLDataType.INTEGER, this, "可使用数");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.success_num</code>. 发送成功数
     */
    public final TableField<SubscribeMessageRecord, Integer> SUCCESS_NUM = createField("success_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "发送成功数");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.add_time</code>. 创建时间
     */
    public final TableField<SubscribeMessageRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>mini_shop_8984736.b2c_subscribe_message.update_time</code>.
     */
    public final TableField<SubscribeMessageRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_8984736.b2c_subscribe_message</code> table reference
     */
    public SubscribeMessage() {
        this(DSL.name("b2c_subscribe_message"), null);
    }

    /**
     * Create an aliased <code>mini_shop_8984736.b2c_subscribe_message</code> table reference
     */
    public SubscribeMessage(String alias) {
        this(DSL.name(alias), SUBSCRIBE_MESSAGE);
    }

    /**
     * Create an aliased <code>mini_shop_8984736.b2c_subscribe_message</code> table reference
     */
    public SubscribeMessage(Name alias) {
        this(alias, SUBSCRIBE_MESSAGE);
    }

    private SubscribeMessage(Name alias, Table<SubscribeMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private SubscribeMessage(Name alias, Table<SubscribeMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SubscribeMessage(Table<O> child, ForeignKey<O, SubscribeMessageRecord> key) {
        super(child, key, SUBSCRIBE_MESSAGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SUBSCRIBE_MESSAGE_PRIMARY, Indexes.SUBSCRIBE_MESSAGE_TEMPLATE_ID, Indexes.SUBSCRIBE_MESSAGE_TEMPLATE_NO, Indexes.SUBSCRIBE_MESSAGE_USER_ID, Indexes.SUBSCRIBE_MESSAGE_WX_OPENID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SubscribeMessageRecord, Long> getIdentity() {
        return Keys.IDENTITY_SUBSCRIBE_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SubscribeMessageRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SUBSCRIBE_MESSAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SubscribeMessageRecord>> getKeys() {
        return Arrays.<UniqueKey<SubscribeMessageRecord>>asList(Keys.KEY_B2C_SUBSCRIBE_MESSAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubscribeMessage as(String alias) {
        return new SubscribeMessage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubscribeMessage as(Name alias) {
        return new SubscribeMessage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SubscribeMessage rename(String name) {
        return new SubscribeMessage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SubscribeMessage rename(Name name) {
        return new SubscribeMessage(name, null);
    }
}
