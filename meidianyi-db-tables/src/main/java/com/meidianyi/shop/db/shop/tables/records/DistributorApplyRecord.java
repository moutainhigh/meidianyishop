/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables.records;


import com.meidianyi.shop.db.shop.tables.DistributorApply;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 分销原申请记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DistributorApplyRecord extends UpdatableRecordImpl<DistributorApplyRecord> implements Record10<Integer, Integer, Byte, String, Byte, String, String, Timestamp, Timestamp, Byte> {

    private static final long serialVersionUID = 1986846735;

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.status</code>.
     */
    public void setStatus(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.msg</code>. 审核内容
     */
    public void setMsg(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.msg</code>. 审核内容
     */
    public String getMsg() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.del_flag</code>.
     */
    public void setDelFlag(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.del_flag</code>.
     */
    public Byte getDelFlag() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.activation_fields</code>. 审核校验
     */
    public void setActivationFields(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.activation_fields</code>. 审核校验
     */
    public String getActivationFields() {
        return (String) get(5);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.config_fields</code>. 审核字段
     */
    public void setConfigFields(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.config_fields</code>. 审核字段
     */
    public String getConfigFields() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.update_time</code>. 最后修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.update_time</code>. 最后修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_distributor_apply.is_auto_pass</code>. 审核类型 0：手动审核；1"自动审核
     */
    public void setIsAutoPass(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_distributor_apply.is_auto_pass</code>. 审核类型 0：手动审核；1"自动审核
     */
    public Byte getIsAutoPass() {
        return (Byte) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Byte, String, Byte, String, String, Timestamp, Timestamp, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Byte, String, Byte, String, String, Timestamp, Timestamp, Byte> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DistributorApply.DISTRIBUTOR_APPLY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return DistributorApply.DISTRIBUTOR_APPLY.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return DistributorApply.DISTRIBUTOR_APPLY.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return DistributorApply.DISTRIBUTOR_APPLY.MSG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return DistributorApply.DISTRIBUTOR_APPLY.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return DistributorApply.DISTRIBUTOR_APPLY.ACTIVATION_FIELDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return DistributorApply.DISTRIBUTOR_APPLY.CONFIG_FIELDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return DistributorApply.DISTRIBUTOR_APPLY.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return DistributorApply.DISTRIBUTOR_APPLY.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return DistributorApply.DISTRIBUTOR_APPLY.IS_AUTO_PASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMsg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getActivationFields();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getConfigFields();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component10() {
        return getIsAutoPass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMsg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getActivationFields();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getConfigFields();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getIsAutoPass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value3(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value4(String value) {
        setMsg(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value5(Byte value) {
        setDelFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value6(String value) {
        setActivationFields(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value7(String value) {
        setConfigFields(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value8(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value9(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord value10(Byte value) {
        setIsAutoPass(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorApplyRecord values(Integer value1, Integer value2, Byte value3, String value4, Byte value5, String value6, String value7, Timestamp value8, Timestamp value9, Byte value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DistributorApplyRecord
     */
    public DistributorApplyRecord() {
        super(DistributorApply.DISTRIBUTOR_APPLY);
    }

    /**
     * Create a detached, initialised DistributorApplyRecord
     */
    public DistributorApplyRecord(Integer id, Integer userId, Byte status, String msg, Byte delFlag, String activationFields, String configFields, Timestamp createTime, Timestamp updateTime, Byte isAutoPass) {
        super(DistributorApply.DISTRIBUTOR_APPLY);

        set(0, id);
        set(1, userId);
        set(2, status);
        set(3, msg);
        set(4, delFlag);
        set(5, activationFields);
        set(6, configFields);
        set(7, createTime);
        set(8, updateTime);
        set(9, isAutoPass);
    }
}
