/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.DivisionReceiveRecordRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DivisionReceiveRecord extends TableImpl<DivisionReceiveRecordRecord> {

    private static final long serialVersionUID = -870033266;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_division_receive_record</code>
     */
    public static final DivisionReceiveRecord DIVISION_RECEIVE_RECORD = new DivisionReceiveRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DivisionReceiveRecordRecord> getRecordType() {
        return DivisionReceiveRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.id</code>.
     */
    public final TableField<DivisionReceiveRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.user</code>. 分享的user_id
     */
    public final TableField<DivisionReceiveRecordRecord, Integer> USER = createField("user", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分享的user_id");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.user_id</code>. 分享后领取的user_id
     */
    public final TableField<DivisionReceiveRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分享后领取的user_id");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.coupon_id</code>. 分裂优惠券id 对应优惠券表中id
     */
    public final TableField<DivisionReceiveRecordRecord, Integer> COUPON_ID = createField("coupon_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分裂优惠券id 对应优惠券表中id");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.coupon_sn</code>. 分裂优惠券的sn唯一标识
     */
    public final TableField<DivisionReceiveRecordRecord, String> COUPON_SN = createField("coupon_sn", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(DSL.inline("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "分裂优惠券的sn唯一标识");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.receive_num</code>. 可领取个数
     */
    public final TableField<DivisionReceiveRecordRecord, Integer> RECEIVE_NUM = createField("receive_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "可领取个数");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.receive_per_num</code>. 分裂优惠券领券人数是否限制 0不限制 1限制
     */
    public final TableField<DivisionReceiveRecordRecord, Short> RECEIVE_PER_NUM = createField("receive_per_num", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "分裂优惠券领券人数是否限制 0不限制 1限制");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.source</code>. 送券活动来源
     */
    public final TableField<DivisionReceiveRecordRecord, Byte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "送券活动来源");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.amount</code>. 打折或减价量
     */
    public final TableField<DivisionReceiveRecordRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "打折或减价量");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.receive_coupon_sn</code>. 领取的sn唯一标识
     */
    public final TableField<DivisionReceiveRecordRecord, String> RECEIVE_COUPON_SN = createField("receive_coupon_sn", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(DSL.inline("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "领取的sn唯一标识");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.type</code>. 0主分裂优惠券 1 点击链接领取的
     */
    public final TableField<DivisionReceiveRecordRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0主分裂优惠券 1 点击链接领取的");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.is_share</code>. 0未分享 1分享
     */
    public final TableField<DivisionReceiveRecordRecord, Byte> IS_SHARE = createField("is_share", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0未分享 1分享");

    /**
     * The column <code>mini_shop_471752.b2c_division_receive_record.create_time</code>. 领取时间
     */
    public final TableField<DivisionReceiveRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "领取时间");

    /**
     * Create a <code>mini_shop_471752.b2c_division_receive_record</code> table reference
     */
    public DivisionReceiveRecord() {
        this(DSL.name("b2c_division_receive_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_division_receive_record</code> table reference
     */
    public DivisionReceiveRecord(String alias) {
        this(DSL.name(alias), DIVISION_RECEIVE_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_division_receive_record</code> table reference
     */
    public DivisionReceiveRecord(Name alias) {
        this(alias, DIVISION_RECEIVE_RECORD);
    }

    private DivisionReceiveRecord(Name alias, Table<DivisionReceiveRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private DivisionReceiveRecord(Name alias, Table<DivisionReceiveRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DivisionReceiveRecord(Table<O> child, ForeignKey<O, DivisionReceiveRecordRecord> key) {
        super(child, key, DIVISION_RECEIVE_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DIVISION_RECEIVE_RECORD_PRIMARY, Indexes.DIVISION_RECEIVE_RECORD_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DivisionReceiveRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DIVISION_RECEIVE_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DivisionReceiveRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_DIVISION_RECEIVE_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DivisionReceiveRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<DivisionReceiveRecordRecord>>asList(Keys.KEY_B2C_DIVISION_RECEIVE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DivisionReceiveRecord as(String alias) {
        return new DivisionReceiveRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DivisionReceiveRecord as(Name alias) {
        return new DivisionReceiveRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DivisionReceiveRecord rename(String name) {
        return new DivisionReceiveRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DivisionReceiveRecord rename(Name name) {
        return new DivisionReceiveRecord(name, null);
    }
}
