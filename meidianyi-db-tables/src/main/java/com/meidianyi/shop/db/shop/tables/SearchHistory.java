/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.SearchHistoryRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 搜索热词表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SearchHistory extends TableImpl<SearchHistoryRecord> {

    private static final long serialVersionUID = 1864555684;

    /**
     * The reference instance of <code>jmini_shop_666666.b2c_search_history</code>
     */
    public static final SearchHistory SEARCH_HISTORY = new SearchHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SearchHistoryRecord> getRecordType() {
        return SearchHistoryRecord.class;
    }

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.user_id</code>.
     */
    public final TableField<SearchHistoryRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.hot_words</code>. 热词
     */
    public final TableField<SearchHistoryRecord, String> HOT_WORDS = createField("hot_words", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "热词");

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.search_count</code>. 搜索次数
     */
    public final TableField<SearchHistoryRecord, Integer> SEARCH_COUNT = createField("search_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "搜索次数");

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.is_hot_words</code>. 是否是热词搜索
     */
    public final TableField<SearchHistoryRecord, Byte> IS_HOT_WORDS = createField("is_hot_words", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否是热词搜索");

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.del_flag</code>.
     */
    public final TableField<SearchHistoryRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.del_time</code>. 过期时间
     */
    public final TableField<SearchHistoryRecord, Timestamp> DEL_TIME = createField("del_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "过期时间");

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.create_time</code>.
     */
    public final TableField<SearchHistoryRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.update_time</code>. 最后修改时间
     */
    public final TableField<SearchHistoryRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>jmini_shop_666666.b2c_search_history.id</code>.
     */
    public final TableField<SearchHistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * Create a <code>jmini_shop_666666.b2c_search_history</code> table reference
     */
    public SearchHistory() {
        this(DSL.name("b2c_search_history"), null);
    }

    /**
     * Create an aliased <code>jmini_shop_666666.b2c_search_history</code> table reference
     */
    public SearchHistory(String alias) {
        this(DSL.name(alias), SEARCH_HISTORY);
    }

    /**
     * Create an aliased <code>jmini_shop_666666.b2c_search_history</code> table reference
     */
    public SearchHistory(Name alias) {
        this(alias, SEARCH_HISTORY);
    }

    private SearchHistory(Name alias, Table<SearchHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private SearchHistory(Name alias, Table<SearchHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("搜索热词表"));
    }

    public <O extends Record> SearchHistory(Table<O> child, ForeignKey<O, SearchHistoryRecord> key) {
        super(child, key, SEARCH_HISTORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEARCH_HISTORY_HOT_WORDS, Indexes.SEARCH_HISTORY_PRIMARY, Indexes.SEARCH_HISTORY_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SearchHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SEARCH_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SearchHistoryRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SEARCH_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SearchHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<SearchHistoryRecord>>asList(Keys.KEY_B2C_SEARCH_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SearchHistory as(String alias) {
        return new SearchHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SearchHistory as(Name alias) {
        return new SearchHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SearchHistory rename(String name) {
        return new SearchHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SearchHistory rename(Name name) {
        return new SearchHistory(name, null);
    }
}
