/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.AttendShareUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户点击分享链接触发分享生效记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttendShareUser extends TableImpl<AttendShareUserRecord> {

    private static final long serialVersionUID = -1055628196;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_attend_share_user</code>
     */
    public static final AttendShareUser ATTEND_SHARE_USER = new AttendShareUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttendShareUserRecord> getRecordType() {
        return AttendShareUserRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.id</code>.
     */
    public final TableField<AttendShareUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.record_id</code>. 对应b2c_share_award_record表id
     */
    public final TableField<AttendShareUserRecord, Integer> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "对应b2c_share_award_record表id");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.share_id</code>. 活动ID
     */
    public final TableField<AttendShareUserRecord, Integer> SHARE_ID = createField("share_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "活动ID");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.goods_id</code>. 商品ID
     */
    public final TableField<AttendShareUserRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品ID");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.user_id</code>. 参与分享活动用户ID，即点击别人分享链接查看商品的用户id
     */
    public final TableField<AttendShareUserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "参与分享活动用户ID，即点击别人分享链接查看商品的用户id");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.is_new</code>. 是否是新用户
     */
    public final TableField<AttendShareUserRecord, Byte> IS_NEW = createField("is_new", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否是新用户");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.launch_user_id</code>. 触发分享活动用户ID，即分享商品的用户id
     */
    public final TableField<AttendShareUserRecord, Integer> LAUNCH_USER_ID = createField("launch_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "触发分享活动用户ID，即分享商品的用户id");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.level</code>. 参加活动时的活动进行等级1,2,3
     */
    public final TableField<AttendShareUserRecord, Byte> LEVEL = createField("level", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "参加活动时的活动进行等级1,2,3");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.create_time</code>. 创建时间
     */
    public final TableField<AttendShareUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>mini_shop_471752.b2c_attend_share_user.update_time</code>. 更新时间
     */
    public final TableField<AttendShareUserRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>mini_shop_471752.b2c_attend_share_user</code> table reference
     */
    public AttendShareUser() {
        this(DSL.name("b2c_attend_share_user"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_attend_share_user</code> table reference
     */
    public AttendShareUser(String alias) {
        this(DSL.name(alias), ATTEND_SHARE_USER);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_attend_share_user</code> table reference
     */
    public AttendShareUser(Name alias) {
        this(alias, ATTEND_SHARE_USER);
    }

    private AttendShareUser(Name alias, Table<AttendShareUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private AttendShareUser(Name alias, Table<AttendShareUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户点击分享链接触发分享生效记录表"));
    }

    public <O extends Record> AttendShareUser(Table<O> child, ForeignKey<O, AttendShareUserRecord> key) {
        super(child, key, ATTEND_SHARE_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ATTEND_SHARE_USER_ATTEND_SHARE_USER, Indexes.ATTEND_SHARE_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttendShareUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ATTEND_SHARE_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttendShareUserRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ATTEND_SHARE_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttendShareUserRecord>> getKeys() {
        return Arrays.<UniqueKey<AttendShareUserRecord>>asList(Keys.KEY_B2C_ATTEND_SHARE_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttendShareUser as(String alias) {
        return new AttendShareUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttendShareUser as(Name alias) {
        return new AttendShareUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AttendShareUser rename(String name) {
        return new AttendShareUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AttendShareUser rename(Name name) {
        return new AttendShareUser(name, null);
    }
}
