/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.tables.records.UserDetailRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDetail extends TableImpl<UserDetailRecord> {

    private static final long serialVersionUID = -1995588152;

    /**
     * The reference instance of <code>MINI_SHOP_471752.b2c_user_detail</code>
     */
    public static final UserDetail USER_DETAIL = new UserDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDetailRecord> getRecordType() {
        return UserDetailRecord.class;
    }

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.id</code>.
     */
    public final TableField<UserDetailRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.user_id</code>.
     */
    public final TableField<UserDetailRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.shop_id</code>. 店铺id
     */
    public final TableField<UserDetailRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺id");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.username</code>. 昵称
     */
    public final TableField<UserDetailRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(100), this, "昵称");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.sex</code>. 性别：女f,男m
     */
    public final TableField<UserDetailRecord, String> SEX = createField("sex", org.jooq.impl.SQLDataType.CHAR(5), this, "性别：女f,男m");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.birthday_year</code>. 生日年份
     */
    public final TableField<UserDetailRecord, Integer> BIRTHDAY_YEAR = createField("birthday_year", org.jooq.impl.SQLDataType.INTEGER, this, "生日年份");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.birthday_month</code>.
     */
    public final TableField<UserDetailRecord, Integer> BIRTHDAY_MONTH = createField("birthday_month", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.birthday_day</code>.
     */
    public final TableField<UserDetailRecord, Integer> BIRTHDAY_DAY = createField("birthday_day", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.email</code>. 邮箱
     */
    public final TableField<UserDetailRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(100), this, "邮箱");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.real_name</code>. 真实姓名
     */
    public final TableField<UserDetailRecord, String> REAL_NAME = createField("real_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "真实姓名");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.province_code</code>. 所在地省编号
     */
    public final TableField<UserDetailRecord, Integer> PROVINCE_CODE = createField("province_code", org.jooq.impl.SQLDataType.INTEGER, this, "所在地省编号");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.city_code</code>. 所在地市编号
     */
    public final TableField<UserDetailRecord, Integer> CITY_CODE = createField("city_code", org.jooq.impl.SQLDataType.INTEGER, this, "所在地市编号");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.district_code</code>. 所在地区编号
     */
    public final TableField<UserDetailRecord, Integer> DISTRICT_CODE = createField("district_code", org.jooq.impl.SQLDataType.INTEGER, this, "所在地区编号");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.address</code>. 所在地
     */
    public final TableField<UserDetailRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(120), this, "所在地");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.marital_status</code>. 婚姻状况：1未婚，2已婚，3保密
     */
    public final TableField<UserDetailRecord, Byte> MARITAL_STATUS = createField("marital_status", org.jooq.impl.SQLDataType.TINYINT, this, "婚姻状况：1未婚，2已婚，3保密");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.monthly_income</code>.
     */
    public final TableField<UserDetailRecord, Integer> MONTHLY_INCOME = createField("monthly_income", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.cid</code>. 身份证号码
     */
    public final TableField<UserDetailRecord, String> CID = createField("cid", org.jooq.impl.SQLDataType.VARCHAR(18), this, "身份证号码");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.education</code>. 教育程度
     */
    public final TableField<UserDetailRecord, Byte> EDUCATION = createField("education", org.jooq.impl.SQLDataType.TINYINT, this, "教育程度");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.industry_info</code>. 所在行业
     */
    public final TableField<UserDetailRecord, Byte> INDUSTRY_INFO = createField("industry_info", org.jooq.impl.SQLDataType.TINYINT, this, "所在行业");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.big_image</code>. 头像
     */
    public final TableField<UserDetailRecord, String> BIG_IMAGE = createField("big_image", org.jooq.impl.SQLDataType.VARCHAR(191), this, "头像");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.bank_user_name</code>. 开户行姓名
     */
    public final TableField<UserDetailRecord, String> BANK_USER_NAME = createField("bank_user_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "开户行姓名");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.shop_bank</code>. 开户行
     */
    public final TableField<UserDetailRecord, String> SHOP_BANK = createField("shop_bank", org.jooq.impl.SQLDataType.VARCHAR(100), this, "开户行");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.bank_no</code>. 开户行卡号
     */
    public final TableField<UserDetailRecord, String> BANK_NO = createField("bank_no", org.jooq.impl.SQLDataType.VARCHAR(32), this, "开户行卡号");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.withdraw_passwd</code>. 提现密码验证
     */
    public final TableField<UserDetailRecord, String> WITHDRAW_PASSWD = createField("withdraw_passwd", org.jooq.impl.SQLDataType.VARCHAR(64), this, "提现密码验证");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.user_avatar</code>. 用户头像
     */
    public final TableField<UserDetailRecord, String> USER_AVATAR = createField("user_avatar", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("/image/admin/head_icon.png", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户头像");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.create_time</code>.
     */
    public final TableField<UserDetailRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>MINI_SHOP_471752.b2c_user_detail.update_time</code>. 最后修改时间
     */
    public final TableField<UserDetailRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>MINI_SHOP_471752.b2c_user_detail</code> table reference
     */
    public UserDetail() {
        this(DSL.name("b2c_user_detail"), null);
    }

    /**
     * Create an aliased <code>MINI_SHOP_471752.b2c_user_detail</code> table reference
     */
    public UserDetail(String alias) {
        this(DSL.name(alias), USER_DETAIL);
    }

    /**
     * Create an aliased <code>MINI_SHOP_471752.b2c_user_detail</code> table reference
     */
    public UserDetail(Name alias) {
        this(alias, USER_DETAIL);
    }

    private UserDetail(Name alias, Table<UserDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDetail(Name alias, Table<UserDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserDetail(Table<O> child, ForeignKey<O, UserDetailRecord> key) {
        super(child, key, USER_DETAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_DETAIL_PRIMARY, Indexes.USER_DETAIL_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserDetailRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserDetailRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_DETAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDetailRecord>>asList(Keys.KEY_B2C_USER_DETAIL_PRIMARY, Keys.KEY_B2C_USER_DETAIL_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDetail as(String alias) {
        return new UserDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDetail as(Name alias) {
        return new UserDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDetail rename(String name) {
        return new UserDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDetail rename(Name name) {
        return new UserDetail(name, null);
    }
}
