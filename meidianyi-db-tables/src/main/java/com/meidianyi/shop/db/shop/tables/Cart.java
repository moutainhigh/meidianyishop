/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.CartRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cart extends TableImpl<CartRecord> {

    private static final long serialVersionUID = -4745400;

    /**
     * The reference instance of <code>mini_shop_4748160.b2c_cart</code>
     */
    public static final Cart CART = new Cart();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CartRecord> getRecordType() {
        return CartRecord.class;
    }

    /**
     * The column <code>mini_shop_4748160.b2c_cart.cart_id</code>.
     */
    public final TableField<CartRecord, Integer> CART_ID = createField("cart_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.store_id</code>. 门店id
     */
    public final TableField<CartRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "门店id");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.user_id</code>. 用户id
     */
    public final TableField<CartRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户id");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.goods_id</code>. 商品id
     */
    public final TableField<CartRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品id");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.goods_sn</code>. 商品sn
     */
    public final TableField<CartRecord, String> GOODS_SN = createField("goods_sn", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品sn");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.goods_name</code>. 商品名称
     */
    public final TableField<CartRecord, String> GOODS_NAME = createField("goods_name", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品名称");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.prd_desc</code>. 规格描述，格式例子：颜色:红色 尺码:s
     */
    public final TableField<CartRecord, String> PRD_DESC = createField("prd_desc", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "规格描述，格式例子：颜色:红色 尺码:s");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.product_id</code>. 规格产品id
     */
    public final TableField<CartRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "规格产品id");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.prd_sn</code>. 规格sn
     */
    public final TableField<CartRecord, String> PRD_SN = createField("prd_sn", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "规格sn");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.goods_price</code>. 商品价格
     */
    public final TableField<CartRecord, BigDecimal> GOODS_PRICE = createField("goods_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "商品价格");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.is_checked</code>. 是否选中
     */
    public final TableField<CartRecord, Byte> IS_CHECKED = createField("is_checked", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否选中");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.cart_number</code>. 数量
     */
    public final TableField<CartRecord, Short> CART_NUMBER = createField("cart_number", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "数量");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.original_price</code>. 加入购物车时的价格
     */
    public final TableField<CartRecord, BigDecimal> ORIGINAL_PRICE = createField("original_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "加入购物车时的价格");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.type</code>. 类型 0 普通
     */
    public final TableField<CartRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "类型 0 普通 ");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.extend_id</code>. 扩展字段:对应type的类型
     */
    public final TableField<CartRecord, Integer> EXTEND_ID = createField("extend_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "扩展字段:对应type的类型 ");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.create_time</code>.
     */
    public final TableField<CartRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_cart.update_time</code>. 最后修改时间
     */
    public final TableField<CartRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_4748160.b2c_cart</code> table reference
     */
    public Cart() {
        this(DSL.name("b2c_cart"), null);
    }

    /**
     * Create an aliased <code>mini_shop_4748160.b2c_cart</code> table reference
     */
    public Cart(String alias) {
        this(DSL.name(alias), CART);
    }

    /**
     * Create an aliased <code>mini_shop_4748160.b2c_cart</code> table reference
     */
    public Cart(Name alias) {
        this(alias, CART);
    }

    private Cart(Name alias, Table<CartRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cart(Name alias, Table<CartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Cart(Table<O> child, ForeignKey<O, CartRecord> key) {
        super(child, key, CART);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CART_PRIMARY, Indexes.CART_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CartRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CartRecord> getPrimaryKey() {
        return Keys.KEY_B2C_CART_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CartRecord>> getKeys() {
        return Arrays.<UniqueKey<CartRecord>>asList(Keys.KEY_B2C_CART_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cart as(String alias) {
        return new Cart(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cart as(Name alias) {
        return new Cart(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cart rename(String name) {
        return new Cart(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cart rename(Name name) {
        return new Cart(name, null);
    }
}
