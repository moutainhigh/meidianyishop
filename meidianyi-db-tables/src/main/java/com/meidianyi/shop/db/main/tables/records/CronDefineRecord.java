/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables.records;


import com.meidianyi.shop.db.main.tables.CronDefine;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * 定时任务定义表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CronDefineRecord extends UpdatableRecordImpl<CronDefineRecord> implements Record9<Integer, String, String, String, Byte, Byte, Byte, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1410245788;

    /**
     * Setter for <code>mini_main.b2c_cron_define.id</code>. 主键id
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.id</code>. 主键id
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mini_main.b2c_cron_define.class_name</code>. 定时任务完整类名
     */
    public void setClassName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.class_name</code>. 定时任务完整类名
     */
    public String getClassName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mini_main.b2c_cron_define.expression</code>. cron表达式
     */
    public void setExpression(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.expression</code>. cron表达式
     */
    public String getExpression() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mini_main.b2c_cron_define.description</code>. 任务描述
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.description</code>. 任务描述
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mini_main.b2c_cron_define.result</code>. 执行结果,0:待执行;1:执行中；2已完成；3:执行失败
     */
    public void setResult(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.result</code>. 执行结果,0:待执行;1:执行中；2已完成；3:执行失败
     */
    public Byte getResult() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>mini_main.b2c_cron_define.retries_num</code>. 失败重试次数,默认0不重试
     */
    public void setRetriesNum(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.retries_num</code>. 失败重试次数,默认0不重试
     */
    public Byte getRetriesNum() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>mini_main.b2c_cron_define.status</code>. 状态,1:启用;0:停用
     */
    public void setStatus(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.status</code>. 状态,1:启用;0:停用
     */
    public Byte getStatus() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>mini_main.b2c_cron_define.create_time</code>. 创建时间
     */
    public void setCreateTime(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.create_time</code>. 创建时间
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>mini_main.b2c_cron_define.update_time</code>. 最后修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_main.b2c_cron_define.update_time</code>. 最后修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, Byte, Byte, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, Byte, Byte, Byte, Timestamp, Timestamp> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CronDefine.CRON_DEFINE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CronDefine.CRON_DEFINE.CLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return CronDefine.CRON_DEFINE.EXPRESSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CronDefine.CRON_DEFINE.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return CronDefine.CRON_DEFINE.RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return CronDefine.CRON_DEFINE.RETRIES_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return CronDefine.CRON_DEFINE.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return CronDefine.CRON_DEFINE.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return CronDefine.CRON_DEFINE.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getExpression();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component6() {
        return getRetriesNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getExpression();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getRetriesNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value2(String value) {
        setClassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value3(String value) {
        setExpression(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value4(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value5(Byte value) {
        setResult(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value6(Byte value) {
        setRetriesNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value7(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value8(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord value9(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CronDefineRecord values(Integer value1, String value2, String value3, String value4, Byte value5, Byte value6, Byte value7, Timestamp value8, Timestamp value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CronDefineRecord
     */
    public CronDefineRecord() {
        super(CronDefine.CRON_DEFINE);
    }

    /**
     * Create a detached, initialised CronDefineRecord
     */
    public CronDefineRecord(Integer id, String className, String expression, String description, Byte result, Byte retriesNum, Byte status, Timestamp createTime, Timestamp updateTime) {
        super(CronDefine.CRON_DEFINE);

        set(0, id);
        set(1, className);
        set(2, expression);
        set(3, description);
        set(4, result);
        set(5, retriesNum);
        set(6, status);
        set(7, createTime);
        set(8, updateTime);
    }
}
