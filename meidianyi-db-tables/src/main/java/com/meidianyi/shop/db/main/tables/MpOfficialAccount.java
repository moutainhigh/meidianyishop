/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables;


import com.meidianyi.shop.db.main.Indexes;
import com.meidianyi.shop.db.main.Keys;
import com.meidianyi.shop.db.main.MiniMain;
import com.meidianyi.shop.db.main.tables.records.MpOfficialAccountRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MpOfficialAccount extends TableImpl<MpOfficialAccountRecord> {

    private static final long serialVersionUID = -659860808;

    /**
     * The reference instance of <code>mini_main.b2c_mp_official_account</code>
     */
    public static final MpOfficialAccount MP_OFFICIAL_ACCOUNT = new MpOfficialAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MpOfficialAccountRecord> getRecordType() {
        return MpOfficialAccountRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_mp_official_account.app_id</code>. 授权公众号appId
     */
    public final TableField<MpOfficialAccountRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false), this, "授权公众号appId");

    /**
     * The column <code>mini_main.b2c_mp_official_account.nick_name</code>. 小程序昵称
     */
    public final TableField<MpOfficialAccountRecord, String> NICK_NAME = createField("nick_name", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "小程序昵称");

    /**
     * The column <code>mini_main.b2c_mp_official_account.user_name</code>. 授权方小程序的原始ID
     */
    public final TableField<MpOfficialAccountRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "授权方小程序的原始ID");

    /**
     * The column <code>mini_main.b2c_mp_official_account.alias</code>. 授权方小程序所设置的微信号，可为空
     */
    public final TableField<MpOfficialAccountRecord, String> ALIAS = createField("alias", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "授权方小程序所设置的微信号，可为空");

    /**
     * The column <code>mini_main.b2c_mp_official_account.verify_type_info</code>. 授权方认证类型，-1代表未认证，0代表微信认证
     */
    public final TableField<MpOfficialAccountRecord, String> VERIFY_TYPE_INFO = createField("verify_type_info", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "授权方认证类型，-1代表未认证，0代表微信认证");

    /**
     * The column <code>mini_main.b2c_mp_official_account.head_img</code>. 头像URL
     */
    public final TableField<MpOfficialAccountRecord, String> HEAD_IMG = createField("head_img", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "头像URL");

    /**
     * The column <code>mini_main.b2c_mp_official_account.func_info</code>. 权限集
     */
    public final TableField<MpOfficialAccountRecord, String> FUNC_INFO = createField("func_info", org.jooq.impl.SQLDataType.CLOB, this, "权限集");

    /**
     * The column <code>mini_main.b2c_mp_official_account.is_auth_ok</code>. 是否授权成功,如果公众号后台取消授权，则为0
     */
    public final TableField<MpOfficialAccountRecord, Byte> IS_AUTH_OK = createField("is_auth_ok", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "是否授权成功,如果公众号后台取消授权，则为0");

    /**
     * The column <code>mini_main.b2c_mp_official_account.last_auth_time</code>. 最后成功授权的时间
     */
    public final TableField<MpOfficialAccountRecord, Timestamp> LAST_AUTH_TIME = createField("last_auth_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最后成功授权的时间");

    /**
     * The column <code>mini_main.b2c_mp_official_account.last_cancel_auth_time</code>. 最后取消授权的时间
     */
    public final TableField<MpOfficialAccountRecord, Timestamp> LAST_CANCEL_AUTH_TIME = createField("last_cancel_auth_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最后取消授权的时间");

    /**
     * The column <code>mini_main.b2c_mp_official_account.create_time</code>.
     */
    public final TableField<MpOfficialAccountRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_main.b2c_mp_official_account.open_pay</code>. 是否开头微信支付
     */
    public final TableField<MpOfficialAccountRecord, Byte> OPEN_PAY = createField("open_pay", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否开头微信支付");

    /**
     * The column <code>mini_main.b2c_mp_official_account.open_card</code>. 是否开通微信卡券功能
     */
    public final TableField<MpOfficialAccountRecord, Byte> OPEN_CARD = createField("open_card", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否开通微信卡券功能");

    /**
     * The column <code>mini_main.b2c_mp_official_account.authorizer_info</code>. 授权者信息,json存储
     */
    public final TableField<MpOfficialAccountRecord, String> AUTHORIZER_INFO = createField("authorizer_info", org.jooq.impl.SQLDataType.CLOB, this, "授权者信息,json存储");

    /**
     * The column <code>mini_main.b2c_mp_official_account.authorization_info</code>. 授权详情,json存储
     */
    public final TableField<MpOfficialAccountRecord, String> AUTHORIZATION_INFO = createField("authorization_info", org.jooq.impl.SQLDataType.CLOB, this, "授权详情,json存储");

    /**
     * The column <code>mini_main.b2c_mp_official_account.pay_mch_id</code>. 支付商户号
     */
    public final TableField<MpOfficialAccountRecord, String> PAY_MCH_ID = createField("pay_mch_id", org.jooq.impl.SQLDataType.VARCHAR(191), this, "支付商户号");

    /**
     * The column <code>mini_main.b2c_mp_official_account.pay_key</code>. 支付密钥
     */
    public final TableField<MpOfficialAccountRecord, String> PAY_KEY = createField("pay_key", org.jooq.impl.SQLDataType.VARCHAR(191), this, "支付密钥");

    /**
     * The column <code>mini_main.b2c_mp_official_account.pay_cert_content</code>. 支付证书内容
     */
    public final TableField<MpOfficialAccountRecord, String> PAY_CERT_CONTENT = createField("pay_cert_content", org.jooq.impl.SQLDataType.CLOB, this, "支付证书内容");

    /**
     * The column <code>mini_main.b2c_mp_official_account.pay_key_content</code>. 支付私钥内容
     */
    public final TableField<MpOfficialAccountRecord, String> PAY_KEY_CONTENT = createField("pay_key_content", org.jooq.impl.SQLDataType.CLOB, this, "支付私钥内容");

    /**
     * The column <code>mini_main.b2c_mp_official_account.principal_name</code>. 公众号的主体名称
     */
    public final TableField<MpOfficialAccountRecord, String> PRINCIPAL_NAME = createField("principal_name", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "公众号的主体名称");

    /**
     * The column <code>mini_main.b2c_mp_official_account.account_type</code>. 公众号类型：0 订阅号, 1微信认证订阅号 2 服务号, 3微信认证服务号
     */
    public final TableField<MpOfficialAccountRecord, Byte> ACCOUNT_TYPE = createField("account_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "公众号类型：0 订阅号, 1微信认证订阅号 2 服务号, 3微信认证服务号");

    /**
     * The column <code>mini_main.b2c_mp_official_account.bind_open_app_id</code>. 绑定开放平台appId
     */
    public final TableField<MpOfficialAccountRecord, String> BIND_OPEN_APP_ID = createField("bind_open_app_id", org.jooq.impl.SQLDataType.VARCHAR(191), this, "绑定开放平台appId");

    /**
     * The column <code>mini_main.b2c_mp_official_account.sys_id</code>. 系统账户ID
     */
    public final TableField<MpOfficialAccountRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "系统账户ID");

    /**
     * The column <code>mini_main.b2c_mp_official_account.qrcode_url</code>. 二维码图片的URL
     */
    public final TableField<MpOfficialAccountRecord, String> QRCODE_URL = createField("qrcode_url", org.jooq.impl.SQLDataType.VARCHAR(500), this, "二维码图片的URL");

    /**
     * Create a <code>mini_main.b2c_mp_official_account</code> table reference
     */
    public MpOfficialAccount() {
        this(DSL.name("b2c_mp_official_account"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_official_account</code> table reference
     */
    public MpOfficialAccount(String alias) {
        this(DSL.name(alias), MP_OFFICIAL_ACCOUNT);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_official_account</code> table reference
     */
    public MpOfficialAccount(Name alias) {
        this(alias, MP_OFFICIAL_ACCOUNT);
    }

    private MpOfficialAccount(Name alias, Table<MpOfficialAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private MpOfficialAccount(Name alias, Table<MpOfficialAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MpOfficialAccount(Table<O> child, ForeignKey<O, MpOfficialAccountRecord> key) {
        super(child, key, MP_OFFICIAL_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MP_OFFICIAL_ACCOUNT_CREATE_TIME, Indexes.MP_OFFICIAL_ACCOUNT_PRIMARY, Indexes.MP_OFFICIAL_ACCOUNT_PRINCIPAL_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MpOfficialAccountRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MP_OFFICIAL_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MpOfficialAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<MpOfficialAccountRecord>>asList(Keys.KEY_B2C_MP_OFFICIAL_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpOfficialAccount as(String alias) {
        return new MpOfficialAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpOfficialAccount as(Name alias) {
        return new MpOfficialAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MpOfficialAccount rename(String name) {
        return new MpOfficialAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MpOfficialAccount rename(Name name) {
        return new MpOfficialAccount(name, null);
    }
}
