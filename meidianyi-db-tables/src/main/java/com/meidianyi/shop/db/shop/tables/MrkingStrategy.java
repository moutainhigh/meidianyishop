/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.MrkingStrategyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MrkingStrategy extends TableImpl<MrkingStrategyRecord> {

    private static final long serialVersionUID = -1822194030;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_mrking_strategy</code>
     */
    public static final MrkingStrategy MRKING_STRATEGY = new MrkingStrategy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MrkingStrategyRecord> getRecordType() {
        return MrkingStrategyRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.id</code>.
     */
    public final TableField<MrkingStrategyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.act_name</code>.
     */
    public final TableField<MrkingStrategyRecord, String> ACT_NAME = createField("act_name", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.type</code>. 类型,1每满减 2满件 3满折 4仅第X件打折
     */
    public final TableField<MrkingStrategyRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "类型,1每满减 2满件 3满折 4仅第X件打折");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.start_time</code>.
     */
    public final TableField<MrkingStrategyRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.end_time</code>.
     */
    public final TableField<MrkingStrategyRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.recommend_goods_id</code>. 指定商品可用
     */
    public final TableField<MrkingStrategyRecord, String> RECOMMEND_GOODS_ID = createField("recommend_goods_id", org.jooq.impl.SQLDataType.CLOB, this, "指定商品可用");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.recommend_cat_id</code>. 指定平台分类可用
     */
    public final TableField<MrkingStrategyRecord, String> RECOMMEND_CAT_ID = createField("recommend_cat_id", org.jooq.impl.SQLDataType.CLOB, this, "指定平台分类可用");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.recommend_brand_id</code>. 指定品牌可用
     */
    public final TableField<MrkingStrategyRecord, String> RECOMMEND_BRAND_ID = createField("recommend_brand_id", org.jooq.impl.SQLDataType.CLOB, this, "指定品牌可用");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.act_type</code>. 活动类型，0-全部商品参与活动；1-选中商品参与活动（由商品、平台分类、商家分类、品牌等ID字符串指定）
     */
    public final TableField<MrkingStrategyRecord, Byte> ACT_TYPE = createField("act_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "活动类型，0-全部商品参与活动；1-选中商品参与活动（由商品、平台分类、商家分类、品牌等ID字符串指定）");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.del_flag</code>.
     */
    public final TableField<MrkingStrategyRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.strategy_priority</code>. 促销活动优先级
     */
    public final TableField<MrkingStrategyRecord, Integer> STRATEGY_PRIORITY = createField("strategy_priority", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "促销活动优先级");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.card_id</code>. 专属会员卡
     */
    public final TableField<MrkingStrategyRecord, String> CARD_ID = createField("card_id", org.jooq.impl.SQLDataType.CLOB, this, "专属会员卡");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.create_time</code>.
     */
    public final TableField<MrkingStrategyRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.update_time</code>. 最后修改时间
     */
    public final TableField<MrkingStrategyRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.status</code>. 状态：1可用，0停用
     */
    public final TableField<MrkingStrategyRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "状态：1可用，0停用");

    /**
     * The column <code>mini_shop_471752.b2c_mrking_strategy.recommend_sort_id</code>. 指定商家分类可用
     */
    public final TableField<MrkingStrategyRecord, String> RECOMMEND_SORT_ID = createField("recommend_sort_id", org.jooq.impl.SQLDataType.CLOB, this, "指定商家分类可用");

    /**
     * Create a <code>mini_shop_471752.b2c_mrking_strategy</code> table reference
     */
    public MrkingStrategy() {
        this(DSL.name("b2c_mrking_strategy"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_mrking_strategy</code> table reference
     */
    public MrkingStrategy(String alias) {
        this(DSL.name(alias), MRKING_STRATEGY);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_mrking_strategy</code> table reference
     */
    public MrkingStrategy(Name alias) {
        this(alias, MRKING_STRATEGY);
    }

    private MrkingStrategy(Name alias, Table<MrkingStrategyRecord> aliased) {
        this(alias, aliased, null);
    }

    private MrkingStrategy(Name alias, Table<MrkingStrategyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MrkingStrategy(Table<O> child, ForeignKey<O, MrkingStrategyRecord> key) {
        super(child, key, MRKING_STRATEGY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MRKING_STRATEGY_MRKING_STRATEGY_DELFLAG, Indexes.MRKING_STRATEGY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MrkingStrategyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MRKING_STRATEGY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MrkingStrategyRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MRKING_STRATEGY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MrkingStrategyRecord>> getKeys() {
        return Arrays.<UniqueKey<MrkingStrategyRecord>>asList(Keys.KEY_B2C_MRKING_STRATEGY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MrkingStrategy as(String alias) {
        return new MrkingStrategy(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MrkingStrategy as(Name alias) {
        return new MrkingStrategy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MrkingStrategy rename(String name) {
        return new MrkingStrategy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MrkingStrategy rename(Name name) {
        return new MrkingStrategy(name, null);
    }
}
