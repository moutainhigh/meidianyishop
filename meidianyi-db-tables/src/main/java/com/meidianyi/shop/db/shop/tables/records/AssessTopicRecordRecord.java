/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables.records;


import com.meidianyi.shop.db.shop.tables.AssessTopicRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessTopicRecordRecord extends UpdatableRecordImpl<AssessTopicRecordRecord> implements Record8<Integer, Integer, Integer, String, Integer, Integer, Timestamp, Timestamp> {

    private static final long serialVersionUID = -120739572;

    /**
     * Setter for <code>mini_shop_471752.b2c_assess_topic_record.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_assess_topic_record.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_assess_topic_record.record_id</code>. 测评活动记录表关联ID
     */
    public void setRecordId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_assess_topic_record.record_id</code>. 测评活动记录表关联ID
     */
    public Integer getRecordId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_assess_topic_record.topic_id</code>. 测评题目的ID
     */
    public void setTopicId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_assess_topic_record.topic_id</code>. 测评题目的ID
     */
    public Integer getTopicId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_assess_topic_record.topic_option</code>. 测评题目选项编号,多选的逗号隔开
     */
    public void setTopicOption(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_assess_topic_record.topic_option</code>. 测评题目选项编号,多选的逗号隔开
     */
    public String getTopicOption() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_assess_topic_record.topic_point</code>. 测评得分
     */
    public void setTopicPoint(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_assess_topic_record.topic_point</code>. 测评得分
     */
    public Integer getTopicPoint() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_assess_topic_record.result_id</code>. 测评结果ID
     */
    public void setResultId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_assess_topic_record.result_id</code>. 测评结果ID
     */
    public Integer getResultId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_assess_topic_record.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_assess_topic_record.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_assess_topic_record.update_time</code>. 最后修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_assess_topic_record.update_time</code>. 最后修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, Integer, String, Integer, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, Integer, String, Integer, Integer, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AssessTopicRecord.ASSESS_TOPIC_RECORD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return AssessTopicRecord.ASSESS_TOPIC_RECORD.RECORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return AssessTopicRecord.ASSESS_TOPIC_RECORD.TOPIC_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return AssessTopicRecord.ASSESS_TOPIC_RECORD.TOPIC_OPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return AssessTopicRecord.ASSESS_TOPIC_RECORD.TOPIC_POINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return AssessTopicRecord.ASSESS_TOPIC_RECORD.RESULT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return AssessTopicRecord.ASSESS_TOPIC_RECORD.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return AssessTopicRecord.ASSESS_TOPIC_RECORD.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getTopicId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTopicOption();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getTopicPoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getResultId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTopicId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTopicOption();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getTopicPoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getResultId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord value2(Integer value) {
        setRecordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord value3(Integer value) {
        setTopicId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord value4(String value) {
        setTopicOption(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord value5(Integer value) {
        setTopicPoint(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord value6(Integer value) {
        setResultId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord value7(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord value8(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessTopicRecordRecord values(Integer value1, Integer value2, Integer value3, String value4, Integer value5, Integer value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssessTopicRecordRecord
     */
    public AssessTopicRecordRecord() {
        super(AssessTopicRecord.ASSESS_TOPIC_RECORD);
    }

    /**
     * Create a detached, initialised AssessTopicRecordRecord
     */
    public AssessTopicRecordRecord(Integer id, Integer recordId, Integer topicId, String topicOption, Integer topicPoint, Integer resultId, Timestamp createTime, Timestamp updateTime) {
        super(AssessTopicRecord.ASSESS_TOPIC_RECORD);

        set(0, id);
        set(1, recordId);
        set(2, topicId);
        set(3, topicOption);
        set(4, topicPoint);
        set(5, resultId);
        set(6, createTime);
        set(7, updateTime);
    }
}
