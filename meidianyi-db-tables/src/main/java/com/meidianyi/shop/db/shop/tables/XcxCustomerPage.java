/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.XcxCustomerPageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XcxCustomerPage extends TableImpl<XcxCustomerPageRecord> {

    private static final long serialVersionUID = -933136387;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_xcx_customer_page</code>
     */
    public static final XcxCustomerPage XCX_CUSTOMER_PAGE = new XcxCustomerPage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XcxCustomerPageRecord> getRecordType() {
        return XcxCustomerPageRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.page_id</code>.
     */
    public final TableField<XcxCustomerPageRecord, Integer> PAGE_ID = createField("page_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.shop_id</code>. 店铺id
     */
    public final TableField<XcxCustomerPageRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺id");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.page_name</code>.
     */
    public final TableField<XcxCustomerPageRecord, String> PAGE_NAME = createField("page_name", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.page_type</code>. 是否为首页1为首页，0非首页
     */
    public final TableField<XcxCustomerPageRecord, Byte> PAGE_TYPE = createField("page_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否为首页1为首页，0非首页");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.page_enabled</code>. 是否可用
     */
    public final TableField<XcxCustomerPageRecord, Byte> PAGE_ENABLED = createField("page_enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "是否可用");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.page_tpl_type</code>. 模板类型:0自定义模板，1默认模板，2美女模板，3自定义首页
     */
    public final TableField<XcxCustomerPageRecord, Byte> PAGE_TPL_TYPE = createField("page_tpl_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "模板类型:0自定义模板，1默认模板，2美女模板，3自定义首页");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.page_content</code>. 页面内容，json格式存储
     */
    public final TableField<XcxCustomerPageRecord, String> PAGE_CONTENT = createField("page_content", org.jooq.impl.SQLDataType.CLOB, this, "页面内容，json格式存储");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.page_publish_content</code>. 正式页面内容，json格式存储
     */
    public final TableField<XcxCustomerPageRecord, String> PAGE_PUBLISH_CONTENT = createField("page_publish_content", org.jooq.impl.SQLDataType.CLOB, this, "正式页面内容，json格式存储");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.page_state</code>. 状态：0未发布，1已发布
     */
    public final TableField<XcxCustomerPageRecord, Byte> PAGE_STATE = createField("page_state", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态：0未发布，1已发布");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.cat_id</code>. 页面分类id
     */
    public final TableField<XcxCustomerPageRecord, Integer> CAT_ID = createField("cat_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "页面分类id");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.create_time</code>.
     */
    public final TableField<XcxCustomerPageRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_xcx_customer_page.update_time</code>. 最后修改时间
     */
    public final TableField<XcxCustomerPageRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_xcx_customer_page</code> table reference
     */
    public XcxCustomerPage() {
        this(DSL.name("b2c_xcx_customer_page"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_xcx_customer_page</code> table reference
     */
    public XcxCustomerPage(String alias) {
        this(DSL.name(alias), XCX_CUSTOMER_PAGE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_xcx_customer_page</code> table reference
     */
    public XcxCustomerPage(Name alias) {
        this(alias, XCX_CUSTOMER_PAGE);
    }

    private XcxCustomerPage(Name alias, Table<XcxCustomerPageRecord> aliased) {
        this(alias, aliased, null);
    }

    private XcxCustomerPage(Name alias, Table<XcxCustomerPageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> XcxCustomerPage(Table<O> child, ForeignKey<O, XcxCustomerPageRecord> key) {
        super(child, key, XCX_CUSTOMER_PAGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XCX_CUSTOMER_PAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<XcxCustomerPageRecord, Integer> getIdentity() {
        return Keys.IDENTITY_XCX_CUSTOMER_PAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<XcxCustomerPageRecord> getPrimaryKey() {
        return Keys.KEY_B2C_XCX_CUSTOMER_PAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<XcxCustomerPageRecord>> getKeys() {
        return Arrays.<UniqueKey<XcxCustomerPageRecord>>asList(Keys.KEY_B2C_XCX_CUSTOMER_PAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XcxCustomerPage as(String alias) {
        return new XcxCustomerPage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XcxCustomerPage as(Name alias) {
        return new XcxCustomerPage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public XcxCustomerPage rename(String name) {
        return new XcxCustomerPage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public XcxCustomerPage rename(Name name) {
        return new XcxCustomerPage(name, null);
    }
}
