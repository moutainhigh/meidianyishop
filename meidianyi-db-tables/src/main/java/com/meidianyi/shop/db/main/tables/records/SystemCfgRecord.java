/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables.records;


import com.meidianyi.shop.db.main.tables.SystemCfg;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemCfgRecord extends UpdatableRecordImpl<SystemCfgRecord> implements Record4<Short, Integer, String, String> {

    private static final long serialVersionUID = -973738243;

    /**
     * Setter for <code>mini_main.b2c_system_cfg.rec_id</code>.
     */
    public void setRecId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_main.b2c_system_cfg.rec_id</code>.
     */
    public Short getRecId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>mini_main.b2c_system_cfg.sys_id</code>.
     */
    public void setSysId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_main.b2c_system_cfg.sys_id</code>.
     */
    public Integer getSysId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mini_main.b2c_system_cfg.k</code>.
     */
    public void setK(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_main.b2c_system_cfg.k</code>.
     */
    public String getK() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mini_main.b2c_system_cfg.v</code>.
     */
    public void setV(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_main.b2c_system_cfg.v</code>.
     */
    public String getV() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Short, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Short, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field1() {
        return SystemCfg.SYSTEM_CFG.REC_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return SystemCfg.SYSTEM_CFG.SYS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SystemCfg.SYSTEM_CFG.K;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SystemCfg.SYSTEM_CFG.V;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component1() {
        return getRecId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getSysId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getK();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getV();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value1() {
        return getRecId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getSysId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getK();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getV();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemCfgRecord value1(Short value) {
        setRecId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemCfgRecord value2(Integer value) {
        setSysId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemCfgRecord value3(String value) {
        setK(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemCfgRecord value4(String value) {
        setV(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemCfgRecord values(Short value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SystemCfgRecord
     */
    public SystemCfgRecord() {
        super(SystemCfg.SYSTEM_CFG);
    }

    /**
     * Create a detached, initialised SystemCfgRecord
     */
    public SystemCfgRecord(Short recId, Integer sysId, String k, String v) {
        super(SystemCfg.SYSTEM_CFG);

        set(0, recId);
        set(1, sysId);
        set(2, k);
        set(3, v);
    }
}
