/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.tables.records.UserScoreRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserScore extends TableImpl<UserScoreRecord> {

    private static final long serialVersionUID = 272985273;

    /**
     * The reference instance of <code>jmini_shop_444801.b2c_user_score</code>
     */
    public static final UserScore USER_SCORE = new UserScore();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserScoreRecord> getRecordType() {
        return UserScoreRecord.class;
    }

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.id</code>.
     */
    public final TableField<UserScoreRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.user_id</code>.
     */
    public final TableField<UserScoreRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.score</code>.
     */
    public final TableField<UserScoreRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.status</code>. 0:未使用 1:已使用 2：已过期 3：已退款
     */
    public final TableField<UserScoreRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:未使用 1:已使用 2：已过期 3：已退款");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.flow_no</code>. 积分流水号
     */
    public final TableField<UserScoreRecord, String> FLOW_NO = createField("flow_no", org.jooq.impl.SQLDataType.VARCHAR(20), this, "积分流水号");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.usable_score</code>. 可用积分
     */
    public final TableField<UserScoreRecord, Integer> USABLE_SCORE = createField("usable_score", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "可用积分");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.identity_id</code>. 关联其他属性：例如order_sn
     */
    public final TableField<UserScoreRecord, String> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.VARCHAR(500), this, "关联其他属性：例如order_sn");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.goods_id</code>.
     */
    public final TableField<UserScoreRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.order_sn</code>.
     */
    public final TableField<UserScoreRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.shop_id</code>. 店铺id
     */
    public final TableField<UserScoreRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺id");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.desc</code>.
     */
    public final TableField<UserScoreRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.remark_id</code>. 备注模板id
     */
    public final TableField<UserScoreRecord, String> REMARK_ID = createField("remark_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "备注模板id");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.remark_data</code>. 备注模板数据
     */
    public final TableField<UserScoreRecord, String> REMARK_DATA = createField("remark_data", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "备注模板数据");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.create_time</code>.
     */
    public final TableField<UserScoreRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.expire_time</code>.
     */
    public final TableField<UserScoreRecord, Timestamp> EXPIRE_TIME = createField("expire_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>jmini_shop_444801.b2c_user_score.admin_user</code>. 操作员
     */
    public final TableField<UserScoreRecord, String> ADMIN_USER = createField("admin_user", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "操作员");

    /**
     * Create a <code>jmini_shop_444801.b2c_user_score</code> table reference
     */
    public UserScore() {
        this(DSL.name("b2c_user_score"), null);
    }

    /**
     * Create an aliased <code>jmini_shop_444801.b2c_user_score</code> table reference
     */
    public UserScore(String alias) {
        this(DSL.name(alias), USER_SCORE);
    }

    /**
     * Create an aliased <code>jmini_shop_444801.b2c_user_score</code> table reference
     */
    public UserScore(Name alias) {
        this(alias, USER_SCORE);
    }

    private UserScore(Name alias, Table<UserScoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserScore(Name alias, Table<UserScoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserScore(Table<O> child, ForeignKey<O, UserScoreRecord> key) {
        super(child, key, USER_SCORE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_SCORE_PRIMARY, Indexes.USER_SCORE_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserScoreRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserScoreRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_SCORE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserScoreRecord>> getKeys() {
        return Arrays.<UniqueKey<UserScoreRecord>>asList(Keys.KEY_B2C_USER_SCORE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserScore as(String alias) {
        return new UserScore(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserScore as(Name alias) {
        return new UserScore(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserScore rename(String name) {
        return new UserScore(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserScore rename(Name name) {
        return new UserScore(name, null);
    }
}
