/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.shop.tables;


import com.meidianyi.shop.db.shop.Indexes;
import com.meidianyi.shop.db.shop.Keys;
import com.meidianyi.shop.db.shop.MiniShop_471752;
import com.meidianyi.shop.db.shop.tables.records.UserAnnouncementRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户公告关联表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAnnouncement extends TableImpl<UserAnnouncementRecord> {

    private static final long serialVersionUID = 1870561359;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user_announcement</code>
     */
    public static final UserAnnouncement USER_ANNOUNCEMENT = new UserAnnouncement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserAnnouncementRecord> getRecordType() {
        return UserAnnouncementRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user_announcement.announcement_id</code>.
     */
    public final TableField<UserAnnouncementRecord, Integer> ANNOUNCEMENT_ID = createField("announcement_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_announcement.user_id</code>. 用户id
     */
    public final TableField<UserAnnouncementRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户id");

    /**
     * The column <code>mini_shop_471752.b2c_user_announcement.message_id</code>. 公告id
     */
    public final TableField<UserAnnouncementRecord, Integer> MESSAGE_ID = createField("message_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "公告id");

    /**
     * The column <code>mini_shop_471752.b2c_user_announcement.message_status</code>. 消息状态 0：未读、1：已读、3：置顶消息 默认0
     */
    public final TableField<UserAnnouncementRecord, Byte> MESSAGE_STATUS = createField("message_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "消息状态 0：未读、1：已读、3：置顶消息 默认0");

    /**
     * The column <code>mini_shop_471752.b2c_user_announcement.is_delete</code>. 删除
     */
    public final TableField<UserAnnouncementRecord, Byte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "删除");

    /**
     * The column <code>mini_shop_471752.b2c_user_announcement.create_time</code>.
     */
    public final TableField<UserAnnouncementRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_announcement.update_time</code>. 最后修改时间
     */
    public final TableField<UserAnnouncementRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_471752.b2c_user_announcement</code> table reference
     */
    public UserAnnouncement() {
        this(DSL.name("b2c_user_announcement"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_announcement</code> table reference
     */
    public UserAnnouncement(String alias) {
        this(DSL.name(alias), USER_ANNOUNCEMENT);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_announcement</code> table reference
     */
    public UserAnnouncement(Name alias) {
        this(alias, USER_ANNOUNCEMENT);
    }

    private UserAnnouncement(Name alias, Table<UserAnnouncementRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserAnnouncement(Name alias, Table<UserAnnouncementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户公告关联表"));
    }

    public <O extends Record> UserAnnouncement(Table<O> child, ForeignKey<O, UserAnnouncementRecord> key) {
        super(child, key, USER_ANNOUNCEMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_ANNOUNCEMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserAnnouncementRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_ANNOUNCEMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserAnnouncementRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_ANNOUNCEMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserAnnouncementRecord>> getKeys() {
        return Arrays.<UniqueKey<UserAnnouncementRecord>>asList(Keys.KEY_B2C_USER_ANNOUNCEMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAnnouncement as(String alias) {
        return new UserAnnouncement(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAnnouncement as(Name alias) {
        return new UserAnnouncement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAnnouncement rename(String name) {
        return new UserAnnouncement(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAnnouncement rename(Name name) {
        return new UserAnnouncement(name, null);
    }
}
