/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables;


import com.meidianyi.shop.db.main.Indexes;
import com.meidianyi.shop.db.main.Keys;
import com.meidianyi.shop.db.main.MiniMain;
import com.meidianyi.shop.db.main.tables.records.AppRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class App extends TableImpl<AppRecord> {

    private static final long serialVersionUID = -2040371842;

    /**
     * The reference instance of <code>mini_main.b2c_app</code>
     */
    public static final App APP = new App();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AppRecord> getRecordType() {
        return AppRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_app.app_id</code>.
     */
    public final TableField<AppRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>mini_main.b2c_app.app_name</code>. 应用名称
     */
    public final TableField<AppRecord, String> APP_NAME = createField("app_name", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "应用名称");

    /**
     * The column <code>mini_main.b2c_app.app_secret</code>.
     */
    public final TableField<AppRecord, String> APP_SECRET = createField("app_secret", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_main.b2c_app.create_time</code>.
     */
    public final TableField<AppRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>mini_main.b2c_app</code> table reference
     */
    public App() {
        this(DSL.name("b2c_app"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_app</code> table reference
     */
    public App(String alias) {
        this(DSL.name(alias), APP);
    }

    /**
     * Create an aliased <code>mini_main.b2c_app</code> table reference
     */
    public App(Name alias) {
        this(alias, APP);
    }

    private App(Name alias, Table<AppRecord> aliased) {
        this(alias, aliased, null);
    }

    private App(Name alias, Table<AppRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> App(Table<O> child, ForeignKey<O, AppRecord> key) {
        super(child, key, APP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.APP_APP_ID, Indexes.APP_APP_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AppRecord>> getKeys() {
        return Arrays.<UniqueKey<AppRecord>>asList(Keys.KEY_B2C_APP_APP_ID, Keys.KEY_B2C_APP_APP_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public App as(String alias) {
        return new App(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public App as(Name alias) {
        return new App(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public App rename(String name) {
        return new App(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public App rename(Name name) {
        return new App(name, null);
    }
}
