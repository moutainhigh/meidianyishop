/*
 * This file is generated by jOOQ.
 */
package com.meidianyi.shop.db.main.tables;


import com.meidianyi.shop.db.main.Indexes;
import com.meidianyi.shop.db.main.Keys;
import com.meidianyi.shop.db.main.MiniMain;
import com.meidianyi.shop.db.main.tables.records.ShopSmsConfigRecord;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 店铺短信配置表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShopSmsConfig extends TableImpl<ShopSmsConfigRecord> {

    private static final long serialVersionUID = 1476142606;

    /**
     * The reference instance of <code>jmini_main.b2c_shop_sms_config</code>
     */
    public static final ShopSmsConfig SHOP_SMS_CONFIG = new ShopSmsConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopSmsConfigRecord> getRecordType() {
        return ShopSmsConfigRecord.class;
    }

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.id</code>.
     */
    public final TableField<ShopSmsConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.shop_id</code>. 店铺id
     */
    public final TableField<ShopSmsConfigRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "店铺id");

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.user_check_code_num</code>. 每个用户可发送验证码数量
     */
    public final TableField<ShopSmsConfigRecord, Integer> USER_CHECK_CODE_NUM = createField("user_check_code_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("15", org.jooq.impl.SQLDataType.INTEGER)), this, "每个用户可发送验证码数量");

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.patient_check_code_num</code>. 每个患者可发送验证码数量
     */
    public final TableField<ShopSmsConfigRecord, Integer> PATIENT_CHECK_CODE_NUM = createField("patient_check_code_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("15", org.jooq.impl.SQLDataType.INTEGER)), this, "每个患者可发送验证码数量");

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.marketing_num</code>. 每天可发送营销短信数量
     */
    public final TableField<ShopSmsConfigRecord, Integer> MARKETING_NUM = createField("marketing_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("2000", org.jooq.impl.SQLDataType.INTEGER)), this, "每天可发送营销短信数量");

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.industry_num</code>. 每天可发送行业短信数量
     */
    public final TableField<ShopSmsConfigRecord, Integer> INDUSTRY_NUM = createField("industry_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("2000", org.jooq.impl.SQLDataType.INTEGER)), this, "每天可发送行业短信数量");

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.is_delete</code>.
     */
    public final TableField<ShopSmsConfigRecord, Byte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.create_time</code>.
     */
    public final TableField<ShopSmsConfigRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jmini_main.b2c_shop_sms_config.update_time</code>. 最后修改时间
     */
    public final TableField<ShopSmsConfigRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>jmini_main.b2c_shop_sms_config</code> table reference
     */
    public ShopSmsConfig() {
        this(DSL.name("b2c_shop_sms_config"), null);
    }

    /**
     * Create an aliased <code>jmini_main.b2c_shop_sms_config</code> table reference
     */
    public ShopSmsConfig(String alias) {
        this(DSL.name(alias), SHOP_SMS_CONFIG);
    }

    /**
     * Create an aliased <code>jmini_main.b2c_shop_sms_config</code> table reference
     */
    public ShopSmsConfig(Name alias) {
        this(alias, SHOP_SMS_CONFIG);
    }

    private ShopSmsConfig(Name alias, Table<ShopSmsConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShopSmsConfig(Name alias, Table<ShopSmsConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("店铺短信配置表"));
    }

    public <O extends Record> ShopSmsConfig(Table<O> child, ForeignKey<O, ShopSmsConfigRecord> key) {
        super(child, key, SHOP_SMS_CONFIG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHOP_SMS_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShopSmsConfigRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHOP_SMS_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShopSmsConfigRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHOP_SMS_CONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShopSmsConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<ShopSmsConfigRecord>>asList(Keys.KEY_B2C_SHOP_SMS_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopSmsConfig as(String alias) {
        return new ShopSmsConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopSmsConfig as(Name alias) {
        return new ShopSmsConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopSmsConfig rename(String name) {
        return new ShopSmsConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopSmsConfig rename(Name name) {
        return new ShopSmsConfig(name, null);
    }
}
