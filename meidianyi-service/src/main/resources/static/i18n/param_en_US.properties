id=primary key id
status= status
name=name
goodsId s merchandise
goods s goods
productId s product specifications
products = Product specifications
activityId=activities
startTime= Start Time
endTime = End Time
imgCatName = Picture Group Name
imgCatParentId = Picture Group Parent id
cartNumber=Number of shopping carts
activityNames=name of activity
navType=The navigation type
account=account
actFirst=priority
ruleId=rule







wxAppRemoveCartProductsParam.recIds = Shopping cart records
wxAppSwitchCartProductsParam.recIds = Shopping cart records
groupBuyAnalysis.Id = Group activity ID
groupBuyParam.goodsId = Selling group goods
groupBuyParam.limitAmount = Group limit
groupBuyParam.joinLimit = Limited number of participants per person
groupBuyParam.openLimit = Limits on opening groups per person
groupBuyParam.startTime = Start time
groupBuyParam.activityType = Activity type
groupBuyParam.shippingType = Whether free shipping
groupBuyParam.product = Product specifications
groupBuyParam.product.productId = Product specifications
groupBuyParam.product.goodsId=Product id
groupBuyParam.product.groupPrice = Group price
groupBuyParam.product.stock = Stock
groupBuyParam.product.saleNum = Sales
groupBuyParam.product.grouperPrice = Unity Price
bottomNavigatorConfig.text = Navigation text
userCenterConfigParamList.list.title.CharacterValid = Title
freeShippingParam.ruleList.area=Package mail area
freeShippingParam.ruleList.num=Full number
wxAppAddGoodsToCartParam.prdId=goods
wxAppAddGoodsToCartParam.goodsNumber=goods number
groupBuyInfoParam.groupId= groupBuy Id
lotteryParam.prizeList.chanceNumerator=The probability of lucky draw
lotteryParam.prizeList.chanceDenominator=The probability of lucky draw

com.vpu.validation.constraints.CharacterValid.CnAEn = Only Chinese and English can be entered
com.vpu.validation.constraints.CharacterValid.CnAEn.min = A minimum of {chineseNum} Chinese or {min} English
com.vpu.validation.constraints.CharacterValid.CnAEn.max = Enter up to {chineseNum} Chinese or {max} English
com.vpu.validation.constraints.CharacterValid.English = Only English can be entered
com.vpu.validation.constraints.CharacterValid.English.min = Enter at least {min} English
com.vpu.validation.constraints.CharacterValid.English.max = Enter at most {max} English
com.vpu.validation.constraints.CharacterValid.Chinese =  Only Chinese can be entered
com.vpu.validation.constraints.CharacterValid.Chinese.min = Enter at least {min} Chinese
com.vpu.validation.constraints.CharacterValid.Chinese.max = Enter at most {max} Chinese
com.vpu.validation.constraints.CharacterValid.min = Enter at least {min} characters
com.vpu.validation.constraints.CharacterValid.max =Enter at most {max} characters
com.vpu.validation.constraints.ListValid.notNull.message = cannot be empty
com.vpu.validation.constraints.listValid.min.message= Number cannot be less than {min}
com.vpu.validation.constraints.ListValid.max.message =Number cannot be greater than {max}





javax.validation.constraints.AssertFalse.message     = must be false
javax.validation.constraints.AssertTrue.message      = must be true
javax.validation.constraints.DecimalMax.message      = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message      = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message          = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Email.message           = must be a well-formed email address
javax.validation.constraints.Future.message          = must be a future date
javax.validation.constraints.FutureOrPresent.message = must be a date in the present or in the future
javax.validation.constraints.Max.message             = must be less than or equal to {value}
javax.validation.constraints.Min.message             = must be greater than or equal to {value}
javax.validation.constraints.Negative.message        = must be less than 0
javax.validation.constraints.NegativeOrZero.message  = must be less than or equal to 0
javax.validation.constraints.NotBlank.message        = must not be blank
javax.validation.constraints.NotEmpty.message        = must not be empty
javax.validation.constraints.NotNull.message         = must not be null
javax.validation.constraints.Null.message            = must be null
javax.validation.constraints.Past.message            = must be a past date
javax.validation.constraints.PastOrPresent.message   = must be a date in the past or in the present
javax.validation.constraints.Pattern.message         = must match "{regexp}"
javax.validation.constraints.Positive.message        = must be greater than 0
javax.validation.constraints.PositiveOrZero.message  = must be greater than or equal to 0
javax.validation.constraints.Size.message            = size must be between {min} and {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
org.hibernate.validator.constraints.Currency.message                = invalid currency (must be one of {value})
org.hibernate.validator.constraints.EAN.message                     = invalid {type} barcode
org.hibernate.validator.constraints.Email.message                   = not a well-formed email address
org.hibernate.validator.constraints.ISBN.message                    = invalid ISBN
org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
org.hibernate.validator.constraints.CodePointLength.message         = length must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message               = the check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = the check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = the check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = the check digit for ${validatedValue} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message                = may not be empty
org.hibernate.validator.constraints.NotEmpty.message                = may not be empty
org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.UniqueElements.message          = must only contain unique elements
org.hibernate.validator.constraints.URL.message                     = must be a valid URL

org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number

org.hibernate.validator.constraints.pl.REGON.message                = invalid Polish Taxpayer Identification Number (REGON)
org.hibernate.validator.constraints.pl.NIP.message                  = invalid VAT Identification Number (NIP)
org.hibernate.validator.constraints.pl.PESEL.message                = invalid Polish National Identification Number (PESEL)

org.hibernate.validator.constraints.time.DurationMax.message        = must be shorter than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
org.hibernate.validator.constraints.time.DurationMin.message        = must be longer than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
